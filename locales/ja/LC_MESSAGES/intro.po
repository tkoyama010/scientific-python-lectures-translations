# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025
# This file is distributed under the same license as the Scientific Python Lectures package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Tetsuo Koyama <tkoyama010@gmail.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Scientific Python Lectures 2025.1rc0.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-22 00:15+0000\n"
"PO-Revision-Date: 2024-11-27 19:15+0000\n"
"Last-Translator: Tetsuo Koyama <tkoyama010@gmail.com>, 2025\n"
"Language-Team: Japanese (https://app.transifex.com/tkoyama010/teams/202028/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../scientific-python-lectures/intro/help/help.rst:4
msgid "Getting help and finding documentation"
msgstr "ヘルプの入手とドキュメントの検索"

#: ../../scientific-python-lectures/intro/help/help.rst:6
msgid "**Author**: *Emmanuelle Gouillart*"
msgstr "**Author**: *Emmanuelle Gouillart*"

#: ../../scientific-python-lectures/intro/help/help.rst:8
msgid ""
"Rather than knowing all functions in NumPy and SciPy, it is important to "
"find rapidly information throughout the documentation and the available "
"help. Here are some ways to get information:"
msgstr ""
"NumPyとSciPyのすべての関数を知ることよりも、ドキュメントや利用可能なヘルプを通して迅速に情報を見つけることが重要です。 "
"ここでは、情報を得るためのいくつかの方法を紹介します:"

#: ../../scientific-python-lectures/intro/help/help.rst:12
msgid ""
"In Ipython, ``help function`` opens the docstring of the function. Only type"
" the beginning of the function's name and use tab completion to display the "
"matching functions."
msgstr ""
"Ipython では、``help function`` で関数の docstring が開きます。 "
"関数名の先頭だけを入力し、一致する関数を表示するにはタブ補完を使ってください。"

#: ../../scientific-python-lectures/intro/help/help.rst:23
msgid ""
"In Ipython it is not possible to open a separated window for help and "
"documentation; however one can always open a second ``Ipython`` shell just "
"to display help and docstrings..."
msgstr ""
"Ipythonでは、ヘルプとドキュメント用のウィンドウを分けて開くことはできません; しかし、ヘルプとdocstringを表示するためだけに、2番目の "
"``Ipython`` シェルを開くことはできます..."

#: ../../scientific-python-lectures/intro/help/help.rst:27
msgid ""
"Numpy's and Scipy's documentations can be browsed online on "
"https://scipy.org and https://numpy.org. The ``search`` button is quite "
"useful inside the reference documentation of the two packages."
msgstr ""
"Numpyのドキュメントは https://scipy.org 、Scipyのドキュメントは https://numpy.org 。 "
"この2つのパッケージのリファレンスドキュメントは ``search`` ボタンがとても便利です。"

#: ../../scientific-python-lectures/intro/help/help.rst:32
msgid ""
"Tutorials on various topics as well as the complete API with all docstrings "
"are found on this website."
msgstr "様々なトピックに関するチュートリアルや、すべての docstring を含む完全なAPIは、このウェブサイトにあります。"

#: ../../scientific-python-lectures/intro/help/help.rst:35
msgid ""
"Numpy's and Scipy's documentation is enriched and updated on a regular basis"
" by users on a wiki https://numpy.org/doc/stable/. As a result, some "
"docstrings are clearer or more detailed on the wiki, and you may want to "
"read directly the documentation on the wiki instead of the official "
"documentation website. Note that anyone can create an account on the wiki "
"and write better documentation; this is an easy way to contribute to an "
"open-source project and improve the tools you are using!"
msgstr ""
"NumpyとScipyのドキュメントは、wiki https://numpy.org/doc/stable/ "
"のユーザーによって定期的に充実され、更新されています。 その結果、いくつかの docstring "
"はwikiの方がわかりやすかったり詳しかったりするので、公式ドキュメントのウェブサイトではなく、wikiのドキュメントを直接読むことをお勧めします。 "
"誰でもwikiにアカウントを作成し、より良いドキュメントを書くことができることに注意してください。 "
"これはオープンソースプロジェクトに貢献し、あなたが使っているツールを改善する簡単な方法です！"

#: ../../scientific-python-lectures/intro/help/help.rst:44
msgid ""
"The SciPy Cookbook https://scipy-cookbook.readthedocs.io gives recipes on "
"many common problems frequently encountered, such as fitting data points, "
"solving ODE, etc."
msgstr ""
"SciPy クックブック https://scipy-cookbook.readthedocs.io は、データポイントのフィッティング、ODE "
"の解法など、頻繁に遭遇する多くの一般的な問題についてのレシピを提供しています。"

#: ../../scientific-python-lectures/intro/help/help.rst:48
msgid ""
"Matplotlib's website https://matplotlib.org/ features a very nice "
"**gallery** with a large number of plots, each of them shows both the source"
" code and the resulting plot. This is very useful for learning by example. "
"More standard documentation is also available."
msgstr ""
"Matplotlibのウェブサイト https://matplotlib.org/ 、多数のプロットが掲載されたとても素晴らしい **ギャラリー** "
"があり、それぞれのプロットはソースコードと結果のプロットの両方を表示しています。 これは見本で学ぶのにとても便利です。 "
"より標準的な文書も用意されています。"

#: ../../scientific-python-lectures/intro/help/help.rst:54
msgid ""
"In Ipython, the magical function ``%psearch`` search for objects matching "
"patterns. This is useful if, for example, one does not know the exact name  "
"of a function."
msgstr ""
"Ipythonでは、パターンにマッチするオブジェクトを検索する魔法の関数 ``%psearch`` があります。 "
"これは、例えば関数の正確な名前がわからない場合に便利です。"

#: ../../scientific-python-lectures/intro/help/help.rst:64
msgid ""
"If everything listed above fails (and Google doesn't have the answer)... "
"don't despair! There is a vibrant Scientific Python community. Scientific "
"Python is present on various platform. https://scientific-"
"python.org/community/"
msgstr ""
"もし上記のすべてが失敗しても (そしてGoogleが答えを持っていなくても) ...絶望しないでください！ 活気あるScientific "
"Pythonコミュニティがあります。 Scientific Pythonは様々なプラットフォームに存在します。 https://scientific-"
"python.org/community/"

#: ../../scientific-python-lectures/intro/help/help.rst:70
msgid ""
"Packages like SciPy and NumPy also have their own channels. Have a look at "
"their respective websites to find out how to engage with users and "
"maintainers."
msgstr ""
"SciPyやNumPyのようなパッケージにも独自のチャンネルがあります。 それぞれのウェブサイトを見て、ユーザやメンテナとの関わり方を見つけてください。"

#: ../../scientific-python-lectures/intro/intro.rst:218
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:138
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:175
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:235
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:264
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:296
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:333
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:372
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:409
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:444
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:490
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:574
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:757
#: ../../../../../../../tmp/<rst_epilog>:9
msgid "|clear-floats|"
msgstr "|clear-floats|"

#: ../../scientific-python-lectures/intro/index.rst:2
msgid "Getting started with Python for science"
msgstr "科学のためのPython入門"

#: ../../scientific-python-lectures/intro/index.rst:4
msgid ""
"This part of the *Scientific Python Lectures* is a self-contained "
"introduction to everything that is needed to use Python for science, from "
"the language itself, to numerical computing or plotting."
msgstr ""
"*Scientific Python Lectures* "
"のこのパートは、言語そのものから数値計算やプロットまで、科学にPythonを使うために必要なすべてを自己完結的に紹介しています。"

#: ../../scientific-python-lectures/intro/intro.rst:2
msgid "Python scientific computing ecosystem"
msgstr "Python科学計算エコシステム"

#: ../../scientific-python-lectures/intro/intro.rst:4
msgid ""
"**Authors**: *Fernando Perez, Emmanuelle Gouillart, Gaël Varoquaux, Valentin"
" Haenel*"
msgstr ""
"**著者**: *Fernando Perez, Emmanuelle Gouillart, Gaël Varoquaux, Valentin "
"Haenel*"

#: ../../scientific-python-lectures/intro/intro.rst:8
msgid "Why Python?"
msgstr "なぜ Python?"

#: ../../scientific-python-lectures/intro/intro.rst:11
msgid "The scientist's needs"
msgstr "科学者のニーズ"

#: ../../scientific-python-lectures/intro/intro.rst:13
msgid "Get data (simulation, experiment control),"
msgstr "データを取得する (シミュレーション、実験コントロール)、"

#: ../../scientific-python-lectures/intro/intro.rst:15
msgid "Manipulate and process data,"
msgstr "データを操作し、処理する、"

#: ../../scientific-python-lectures/intro/intro.rst:17
msgid ""
"Visualize results, quickly to understand, but also with high quality "
"figures, for reports or publications."
msgstr "報告書や出版物用に、結果を素早く理解できるように視覚化するだけでなく、高品質な図も作成できます。"

#: ../../scientific-python-lectures/intro/intro.rst:21
msgid "Python's strengths"
msgstr "Pythonの強み"

#: ../../scientific-python-lectures/intro/intro.rst:23
msgid ""
"**Batteries included** Rich collection of already existing **bricks** of "
"classic numerical methods, plotting or data processing tools. We don't want "
"to re-program the plotting of a curve, a Fourier transform or a fitting "
"algorithm. Don't reinvent the wheel!"
msgstr ""
"**バッテリーを含む** 古典的な数値手法、プロット、データ処理ツールの既存の **ブリック** の豊富なコレクション。 "
"曲線のプロット、フーリエ変換、フィッティングアルゴリズムを再プログラムする必要はありません。 車輪の再発明はやめよう！"

#: ../../scientific-python-lectures/intro/intro.rst:28
msgid ""
"**Easy to learn** Most scientists are not paid as programmers, neither have "
"they been trained so. They need to be able to draw a curve, smooth a signal,"
" do a Fourier transform in a few minutes."
msgstr ""
"**学びやすい** ほとんどの科学者はプログラマーとして給料をもらっているわけではないし、そのような訓練も受けていません。 "
"彼らが必要とするのは、曲線を描き、信号を平滑化し、フーリエ変換を数分で行えることです。"

#: ../../scientific-python-lectures/intro/intro.rst:32
msgid ""
"**Easy communication** To keep code alive within a lab or a company it "
"should be as readable as a book by collaborators, students, or maybe "
"customers. Python syntax is simple, avoiding strange symbols or lengthy "
"routine specifications that would divert the reader from mathematical or "
"scientific understanding of the code."
msgstr ""
"**簡単なコミュニケーション** "
"研究室や企業内でコードを存続させるためには、共同研究者や学生、あるいは顧客が本と同じように読めるものでなければなりません。 "
"Pythonの文法はシンプルで、読者をコードの数学的・科学的理解から逸脱させるような奇妙な記号や長いルーチン仕様は避けています。"

#: ../../scientific-python-lectures/intro/intro.rst:38
msgid ""
"**Efficient code** Python numerical modules are computationally efficient. "
"But needless to say that a very fast code becomes useless if too much time "
"is spent writing it. Python aims for quick development times and quick "
"execution times."
msgstr ""
"**効率的なコード** Pythonの数値計算モジュールは計算効率が高いです。 "
"しかし、言うまでもなく、非常に高速なコードであっても、それを書くのに多くの時間を費やしてしまっては意味がありません。Pythonは素早い開発時間と素早い実行時間を目指しています。"

#: ../../scientific-python-lectures/intro/intro.rst:43
msgid ""
"**Universal** Python is a language used for many different problems. "
"Learning Python avoids learning a new software for each new problem."
msgstr ""
"**普遍的** Pythonは様々な問題に使われる言語です。 Pythonを学ぶことで、新しい問題ごとに新しいソフトウェアを学ぶ必要がなくなります。"

#: ../../scientific-python-lectures/intro/intro.rst:47
msgid "How does Python compare to other solutions?"
msgstr "Pythonは他のソリューションと比べてどうですか？"

#: ../../scientific-python-lectures/intro/intro.rst:50
msgid "Compiled languages: C, C++, Fortran..."
msgstr "コンパイル言語: C、C++、Fortran..."

#: ../../scientific-python-lectures/intro/intro.rst:0
msgid "Pros"
msgstr "長所"

#: ../../scientific-python-lectures/intro/intro.rst:54
msgid ""
"Very fast. For heavy computations, it's difficult to outperform these "
"languages."
msgstr "非常に速いです。重い計算では、これらの言語を上回るのは難しいです。"

#: ../../scientific-python-lectures/intro/intro.rst:0
msgid "Cons"
msgstr "短所"

#: ../../scientific-python-lectures/intro/intro.rst:59
msgid ""
"Painful usage: no interactivity during development, mandatory compilation "
"steps, verbose syntax, manual memory management. These are **difficult "
"languages** for non programmers."
msgstr ""
"使いずらい: 開発中のインタラクティブ性なし、必須コンパイルステップ、冗長な構文、手動でのメモリー管理。 これらは非プログラマーにとって "
"**難しい言語** です。"

#: ../../scientific-python-lectures/intro/intro.rst:64
msgid "Matlab scripting language"
msgstr "Matlabスクリプト言語"

#: ../../scientific-python-lectures/intro/intro.rst:68
msgid ""
"Very rich collection of libraries with numerous algorithms, for many "
"different domains. Fast execution because these libraries are often written "
"in a compiled language."
msgstr ""
"多くの異なるドメインに対応する、多数のアルゴリズムを持つライブラリの非常に豊富なコレクションです。 "
"これらのライブラリは多くの場合コンパイル言語で書かれているため、実行速度が速いです。"

#: ../../scientific-python-lectures/intro/intro.rst:72
msgid ""
"Pleasant development environment: comprehensive and help, integrated editor,"
" etc."
msgstr "快適な開発環境: 包括的なヘルプ、統合エディターなど。"

#: ../../scientific-python-lectures/intro/intro.rst:75
msgid "Commercial support is available."
msgstr "商用サポートがあります。"

#: ../../scientific-python-lectures/intro/intro.rst:79
msgid ""
"Base language is quite poor and can become restrictive for advanced users."
msgstr "ベースとなる言語はかなり貧弱で、上級ユーザーにとっては制約になりかねません。"

#: ../../scientific-python-lectures/intro/intro.rst:81
msgid "Not free and not everything is open sourced."
msgstr "無料ではないし、すべてがオープンソースというわけでもありません。"

#: ../../scientific-python-lectures/intro/intro.rst:84
msgid "Julia"
msgstr "Julia"

#: ../../scientific-python-lectures/intro/intro.rst:88
msgid "Fast code, yet interactive and simple."
msgstr "高速なコードでありながら、インタラクティブでシンプルです。"

#: ../../scientific-python-lectures/intro/intro.rst:90
msgid "Easily connects to Python or C."
msgstr "PythonやC言語に簡単に接続できます。"

#: ../../scientific-python-lectures/intro/intro.rst:94
msgid "Ecosystem limited to numerical computing."
msgstr "数値計算に限定したエコシステム。"

#: ../../scientific-python-lectures/intro/intro.rst:96
msgid "Still young."
msgstr "まだ若いです。"

#: ../../scientific-python-lectures/intro/intro.rst:99
msgid "Other scripting languages: Scilab, Octave, R, IDL, etc."
msgstr "その他のスクリプト言語: Scilab, Octave, R, IDL, etc."

#: ../../scientific-python-lectures/intro/intro.rst:103
msgid "Open-source, free, or at least cheaper than Matlab."
msgstr "オープンソースで無料、少なくともMatlabよりは安いです。"

#: ../../scientific-python-lectures/intro/intro.rst:105
msgid "Some features can be very advanced (statistics in R, etc.)"
msgstr "非常に高度な機能もあります (Rでの統計など)"

#: ../../scientific-python-lectures/intro/intro.rst:109
msgid ""
"Fewer available algorithms than in Matlab, and the language is not more "
"advanced."
msgstr "利用可能なアルゴリズムはMatlabより少なく、言語も高度ではありません。"

#: ../../scientific-python-lectures/intro/intro.rst:112
msgid ""
"Some software are dedicated to one domain. Ex: Gnuplot to draw curves. These"
" programs are very powerful, but they are restricted to a single type of "
"usage, such as plotting."
msgstr ""
"ソフトウェアによっては、あるドメインに特化したものもあります。 例: 曲線を描くための "
"Gnuplot。これらのプログラムは非常に強力ですが、プロットなど単一の使い方に限定されています。"

#: ../../scientific-python-lectures/intro/intro.rst:117
msgid "Python"
msgstr "Python"

#: ../../scientific-python-lectures/intro/intro.rst:121
msgid "Very rich scientific computing libraries"
msgstr "非常に豊富な科学計算ライブラリ"

#: ../../scientific-python-lectures/intro/intro.rst:123
msgid ""
"Well thought out language, allowing to write very readable and well "
"structured code: we \"code what we think\"."
msgstr "考え抜かれた言語、非常に読みやすく、構造化されたコードを書くことができます: 私たちは \"自分たちが考えていることをコード化します\" 。"

#: ../../scientific-python-lectures/intro/intro.rst:126
msgid ""
"Many libraries beyond scientific computing (web server, serial port access, "
"etc.)"
msgstr "科学計算以外の多くのライブラリ (ウェブサーバー、シリアルポートアクセスなど)"

#: ../../scientific-python-lectures/intro/intro.rst:129
msgid ""
"Free and open-source software, widely spread, with a vibrant community."
msgstr "フリーでオープンソースのソフトウェアで、広く普及し、活気あるコミュニティがあります。"

#: ../../scientific-python-lectures/intro/intro.rst:131
msgid ""
"A variety of powerful environments to work in, such as `IPython "
"<https://ipython.readthedocs.io/en/stable/>`__, `Spyder <https://www.spyder-"
"ide.org/>`__, `Jupyter notebooks <https://jupyter.org/>`__, `Pycharm "
"<https://www.jetbrains.com/pycharm>`__, `Visual Studio Code "
"<https://code.visualstudio.com/docs/languages/python>`__"
msgstr ""
"`IPython <https://ipython.readthedocs.io/en/stable/>`__, `Spyder "
"<https://www.spyder-ide.org/>`__, `Jupyter notebooks "
"<https://jupyter.org/>`__, `Pycharm <https://www.jetbrains.com/pycharm>`__, "
"`Visual Studio Code <https://code.visualstudio.com/docs/languages/python>`__"
" など、さまざまな強力な環境で仕事ができます"

#: ../../scientific-python-lectures/intro/intro.rst:140
msgid ""
"Not all the algorithms that can be found in more specialized software or "
"toolboxes."
msgstr "より専門的なソフトウェアやツールボックスにあるようなアルゴリズムばかりではありません。"

#: ../../scientific-python-lectures/intro/intro.rst:144
msgid "The scientific Python ecosystem"
msgstr "科学的なPythonのエコシステム"

#: ../../scientific-python-lectures/intro/intro.rst:146
msgid ""
"Unlike Matlab, or R, Python does not come with a pre-bundled set of modules "
"for scientific computing. Below are the basic building blocks that can be "
"combined to obtain a scientific computing environment:"
msgstr ""
"MatlabやRとは異なり、Pythonには科学計算のためのモジュールがあらかじめバンドルされているわけではありません。 "
"以下は、科学計算環境を得るために組み合わせることができる基本的な構成要素です:"

#: ../../scientific-python-lectures/intro/intro.rst:152
msgid "**Python**, a generic and modern computing language"
msgstr "**Python** 、汎用的でモダンなコンピューティング言語"

#: ../../scientific-python-lectures/intro/intro.rst:154
msgid ""
"The language: flow control, data types (``string``, ``int``), data "
"collections (lists, dictionaries), etc."
msgstr ""
"言語: フロー制御、データタイプ (``string``, ``int``) 、データ収集 (lists, dictionaries)、など。"

#: ../../scientific-python-lectures/intro/intro.rst:157
msgid ""
"Modules of the standard library: string processing, file management, simple "
"network protocols."
msgstr "標準ライブラリーのモジュール: 文字列処理、ファイル管理、簡単なネットワークプロトコル。"

#: ../../scientific-python-lectures/intro/intro.rst:160
msgid ""
"A large number of specialized modules or applications written in Python: web"
" framework, etc. ... and scientific computing."
msgstr "Pythonで書かれた多数の特殊なモジュールやアプリケーション: ウェブフレームワークなど ... と科学計算。"

#: ../../scientific-python-lectures/intro/intro.rst:164
msgid "Development tools (automatic testing, documentation generation)"
msgstr "開発ツール (自動テスト、ドキュメント作成)"

#: ../../scientific-python-lectures/intro/intro.rst:168
msgid ":ref:`chapter on Python language <python_language_chapter>`"
msgstr ":ref:`chapter on Python language <python_language_chapter>`"

#: ../../scientific-python-lectures/intro/intro.rst:170
msgid "**Core numeric libraries**"
msgstr "**コア数値演算ライブラリ**"

#: ../../scientific-python-lectures/intro/intro.rst:172
msgid ""
"**NumPy**: numerical computing with powerful **numerical arrays** objects, "
"and routines to manipulate them. https://numpy.org/"
msgstr ""

#: ../../scientific-python-lectures/intro/intro.rst:177
msgid ":ref:`chapter on numpy <numpy>`"
msgstr ":ref:`numpyの章 <numpy>`"

#: ../../scientific-python-lectures/intro/intro.rst:179
msgid ""
"**SciPy** : high-level numerical routines. Optimization, regression, "
"interpolation, etc https://scipy.org/"
msgstr "**SciPy** : 高レベルの数値計算ルーチン。 最適化、回帰、補間など https://scipy.org/"

#: ../../scientific-python-lectures/intro/intro.rst:184
msgid ":ref:`chapter on SciPy <scipy>`"
msgstr ":ref:`SciPyの章 <scipy>`"

#: ../../scientific-python-lectures/intro/intro.rst:186
msgid ""
"**Matplotlib** : 2-D visualization, \"publication-ready\" plots "
"https://matplotlib.org/"
msgstr "**Matplotlib** : 2次元可視化、 \"出版可能な\" プロット https://matplotlib.org/"

#: ../../scientific-python-lectures/intro/intro.rst:191
msgid ":ref:`chapter on matplotlib <matplotlib>`"
msgstr ":ref:`matplotlibの章 <matplotlib>`"

#: ../../scientific-python-lectures/intro/intro.rst:193
msgid "**Advanced interactive environments**:"
msgstr "**高度なインタラクティブ環境**:"

#: ../../scientific-python-lectures/intro/intro.rst:195
msgid "**IPython**, an advanced **Python console** https://ipython.org/"
msgstr ""

#: ../../scientific-python-lectures/intro/intro.rst:197
msgid "**Jupyter**, **notebooks** in the browser https://jupyter.org/"
msgstr ""

#: ../../scientific-python-lectures/intro/intro.rst:200
msgid "**Domain-specific packages**,"
msgstr ""

#: ../../scientific-python-lectures/intro/intro.rst:202
msgid "**pandas, statsmodels, seaborn** for :ref:`statistics <statistics>`"
msgstr ""

#: ../../scientific-python-lectures/intro/intro.rst:204
msgid "**sympy** for :ref:`symbolic computing <sympy>`"
msgstr "**sympy** は :ref:`symbolic computing <sympy>` を行うためのものです。"

#: ../../scientific-python-lectures/intro/intro.rst:206
msgid "**scikit-image** for :ref:`image processing <scikit_image>`"
msgstr "**scikit-image** は :ref:`image processing <scikit_image>` を行うためのものです。"

#: ../../scientific-python-lectures/intro/intro.rst:208
msgid "**scikit-learn** for :ref:`machine learning <scikit-learn_chapter>`"
msgstr ""
"**scikit-learn** は :ref:`machine learning <scikit-learn_chapter>` "
"を行うためのものです。"

#: ../../scientific-python-lectures/intro/intro.rst:210
msgid ""
"and many more packages not documented in the Scientific Python Lectures."
msgstr ""

#: ../../scientific-python-lectures/intro/intro.rst:214
msgid ":ref:`chapters on advanced topics <advanced_topics_part>`"
msgstr ":ref:`chapters on advanced topics <advanced_topics_part>`"

#: ../../scientific-python-lectures/intro/intro.rst:216
msgid ":ref:`chapters on packages and applications <applications_part>`"
msgstr ":ref:`chapters on packages and applications <applications_part>`"

#: ../../scientific-python-lectures/intro/intro.rst:225
msgid "Before starting: Installing a working environment"
msgstr "開始前に: 動作環境のインストール"

#: ../../scientific-python-lectures/intro/intro.rst:226
msgid ""
"Python comes in many flavors, and there are many ways to install it. "
"However, we recommend to install a scientific-computing distribution, that "
"comes readily with optimized versions of scientific modules."
msgstr ""
"Pythonには様々なフレーバーがあり、インストールする方法もたくさんあります。しかし、科学計算モジュールの最適化されたバージョンがすぐに提供される科学計算ディストリビューションをインストールすることをお勧めします。"

#: ../../scientific-python-lectures/intro/intro.rst:230
msgid "**Under Linux**"
msgstr "**Linux環境下で**"

#: ../../scientific-python-lectures/intro/intro.rst:232
msgid ""
"If you have a recent distribution, most of the tools are probably packaged, "
"and it is recommended to use your package manager."
msgstr "最近のディストリビューションであれば、ほとんどのツールはパッケージ化されているので、パッケージマネージャーを使うことをお勧めします。"

#: ../../scientific-python-lectures/intro/intro.rst:235
msgid "**Other systems**"
msgstr "**その他のシステム**"

#: ../../scientific-python-lectures/intro/intro.rst:237
msgid "There are several fully-featured scientific Python distributions:"
msgstr "完全な機能を備えた科学用 Python ディストリビューションがいくつかあります:"

#: ../../scientific-python-lectures/intro/intro.rst:242
msgid "`Anaconda <https://www.anaconda.com/download/>`_"
msgstr "`Anaconda <https://www.anaconda.com/download/>`_"

#: ../../scientific-python-lectures/intro/intro.rst:243
msgid "`WinPython <https://winpython.github.io>`_"
msgstr "`WinPython <https://winpython.github.io>`_"

#: ../../scientific-python-lectures/intro/intro.rst:247
msgid "The workflow: interactive environments and text editors"
msgstr ""

#: ../../scientific-python-lectures/intro/intro.rst:249
msgid ""
"**Interactive work to test and understand algorithms:** In this section, we "
"describe a workflow combining interactive work and consolidation."
msgstr ""

#: ../../scientific-python-lectures/intro/intro.rst:252
msgid ""
"Python is a general-purpose language. As such, there is not one blessed "
"environment to work in, and not only one way of using it. Although this "
"makes it harder for beginners to find their way, it makes it possible for "
"Python to be used for programs, in web servers, or embedded devices."
msgstr ""
"Pythonは汎用言語です。 このように、恵まれた環境は一つではないし、その使い方も一つではありません。 "
"そのため、初心者が道を見つけるのは難しくなりましたが、Pythonをプログラム、ウェブサーバー、組み込み機器に使用することが可能になりました。"

#: ../../scientific-python-lectures/intro/intro.rst:261
msgid "Interactive work"
msgstr "インタラクティブワーク"

#: ../../scientific-python-lectures/intro/intro.rst:263
msgid ""
"We recommend an interactive work with the `IPython <https://ipython.org>`__ "
"console, or its offspring, the `Jupyter notebook "
"<https://docs.jupyter.org/en/latest/content-quickstart.html>`_. They are "
"handy to explore and understand algorithms."
msgstr ""
"`IPython <https://ipython.org>`__ コンソール、あるいはその所産である `Jupyter notebook "
"<https://docs.jupyter.org/en/latest/content-quickstart.html>`_ "
"とのインタラクティブな作業をお勧めします。 アルゴリズムを探求し、理解するのに便利です。"

#: ../../scientific-python-lectures/intro/intro.rst-1
msgid "Under the notebook"
msgstr ""

#: ../../scientific-python-lectures/intro/intro.rst:270
msgid "To execute code, press \"shift enter\""
msgstr ""

#: ../../scientific-python-lectures/intro/intro.rst:272
msgid "Start `ipython`:"
msgstr "`ipython` を開始します:"

#: ../../scientific-python-lectures/intro/intro.rst:280
msgid "Getting help by using the **?** operator after an object:"
msgstr "オブジェクトの後に **?** 演算子を使ってヘルプを得ます:"

#: ../../scientific-python-lectures/intro/intro.rst:288
msgid "IPython user manual: https://ipython.readthedocs.io/en/stable/"
msgstr "IPythonユーザーマニュアル: https://ipython.readthedocs.io/en/stable/"

#: ../../scientific-python-lectures/intro/intro.rst:290
msgid ""
"Jupyter Notebook QuickStart: "
"https://docs.jupyter.org/en/latest/start/index.html"
msgstr ""
"Jupyter Notebook クイックスタート: "
"https://docs.jupyter.org/en/latest/start/index.html"

#: ../../scientific-python-lectures/intro/intro.rst:294
msgid "Elaboration of the work in an editor"
msgstr "エディターによる作業の詳細"

#: ../../scientific-python-lectures/intro/intro.rst:296
msgid ""
"As you move forward, it will be important to not only work interactively, "
"but also to create and reuse Python files. For this, a powerful code editor "
"will get you far. Here are several good easy-to-use editors:"
msgstr ""
"この先、インタラクティブに作業するだけでなく、Pythonファイルを作成し、再利用することも重要になります。そのためには、強力なコードエディターが役に立ちます。"
" 使いやすいエディターをいくつか紹介しましょう:"

#: ../../scientific-python-lectures/intro/intro.rst:300
msgid ""
"`Spyder <https://www.spyder-ide.org/>`_: integrates an IPython console, a "
"debugger, a profiler..."
msgstr ""
"`Spyder <https://www.spyder-ide.org/>`_: IPythonコンソール、デバッガー、プロファイラー... "
"が統合されています。"

#: ../../scientific-python-lectures/intro/intro.rst:302
msgid ""
"`PyCharm <https://www.jetbrains.com/pycharm>`_: integrates an IPython "
"console, notebooks, a debugger... (freely available, but commercial)"
msgstr ""
"`PyCharm <https://www.jetbrains.com/pycharm>`_: "
"IPythonコンソール、ノートブック、デバッガが統合されています... (自由に利用できますが、商用です)"

#: ../../scientific-python-lectures/intro/intro.rst:305
msgid ""
"`Visual Studio Code <https://code.visualstudio.com/docs/languages/python>`_:"
" integrates a Python console, notebooks, a debugger, ..."
msgstr ""
"`Visual Studio Code <https://code.visualstudio.com/docs/languages/python>`_:"
" Pythonコンソール、ノートブック、デバッガ、...が統合されていいます"

#: ../../scientific-python-lectures/intro/intro.rst:308
msgid ""
"Some of these are shipped by the various scientific Python distributions, "
"and you can find them in the menus."
msgstr "これらのいくつかは様々なサイエンティフィックPythonディストリビューションに同梱されており、メニューで見つけることができます。"

#: ../../scientific-python-lectures/intro/intro.rst:312
msgid ""
"As an exercise, create a file `my_file.py` in a code editor, and add the "
"following lines::"
msgstr "練習として、コードエディターで `my_file.py` ファイルを作成し、以下の行を追加します::"

#: ../../scientific-python-lectures/intro/intro.rst:318
msgid ""
"Now, you can run it in IPython console or a notebook and explore the "
"resulting variables:"
msgstr "IPythonのコンソールやノートブックで実行し、結果の変数を調べることができます:"

#: ../../scientific-python-lectures/intro/intro.rst:294
msgid "**From a script to functions**"
msgstr "**スクリプトから関数へ**"

#: ../../scientific-python-lectures/intro/intro.rst:343
msgid ""
"While it is tempting to work only with scripts, that is a file full of "
"instructions following each other, do plan to progressively evolve the "
"script to a set of functions:"
msgstr ""
"スクリプトだけ、つまり互いに続く命令の詰まったファイルだけで作業するのは魅力的ですが、スクリプトを段階的に進化させ、一連の関数にすることを計画してほしいです:"

#: ../../scientific-python-lectures/intro/intro.rst:347
msgid "A script is not reusable, functions are."
msgstr "スクリプトは再利用できませんが、関数は再利用できます。"

#: ../../scientific-python-lectures/intro/intro.rst:349
msgid ""
"Thinking in terms of functions helps breaking the problem in small blocks."
msgstr "関数で考えることは、問題を小さなブロックに分割するのに役立ちます。"

#: ../../scientific-python-lectures/intro/intro.rst:354
msgid "IPython and Jupyter Tips and Tricks"
msgstr "IPythonとJupyterのヒントとコツ"

#: ../../scientific-python-lectures/intro/intro.rst:356
msgid ""
"The user manuals contain a wealth of information. Here we give a quick "
"introduction to four useful features: *history*, *tab completion*, *magic "
"functions*, and *aliases*."
msgstr ""
"ユーザーマニュアルには豊富な情報が掲載されています。 ここでは、4つの便利な機能を簡単に紹介します: *履歴* 、 *タブコンプリート* 、 "
"*マジック機能* 、と *エイリアス* 。"

#: ../../scientific-python-lectures/intro/intro.rst:362
msgid ""
"**Command history** Like a UNIX shell, the IPython console supports command "
"history. Type *up* and *down* to navigate previously typed commands:"
msgstr ""
"**コマンド履歴** "
"UNIXシェルのように、IPythonコンソールはコマンドヒストリーをサポートしています。前に入力したコマンドをナビゲートするには、 *up* と "
"*down* を入力します:"

#: ../../scientific-python-lectures/intro/intro.rst:377
msgid ""
"**Tab completion** Tab completion, is a convenient way to explore the "
"structure of any object you’re dealing with. Simply type object_name.<TAB> "
"to view the object’s attributes. Besides Python objects and keywords, tab "
"completion also works on file and directory names.*"
msgstr ""

#: ../../scientific-python-lectures/intro/intro.rst:394
msgid ""
"**Magic functions** The console and the notebooks support so-called *magic* "
"functions by prefixing a command with the ``%`` character. For example, the "
"``run`` and ``whos`` functions from the previous section are magic "
"functions. Note that, the setting ``automagic``, which is enabled by "
"default, allows you to omit the preceding ``%`` sign. Thus, you can just "
"type the magic function and it will work."
msgstr ""

#: ../../scientific-python-lectures/intro/intro.rst:401
msgid "Other useful magic functions are:"
msgstr "その他、便利なマジック機能があります:"

#: ../../scientific-python-lectures/intro/intro.rst:403
msgid "``%cd`` to change the current directory."
msgstr ""

#: ../../scientific-python-lectures/intro/intro.rst:410
msgid ""
"``%cpaste`` allows you to paste code, especially code from websites which "
"has been prefixed with the standard Python prompt (e.g. ``>>>``) or with an "
"ipython prompt, (e.g. ``in [3]``):"
msgstr ""

#: ../../scientific-python-lectures/intro/intro.rst:425
msgid ""
"``%timeit`` allows you to time the execution of short snippets using the "
"``timeit`` module from the standard library:"
msgstr ""

#: ../../scientific-python-lectures/intro/intro.rst:433
msgid ":ref:`Chapter on optimizing code <optimizing_code_chapter>`"
msgstr ":ref:`Chapter on optimizing code <optimizing_code_chapter>`"

#: ../../scientific-python-lectures/intro/intro.rst:435
msgid ""
"``%debug`` allows you to enter post-mortem debugging. That is to say, if the"
" code you try to execute, raises an exception, using ``%debug`` will enter "
"the debugger at the point where the exception was thrown."
msgstr ""

#: ../../scientific-python-lectures/intro/intro.rst:456
msgid ":ref:`Chapter on debugging <debugging_chapter>`"
msgstr ":ref:`Chapter on debugging <debugging_chapter>`"

#: ../../scientific-python-lectures/intro/intro.rst:460
msgid ""
"**Aliases** Furthermore IPython ships with various *aliases* which emulate "
"common UNIX command line tools such as ``ls`` to list files, ``cp`` to copy "
"files and ``rm`` to remove files (a full list of aliases is shown when "
"typing ``alias``)."
msgstr ""

#: ../../scientific-python-lectures/intro/intro.rst:354
msgid "**Getting help**"
msgstr ""

#: ../../scientific-python-lectures/intro/intro.rst:467
msgid ""
"The built-in cheat-sheet is accessible via the ``%quickref`` magic function."
msgstr ""

#: ../../scientific-python-lectures/intro/intro.rst:470
msgid ""
"A list of all available magic functions is shown when typing ``%magic``."
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:2
msgid "Basic types"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:5
msgid "Numerical types"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:9
msgid "Python supports the following numerical, scalar types:"
msgstr "Pythonは、以下の数値型、スカラー型をサポートしています:"

#: ../../scientific-python-lectures/intro/language/basic_types.rst:0
msgid "Integer"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:0
msgid "Floats"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:0
#: ../../scientific-python-lectures/intro/numpy/array_object.rst:0
msgid "Complex"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:0
msgid "Booleans"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:47
msgid ""
"A Python shell can therefore replace your pocket calculator, with the basic "
"arithmetic operations ``+``, ``-``, ``*``, ``/``, ``%`` (modulo) natively "
"implemented"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:60
msgid "Type conversion (casting)::"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:67
msgid "Containers"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:71
msgid ""
"Python provides many efficient types of containers, in which collections of "
"objects can be stored."
msgstr "Pythonは、オブジェクトのコレクションを格納できる効率的なコンテナの種類を数多く提供しています。"

#: ../../scientific-python-lectures/intro/language/basic_types.rst:75
msgid "Lists"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:79
msgid ""
"A list is an ordered collection of objects, that may have different types. "
"For example:"
msgstr "リストは、異なる型を持つ可能性のあるオブジェクトの順序付けられたコレクションです。例えば:"

#: ../../scientific-python-lectures/intro/language/basic_types.rst:88
msgid "Indexing: accessing individual objects contained in the list::"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:93
msgid "Counting from the end with negative indices::"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:102
msgid ""
"**Indexing starts at 0** (as in C), not at 1 (as in Fortran or Matlab)!"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:104
msgid "Slicing: obtaining sublists of regularly-spaced elements::"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:113
msgid ""
"Note that ``colors[start:stop]`` contains the elements with indices ``i`` "
"such as  ``start<= i < stop`` (``i`` ranging from ``start`` to ``stop-1``). "
"Therefore, ``colors[start:stop]`` has ``(stop - start)`` elements."
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:117
msgid "**Slicing syntax**: ``colors[start:stop:stride]``"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:121
msgid "All slicing parameters are optional::"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:132
msgid "Lists are *mutable* objects and can be modified::"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:143
msgid "The elements of a list may have different types::"
msgstr "リストの要素には、さまざまな型があります::"

#: ../../scientific-python-lectures/intro/language/basic_types.rst:153
msgid ""
"For collections of numerical data that all have the same type, it is often "
"**more efficient** to use the ``array`` type provided by the ``numpy`` "
"module. A NumPy array is a chunk of memory containing fixed-sized items.  "
"With NumPy arrays, operations on elements can be faster because elements are"
" regularly spaced in memory and more operations are performed through "
"specialized C functions instead of Python loops."
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:164
msgid ""
"Python offers a large panel of functions to modify lists, or query them. "
"Here are a few examples; for more details, see "
"https://docs.python.org/3/tutorial/datastructures.html#more-on-lists"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:168
msgid "Add and remove elements::"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:185
msgid "Reverse::"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:197
msgid "Concatenate and repeat lists::"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:207
msgid "Sort::"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst-1
msgid "**Methods and Object-Oriented Programming**"
msgstr "**メソッドとオブジェクト指向プログラミング**"

#: ../../scientific-python-lectures/intro/language/basic_types.rst:219
msgid ""
"The notation ``rcolors.method()`` (e.g. ``rcolors.append(3)`` and "
"``colors.pop()``) is our first example of object-oriented programming (OOP)."
" Being a ``list``, the object `rcolors` owns the *method* `function` that is"
" called using the notation **.**. No further knowledge of OOP than "
"understanding the notation **.** is necessary for going through this "
"tutorial."
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:237
msgid "**Discovering methods:**"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:228
msgid "Reminder: in Ipython: tab-completion (press tab)"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:239
#: ../../scientific-python-lectures/intro/numpy/array_object.rst:0
msgid "Strings"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:241
msgid "Different string syntaxes (simple, double or triple quotes)::"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:256
msgid ""
"This syntax error can be avoided by enclosing the string in double quotes "
"instead of single quotes. Alternatively, one can prepend a backslash to the "
"second single quote. Other uses of the backslash are, e.g., the newline "
"character ``\\n`` and the tab character ``\\t``."
msgstr ""
"この構文エラーは、文字列をシングルクォートではなくダブルクォートで囲むことで回避できます。あるいは、2つ目のシングルクォートの前にバックスラッシュを付ける方法もあります。バックスラッシュの他の使い方としては、改行を表す"
" ``\\n`` やタブを表す ``\\t`` などがあります。"

#: ../../scientific-python-lectures/intro/language/basic_types.rst:263
msgid ""
"Strings are collections like lists. Hence they can be indexed and sliced, "
"using the same syntax and rules."
msgstr "文字列はリストと同じコレクションです。 したがって、同じ構文とルールでインデックスを作成したり、スライスしたりすることができます。"

#: ../../scientific-python-lectures/intro/language/basic_types.rst:266
msgid "Indexing::"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:278
msgid ""
"(Remember that negative indices correspond to counting from the right end.)"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:281
msgid "Slicing::"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:294
msgid ""
"Accents and special characters can also be handled as in Python 3 strings "
"consist of Unicode characters."
msgstr "アクセント記号や特殊文字も、Python 3 の文字列と同様に Unicode 文字として扱われます。"

#: ../../scientific-python-lectures/intro/language/basic_types.rst:298
msgid ""
"A string is an **immutable object** and it is not possible to modify its "
"contents. One may however create new strings from the original one."
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:317
msgid ""
"Strings have many useful methods, such as ``a.replace`` as seen above. "
"Remember the ``a.`` object-oriented notation and use tab completion or "
"``help(str)`` to search for new methods."
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:323
msgid ""
"Python offers advanced possibilities for manipulating strings, looking for "
"patterns or formatting. The interested reader is referred to "
"https://docs.python.org/3/library/stdtypes.html#string-methods and "
"https://docs.python.org/3/library/string.html#format-string-syntax"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:328
msgid "String formatting::"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:339
msgid "Dictionaries"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:343
msgid ""
"A dictionary is basically an efficient table that **maps keys to values**."
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:363
msgid ""
"It can be used to conveniently store and retrieve values associated with a "
"name (a string for a date, a name, etc.). See "
"https://docs.python.org/3/tutorial/datastructures.html#dictionaries for more"
" information."
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:368
msgid "A dictionary can have keys (resp. values) with different types::"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:375
msgid "More container types"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:377
msgid "**Tuples**"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:379
msgid ""
"Tuples are basically immutable lists. The elements of a tuple are written "
"between parentheses, or just separated by commas::"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:389
msgid "**Sets:** unordered, unique items::"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:398
msgid "Assignment operator"
msgstr "代入演算子"

#: ../../scientific-python-lectures/intro/language/basic_types.rst:402
msgid ""
"`Python library reference "
"<https://docs.python.org/3/reference/simple_stmts.html#assignment-"
"statements>`_ says:"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:406
msgid ""
"Assignment statements are used to (re)bind names to values and to modify "
"attributes or items of mutable objects."
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:409
msgid "In short, it works as follows (simple assignment):"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:411
msgid ""
"an expression on the right hand side is evaluated, the corresponding object "
"is created/obtained"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:413
msgid ""
"a **name** on the left hand side is assigned, or bound, to the r.h.s. object"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:416
msgid "Things to note:"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:418
msgid "A single object can have several names bound to it:"
msgstr "単一のオブジェクトには複数の名前が紐付けられることがあります:"

#: ../../scientific-python-lectures/intro/language/basic_types.rst:440
msgid "to change a list *in place*, use indexing/slices:"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:465
msgid "the key concept here is **mutable vs. immutable**"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:467
msgid "mutable objects can be changed in place"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:468
msgid "immutable objects cannot be modified once created"
msgstr ""

#: ../../scientific-python-lectures/intro/language/basic_types.rst:470
msgid ""
"A very good and detailed explanation of the above issues can be found in "
"David M. Beazley's article `Types and Objects in Python "
"<https://www.informit.com/articles/article.aspx?p=453682>`_."
msgstr ""

#: ../../scientific-python-lectures/intro/language/control_flow.rst:2
msgid "Control Flow"
msgstr "コントロールフロー"

#: ../../scientific-python-lectures/intro/language/control_flow.rst:4
msgid "Controls the order in which the code is executed."
msgstr "コードの実行順序を制御します。"

#: ../../scientific-python-lectures/intro/language/control_flow.rst:7
msgid "if/elif/else"
msgstr "if/elif/else"

#: ../../scientific-python-lectures/intro/language/control_flow.rst:17
msgid "**Blocks are delimited by indentation**"
msgstr "**ブロックはインデントで区切られます**"

#: ../../scientific-python-lectures/intro/language/control_flow.rst:21
msgid ""
"Type the following lines in your Python interpreter, and be careful to "
"**respect the indentation depth**. The Ipython shell automatically increases"
" the indentation depth after a colon ``:`` sign; to decrease the indentation"
" depth, go four spaces to the left with the Backspace key. Press the Enter "
"key twice to leave the logical block."
msgstr ""

#: ../../scientific-python-lectures/intro/language/control_flow.rst:40
msgid ""
"Indentation is compulsory in scripts as well. As an exercise, re-type the "
"previous lines with the same indentation in a script ``condition.py``, and "
"execute the script with ``run condition.py`` in Ipython."
msgstr ""

#: ../../scientific-python-lectures/intro/language/control_flow.rst:45
msgid "for/range"
msgstr "for/range"

#: ../../scientific-python-lectures/intro/language/control_flow.rst:47
msgid "Iterating with an index::"
msgstr ""

#: ../../scientific-python-lectures/intro/language/control_flow.rst:56
msgid "But most often, it is more readable to iterate over values::"
msgstr ""

#: ../../scientific-python-lectures/intro/language/control_flow.rst:66
msgid "while/break/continue"
msgstr ""

#: ../../scientific-python-lectures/intro/language/control_flow.rst:68
msgid "Typical C-style while loop (Mandelbrot problem)::"
msgstr ""

#: ../../scientific-python-lectures/intro/language/control_flow.rst:76
msgid "**More advanced features**"
msgstr ""

#: ../../scientific-python-lectures/intro/language/control_flow.rst:78
msgid "``break`` out of enclosing for/while loop::"
msgstr ""

#: ../../scientific-python-lectures/intro/language/control_flow.rst:88
msgid "``continue`` the next iteration of a loop.::"
msgstr ""

#: ../../scientific-python-lectures/intro/language/control_flow.rst:102
msgid "Conditional Expressions"
msgstr ""

#: ../../scientific-python-lectures/intro/language/control_flow.rst:0
msgid "``if <OBJECT>``"
msgstr ""

#: ../../scientific-python-lectures/intro/language/control_flow.rst:106
msgid "Evaluates to False:"
msgstr ""

#: ../../scientific-python-lectures/intro/language/control_flow.rst:107
msgid "any number equal to zero (0, 0.0, 0+0j)"
msgstr ""

#: ../../scientific-python-lectures/intro/language/control_flow.rst:108
msgid "an empty container (list, tuple, set, dictionary, ...)"
msgstr ""

#: ../../scientific-python-lectures/intro/language/control_flow.rst:109
msgid "``False``, ``None``"
msgstr ""

#: ../../scientific-python-lectures/intro/language/control_flow.rst:111
msgid "Evaluates to True:"
msgstr ""

#: ../../scientific-python-lectures/intro/language/control_flow.rst:112
msgid "everything else"
msgstr ""

#: ../../scientific-python-lectures/intro/language/control_flow.rst:0
msgid "``a == b``"
msgstr "``a == b``"

#: ../../scientific-python-lectures/intro/language/control_flow.rst:116
msgid "Tests equality, with logics::"
msgstr ""

#: ../../scientific-python-lectures/intro/language/control_flow.rst:0
msgid "``a is b``"
msgstr "``a is b``"

#: ../../scientific-python-lectures/intro/language/control_flow.rst:123
msgid "Tests identity: both sides are the same object::"
msgstr ""

#: ../../scientific-python-lectures/intro/language/control_flow.rst:0
msgid "``a in b``"
msgstr "``a in b``"

#: ../../scientific-python-lectures/intro/language/control_flow.rst:139
msgid "For any collection ``b``: ``b`` contains ``a`` ::"
msgstr ""

#: ../../scientific-python-lectures/intro/language/control_flow.rst:148
msgid "If ``b`` is a dictionary, this tests that ``a`` is a key of ``b``."
msgstr ""

#: ../../scientific-python-lectures/intro/language/control_flow.rst:151
msgid "Advanced iteration"
msgstr ""

#: ../../scientific-python-lectures/intro/language/control_flow.rst:154
msgid "Iterate over any *sequence*"
msgstr ""

#: ../../scientific-python-lectures/intro/language/control_flow.rst:156
msgid ""
"You can iterate over any sequence (string, list, keys in a dictionary, lines"
" in a file, ...)::"
msgstr ""

#: ../../scientific-python-lectures/intro/language/control_flow.rst:183
msgid ""
"Few languages (in particular, languages for scientific computing) allow to "
"loop over anything but integers/indices. With Python it is possible to loop "
"exactly over the objects of interest without bothering with indices you "
"often don't care about. This feature can often be used to make code more "
"readable."
msgstr ""

#: ../../scientific-python-lectures/intro/language/control_flow.rst:190
msgid "Not safe to modify the sequence you are iterating over."
msgstr ""

#: ../../scientific-python-lectures/intro/language/control_flow.rst:193
msgid "Keeping track of enumeration number"
msgstr ""

#: ../../scientific-python-lectures/intro/language/control_flow.rst:195
msgid ""
"Common task is to iterate over a sequence while keeping track of the item "
"number."
msgstr ""

#: ../../scientific-python-lectures/intro/language/control_flow.rst:198
msgid "Could use while loop with a counter as above. Or a for loop::"
msgstr ""

#: ../../scientific-python-lectures/intro/language/control_flow.rst:207
msgid "But, Python provides a built-in function - ``enumerate`` - for this::"
msgstr ""

#: ../../scientific-python-lectures/intro/language/control_flow.rst:218
msgid "Looping over a dictionary"
msgstr ""

#: ../../scientific-python-lectures/intro/language/control_flow.rst:220
msgid "Use **items**::"
msgstr ""

#: ../../scientific-python-lectures/intro/language/control_flow.rst:232
msgid ""
"The ordering of a dictionary is random, thus we use :func:`sorted` which "
"will sort on the keys."
msgstr ""

#: ../../scientific-python-lectures/intro/language/control_flow.rst:236
msgid "List Comprehensions"
msgstr ""

#: ../../scientific-python-lectures/intro/language/control_flow.rst:238
msgid ""
"Instead of creating a list by means of a loop, one can make use of a list "
"comprehension with a rather self-explaining syntax."
msgstr ""

#: ../../scientific-python-lectures/intro/language/control_flow.rst:236
#: ../../scientific-python-lectures/intro/language/standard_library.rst-1
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_10.rst:22
#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst-1
msgid "Exercise"
msgstr "例題"

#: ../../scientific-python-lectures/intro/language/control_flow.rst:252
#: ../../scientific-python-lectures/intro/scipy/solutions.rst:11
msgid "Compute the decimals of Pi using the Wallis formula:"
msgstr ""

#: ../../scientific-python-lectures/intro/language/control_flow.rst:254
msgid ""
"\\pi = 2 \\prod_{i=1}^{\\infty} \\frac{4i^2}{4i^2 - 1}\n"
"\n"
msgstr ""
"\\pi = 2 \\prod_{i=1}^{\\infty} \\frac{4i^2}{4i^2 - 1}\n"
"\n"

#: ../../scientific-python-lectures/intro/language/exceptions.rst:2
msgid "Exception handling in Python"
msgstr ""

#: ../../scientific-python-lectures/intro/language/exceptions.rst:4
msgid ""
"It is likely that you have raised Exceptions if you have typed all the "
"previous commands of the tutorial. For example, you may have raised an "
"exception if you entered a command with a typo."
msgstr ""

#: ../../scientific-python-lectures/intro/language/exceptions.rst:8
msgid ""
"Exceptions are raised by different kinds of errors arising when executing "
"Python code. In your own code, you may also catch errors, or define custom "
"error types. You may want to look at the descriptions of the `the built-in "
"Exceptions <https://docs.python.org/3/library/exceptions.html>`_ when "
"looking for the right exception type."
msgstr ""

#: ../../scientific-python-lectures/intro/language/exceptions.rst:15
msgid "Exceptions"
msgstr ""

#: ../../scientific-python-lectures/intro/language/exceptions.rst:17
msgid "Exceptions are raised by errors in Python:"
msgstr ""

#: ../../scientific-python-lectures/intro/language/exceptions.rst:36
msgid ""
"As you can see, there are **different types** of exceptions for different "
"errors."
msgstr ""

#: ../../scientific-python-lectures/intro/language/exceptions.rst:39
msgid "Catching exceptions"
msgstr ""

#: ../../scientific-python-lectures/intro/language/exceptions.rst:42
msgid "try/except"
msgstr ""

#: ../../scientific-python-lectures/intro/language/exceptions.rst:62
msgid "try/finally"
msgstr ""

#: ../../scientific-python-lectures/intro/language/exceptions.rst:83
msgid "Important for resource management (e.g. closing a file)"
msgstr ""

#: ../../scientific-python-lectures/intro/language/exceptions.rst:86
msgid "Easier to ask for forgiveness than for permission"
msgstr ""

#: ../../scientific-python-lectures/intro/language/exceptions.rst:110
msgid "Raising exceptions"
msgstr ""

#: ../../scientific-python-lectures/intro/language/exceptions.rst:112
msgid "Capturing and reraising an exception:"
msgstr ""

#: ../../scientific-python-lectures/intro/language/exceptions.rst:135
msgid "Exceptions to pass messages between parts of the code:"
msgstr ""

#: ../../scientific-python-lectures/intro/language/exceptions.rst:160
msgid ""
"Use exceptions to notify certain conditions are met (e.g. StopIteration) or "
"not (e.g. custom error raising)"
msgstr ""

#: ../../scientific-python-lectures/intro/language/first_steps.rst:2
msgid "First steps"
msgstr "はじめの一歩"

#: ../../scientific-python-lectures/intro/language/first_steps.rst:5
msgid "Start the **Ipython** shell (an enhanced interactive Python shell):"
msgstr ""

#: ../../scientific-python-lectures/intro/language/first_steps.rst:7
msgid ""
"by typing \"ipython\" from a Linux/Mac terminal, or from the Windows cmd "
"shell,"
msgstr ""

#: ../../scientific-python-lectures/intro/language/first_steps.rst:8
msgid ""
"**or** by starting the program from a menu, e.g. the `Anaconda Navigator`_, "
"the `Python(x,y)`_ menu if you have installed one of these scientific-Python"
" suites."
msgstr ""

#: ../../scientific-python-lectures/intro/language/first_steps.rst:17
msgid ""
"If you don't have Ipython installed on your computer, other Python shells "
"are available, such as the plain Python shell started by typing \"python\" "
"in a terminal, or the Idle interpreter. However, we advise to use the "
"Ipython shell because of its enhanced features, especially for interactive "
"scientific computing."
msgstr ""

#: ../../scientific-python-lectures/intro/language/first_steps.rst:23
msgid "Once you have started the interpreter, type ::"
msgstr "インタープリターを起動したら、次のようにタイプします ::"

#: ../../scientific-python-lectures/intro/language/first_steps.rst:30
msgid ""
"The message \"Hello, world!\" is then displayed. You just executed your "
"first Python instruction, congratulations!"
msgstr ""

#: ../../scientific-python-lectures/intro/language/first_steps.rst:33
msgid "To get yourself started, type the following stack of instructions ::"
msgstr "手始めに、以下のスタックインストラクションを入力します ::"

#: ../../scientific-python-lectures/intro/language/first_steps.rst:53
msgid ""
"Two variables ``a`` and ``b`` have been defined above. Note that one does "
"not declare the type of a variable before assigning its value. In C, "
"conversely, one should write:"
msgstr ""

#: ../../scientific-python-lectures/intro/language/first_steps.rst:61
msgid ""
"In addition, the type of a variable may change, in the sense that at one "
"point in time it can be equal to a value of a certain type, and a second "
"point in time, it can be equal to a value of a different type. `b` was first"
" equal to an integer, but it became equal to a string when it was assigned "
"the value `'hello'`. Operations on integers (``b=2*a``) are coded natively "
"in Python, and so are some operations on strings such as additions and "
"multiplications, which amount respectively to concatenation and repetition."
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:2
msgid "Defining functions"
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:5
msgid "Function definition"
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:19
msgid "Function blocks must be indented as other control-flow blocks."
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:22
msgid "Return statement"
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:24
msgid "Functions can *optionally* return values."
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:35
msgid "By default, functions return ``None``."
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:37
msgid "Note the syntax to define a function:"
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:39
msgid "the ``def`` keyword;"
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:41
msgid "is followed by the function's **name**, then"
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:43
msgid ""
"the arguments of the function are given between parentheses followed by a "
"colon."
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:46
msgid "the function body;"
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:48
msgid "and ``return object`` for optionally returning values."
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:52
msgid "Parameters"
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:54
msgid "Mandatory parameters (positional arguments)"
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:68
msgid "Optional parameters (keyword or named arguments)"
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:82
msgid "Keyword arguments allow you to specify *default values*."
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:86
msgid ""
"Default values are evaluated when the function is defined, not when it is "
"called. This can be problematic when using mutable types (e.g. dictionary or"
" list) and modifying them in the function body, since the modifications will"
" be persistent across invocations of the function."
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:91
msgid "Using an immutable type in a keyword argument:"
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:106
msgid ""
"Using an mutable type in a keyword argument (and modifying it inside the "
"function body):"
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:131
msgid "More involved example implementing python's slicing:"
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:157
msgid "The order of the keyword arguments does not matter:"
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:164
msgid ""
"but it is good practice to use the same ordering as the function's "
"definition."
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:167
msgid ""
"*Keyword arguments* are a very convenient feature for defining functions "
"with a variable number of arguments, especially when default values are to "
"be used in most calls to the function."
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:172
msgid "Passing by value"
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:176
msgid ""
"Can you modify the value of a variable inside a function? Most languages (C,"
" Java, ...) distinguish \"passing by value\" and \"passing by reference\". "
"In Python, such a distinction is somewhat artificial, and it is a bit subtle"
" whether your variables are going to be modified or not. Fortunately, there "
"exist clear rules."
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:182
msgid ""
"Parameters to functions are references to objects, which are passed by "
"value. When you pass a variable to a function, python passes the reference "
"to the object to which the variable refers (the **value**). Not the variable"
" itself."
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:187
msgid ""
"If the **value** passed in a function is immutable, the function does not "
"modify the caller's variable.  If the **value** is mutable, the function may"
" modify the caller's variable in-place::"
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:215
msgid "Functions have a local variable table called a *local namespace*."
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:217
msgid "The variable ``x`` only exists within the function ``try_to_modify``."
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:221
msgid "Global variables"
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:223
msgid ""
"Variables declared outside the function can be referenced within the "
"function:"
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:237
msgid ""
"But these \"global\" variables cannot be modified within the function, "
"unless declared **global** in the function."
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:240
msgid "This doesn't work:"
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:256
msgid "This works:"
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:275
msgid "Variable number of parameters"
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:276
msgid "Special forms of parameters:"
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:277
msgid "``*args``: any number of positional arguments packed into a tuple"
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:278
msgid "``**kwargs``: any number of keyword arguments packed into a dictionary"
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:293
msgid "Docstrings"
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:295
msgid ""
"Documentation about what the function does and its parameters.  General "
"convention:"
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:318
msgid "**Docstring guidelines**"
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:321
msgid ""
"For the sake of standardization, the `Docstring Conventions "
"<https://peps.python.org/pep-0257>`_ webpage documents the semantics and "
"conventions associated with Python docstrings."
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:326
msgid ""
"Also, the NumPy and SciPy modules have defined a precise standard for "
"documenting scientific functions, that you may want to follow for your own "
"functions, with a ``Parameters`` section, an ``Examples`` section, etc. See "
"https://numpydoc.readthedocs.io/en/latest/format.html#docstring-standard"
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:333
msgid "Functions are objects"
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:334
msgid "Functions are first-class objects, which means they can be:"
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:335
msgid "assigned to a variable"
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:336
msgid "an item in a list (or any collection)"
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:337
msgid "passed as an argument to another function."
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:349
msgid "Methods"
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:351
msgid ""
"Methods are functions attached to objects.  You've seen these in our "
"examples on *lists*, *dictionaries*, *strings*, etc..."
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:356
msgid "Exercises"
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:356
msgid "Exercise: Fibonacci sequence"
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:361
#: ../../scientific-python-lectures/intro/scipy/solutions.rst:41
msgid ""
"Write a function that displays the ``n`` first terms of the Fibonacci "
"sequence, defined by:"
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:364
msgid ""
"\\left\\{\n"
"    \\begin{array}{ll}\n"
"        U_{0} = 0 \\\\\n"
"        U_{1} = 1 \\\\\n"
"        U_{n+2} = U_{n+1} + U_{n}\n"
"    \\end{array}\n"
"\\right.\n"
"\n"
msgstr ""
"\\left\\{\n"
"    \\begin{array}{ll}\n"
"        U_{0} = 0 \\\\\n"
"        U_{1} = 1 \\\\\n"
"        U_{n+2} = U_{n+1} + U_{n}\n"
"    \\end{array}\n"
"\\right.\n"
"\n"

#: ../../scientific-python-lectures/intro/language/functions.rst-1
msgid "Exercise: Quicksort"
msgstr ""

#: ../../scientific-python-lectures/intro/language/functions.rst:378
msgid "Implement the quicksort algorithm, as defined by wikipedia"
msgstr ""

#: ../../scientific-python-lectures/intro/language/io.rst:2
msgid "Input and Output"
msgstr ""

#: ../../scientific-python-lectures/intro/language/io.rst:4
msgid ""
"To be exhaustive, here are some information about input and output in "
"Python. Since we will use the NumPy methods to read and write files, **you "
"may skip this chapter at first reading**."
msgstr ""
"念のため、Pythonの入力と出力に関する情報をいくつか挙げておきます。 ファイルの読み書きにはNumPyのメソッドを使用します、 "
"**初読時はこの章を飛ばしてもよいです** 。"

#: ../../scientific-python-lectures/intro/language/io.rst:8
msgid ""
"We write or read **strings** to/from files (other types must be converted to"
" strings). To write in a file::"
msgstr "ファイルとの間で **文字列** を読み書きします（他の型は文字列に変換する必要があります）。 ファイルに書き込むには::"

#: ../../scientific-python-lectures/intro/language/io.rst:17
msgid "To read from a file"
msgstr "ファイルから読み込むには"

#: ../../scientific-python-lectures/intro/language/io.rst:35
msgid "For more details: https://docs.python.org/3/tutorial/inputoutput.html"
msgstr "詳細: https://docs.python.org/3/tutorial/inputoutput.html"

#: ../../scientific-python-lectures/intro/language/io.rst:38
msgid "Iterating over a file"
msgstr "ファイルの反復処理"

#: ../../scientific-python-lectures/intro/language/io.rst:54
msgid "File modes"
msgstr "ファイルモード"

#: ../../scientific-python-lectures/intro/language/io.rst:56
msgid "Read-only: ``r``"
msgstr "読み取り専用: ``r``"

#: ../../scientific-python-lectures/intro/language/io.rst:57
msgid "Write-only: ``w``"
msgstr "書き込み専用: ``w``"

#: ../../scientific-python-lectures/intro/language/io.rst:59
msgid "Note: Create a new file or *overwrite* existing file."
msgstr ""

#: ../../scientific-python-lectures/intro/language/io.rst:61
msgid "Append a file: ``a``"
msgstr "ファイルを追加します: ``a``"

#: ../../scientific-python-lectures/intro/language/io.rst:62
msgid "Read and Write: ``r+``"
msgstr "読み書き: ``r+``"

#: ../../scientific-python-lectures/intro/language/io.rst:63
msgid "Binary mode: ``b``"
msgstr "バイナリーモード: ``b``"

#: ../../scientific-python-lectures/intro/language/io.rst:65
msgid "Note: Use for binary files, especially on Windows."
msgstr "注: 特にWindowsでは、バイナリファイルに使用します。"

#: ../../scientific-python-lectures/intro/language/oop.rst:2
msgid "Object-oriented programming (OOP)"
msgstr "オブジェクト指向プログラミング (OOP)"

#: ../../scientific-python-lectures/intro/language/oop.rst:4
msgid ""
"Python supports object-oriented programming (OOP). The goals of OOP are:"
msgstr "Pythonはオブジェクト指向プログラミング (OOP) をサポートしています。 OOPの目標は以下の通りです:"

#: ../../scientific-python-lectures/intro/language/oop.rst:6
msgid "to organize the code, and"
msgstr "コードを整理し、"

#: ../../scientific-python-lectures/intro/language/oop.rst:8
msgid "to reuse code in similar contexts."
msgstr "同じような文脈でコードを再利用するためです。"

#: ../../scientific-python-lectures/intro/language/oop.rst:11
msgid ""
"Here is a small example: we create a Student *class*, which is an object "
"gathering several custom functions (*methods*) and variables (*attributes*),"
" we will be able to use::"
msgstr ""

#: ../../scientific-python-lectures/intro/language/oop.rst:27
msgid ""
"In the previous example, the Student class has ``__init__``, ``set_age`` and"
" ``set_major`` methods. Its attributes are ``name``, ``age`` and ``major``. "
"We can call these methods and attributes with the following notation: "
"``classinstance.method`` or  ``classinstance.attribute``.  The ``__init__`` "
"constructor is a special method we call with: ``MyClass(init parameters if "
"any)``."
msgstr ""

#: ../../scientific-python-lectures/intro/language/oop.rst:34
msgid ""
"Now, suppose we want to create a new class MasterStudent with the same "
"methods and attributes as the previous one, but with an additional "
"``internship`` attribute. We won't copy the previous class, but **inherit** "
"from it::"
msgstr ""

#: ../../scientific-python-lectures/intro/language/oop.rst:49
msgid ""
"The MasterStudent class inherited from the Student attributes and methods."
msgstr ""

#: ../../scientific-python-lectures/intro/language/oop.rst:51
msgid ""
"Thanks to classes and object-oriented programming, we can organize code with"
" different classes corresponding to different objects we encounter (an "
"Experiment class, an Image class, a Flow class, etc.), with their own "
"methods and attributes. Then we can use inheritance to consider variations "
"around a base class and **reuse** code. Ex : from a Flow base class, we can "
"create derived StokesFlow, TurbulentFlow, PotentialFlow, etc."
msgstr ""

#: ../../scientific-python-lectures/intro/language/python_language.rst:4
msgid "The Python language"
msgstr "Python言語"

#: ../../scientific-python-lectures/intro/language/python_language.rst:6
msgid ""
"**Authors**: *Chris Burns, Christophe Combelles, Emmanuelle Gouillart, Gaël "
"Varoquaux*"
msgstr ""
"**著者**: *Chris Burns, Christophe Combelles, Emmanuelle Gouillart, Gaël "
"Varoquaux*"

#: ../../scientific-python-lectures/intro/language/python_language.rst-1
msgid "Python for scientific computing"
msgstr "科学計算のためのPython"

#: ../../scientific-python-lectures/intro/language/python_language.rst:11
msgid ""
"We introduce here the Python language. Only the bare minimum necessary for "
"getting started with NumPy and SciPy is addressed here. To learn more about "
"the language, consider going through the excellent tutorial "
"https://docs.python.org/3/tutorial. Dedicated books are also available, such"
" as `Dive into Python 3 <https://diveintopython3.net/>`__."
msgstr ""
"ここではPython言語を紹介します。 ここでは、NumPyとSciPyを使い始めるために最低限必要なものだけを取り上げます。 "
"この言語についてもっと学ぶには、優れたチュートリアル https://docs.python.org/3/tutorial をご覧ください。 `Dive"
" into Python 3 <https://diveintopython3.net/>`__ のような専用本もあります。"

#: ../../scientific-python-lectures/intro/language/python_language.rst:23
msgid ""
"Python is a **programming language**, as are C, Fortran, BASIC, PHP, etc. "
"Some specific features of Python are as follows:"
msgstr ""

#: ../../scientific-python-lectures/intro/language/python_language.rst:26
msgid ""
"an *interpreted* (as opposed to *compiled*) language. Contrary to e.g. C or "
"Fortran, one does not compile Python code before executing it. In addition, "
"Python can be used **interactively**: many Python interpreters are "
"available, from which commands and scripts can be executed."
msgstr ""

#: ../../scientific-python-lectures/intro/language/python_language.rst:32
msgid ""
"a free software released under an **open-source** license: Python can be "
"used and distributed free of charge, even for building commercial software."
msgstr ""

#: ../../scientific-python-lectures/intro/language/python_language.rst:36
msgid ""
"**multi-platform**: Python is available for all major operating systems, "
"Windows, Linux/Unix, MacOS X, most likely your mobile phone OS, etc."
msgstr ""

#: ../../scientific-python-lectures/intro/language/python_language.rst:40
msgid "a very readable language with clear non-verbose syntax"
msgstr ""

#: ../../scientific-python-lectures/intro/language/python_language.rst:42
msgid ""
"a language for which a large variety of high-quality packages are available "
"for various applications, from web frameworks to scientific computing."
msgstr ""

#: ../../scientific-python-lectures/intro/language/python_language.rst:46
msgid ""
"a language very easy to interface with other languages, in particular C and "
"C++."
msgstr ""

#: ../../scientific-python-lectures/intro/language/python_language.rst:49
msgid ""
"Some other features of the language are illustrated just below. For example,"
" Python is an object-oriented language, with dynamic typing (the same "
"variable can contain objects of different types during the course of a "
"program)."
msgstr ""

#: ../../scientific-python-lectures/intro/language/python_language.rst:55
msgid ""
"See https://www.python.org/about/ for more information about distinguishing "
"features of Python."
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:2
msgid "Reusing code: scripts and modules"
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:4
msgid ""
"For now, we have typed all instructions in the interpreter. For longer sets "
"of instructions we need to change track and write the code in text files "
"(using a text editor), that we will call either *scripts* or *modules*. Use "
"your favorite text editor (provided it offers syntax highlighting for "
"Python), or the editor that comes with the Scientific Python Suite you may "
"be using."
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:12
msgid "Scripts"
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:16
msgid ""
"Let us first write a *script*, that is a file with a sequence of "
"instructions that are executed each time the script is called. Instructions "
"may be e.g. copied-and-pasted from the interpreter (but take care to respect"
" indentation rules!)."
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:21
msgid ""
"The extension for Python files is ``.py``. Write or copy-and-paste the "
"following lines in a file called ``test.py`` ::"
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:30
msgid ""
"Let us now execute the script interactively, that is inside the Ipython "
"interpreter. This is maybe the most common use of scripts in scientific "
"computing."
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:36
msgid ""
"in Ipython, the syntax to execute a script is ``%run script.py``. For "
"example,"
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:52
msgid ""
"The script has been executed. Moreover the variables defined in the script "
"(such as ``message``) are now available inside the interpreter's namespace."
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:58
msgid ""
"Other interpreters also offer the possibility to execute scripts (e.g., "
"``execfile`` in the plain Python interpreter, etc.)."
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:61
msgid ""
"It is also possible In order to execute this script as a *standalone "
"program*, by executing the script inside a shell terminal (Linux/Mac console"
" or cmd Windows console). For example, if we are in the same directory as "
"the test.py file, we can execute this in a console:"
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:76
msgid "Standalone scripts may also take command-line arguments"
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:78
msgid "In ``file.py``::"
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:90
msgid ""
"Don't implement option parsing yourself. Use a dedicated module such as "
":mod:`argparse`."
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:95
msgid "Importing objects from modules"
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:117
msgid "And also:"
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:123
msgid "Importing shorthands:"
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:135
msgid "This is called the *star import* and please, **Do not use it**"
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:137
msgid ""
"Makes the code harder to read and understand: where do symbols come from?"
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:140
msgid ""
"Makes it impossible to guess the functionality by the context and the name "
"(hint: `os.name` is the name of the OS), and to profit usefully from tab "
"completion."
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:144
msgid ""
"Restricts the variable names you can use: `os.name` might override `name`, "
"or vise-versa."
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:147
msgid "Creates possible name clashes between modules."
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:149
msgid "Makes the code impossible to statically check for undefined symbols."
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:154
msgid ""
"Modules are thus a good way to organize code in a hierarchical way. "
"Actually, all the scientific computing tools we are going to use are "
"modules::"
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:164
msgid "Creating modules"
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:168
msgid ""
"If we want to write larger and better organized programs (compared to simple"
" scripts), where some objects are defined, (variables, functions, classes) "
"and that we want to reuse several times, we have to create our own "
"*modules*."
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:173
msgid "Let us create a module ``demo`` contained in the file ``demo.py``:"
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:179
msgid ""
"In this file, we defined two functions ``print_a`` and ``print_b``. Suppose "
"we want to call the ``print_a`` function from the interpreter. We could "
"execute the file as a script, but since we just want to have access to the "
"function ``print_a``, we are rather going to **import it as a module**. The "
"syntax is as follows."
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:198
msgid ""
"Importing the module gives access to its objects, using the "
"``module.object`` syntax. Don't forget to put the module's name before the "
"object's name, otherwise Python won't recognize the instruction."
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:203
msgid "Introspection"
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:244
msgid "Importing objects from modules into the main namespace"
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:263
msgid "**Module caching**"
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:265
msgid ""
"Modules are cached: if you modify ``demo.py`` and re-import it in the old "
"session, you will get the old one."
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:268
#: ../../scientific-python-lectures/intro/scipy/solutions.rst:94
msgid "Solution:"
msgstr "解答:"

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:275
msgid "'__main__' and module loading"
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:279
msgid ""
"Sometimes we want code to be executed when a module is run directly, but not"
" when it is imported by another module. ``if __name__ == '__main__'`` allows"
" us to check whether the module is being run directly."
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:284
msgid "File ``demo2.py``:"
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:288
msgid "Importing it:"
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:298
msgid "Running it:"
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:309
msgid "Scripts or modules? How to organize your code"
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:311
msgid "Rule of thumb"
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:313
msgid ""
"Sets of instructions that are called several times should be written inside "
"**functions** for better code reusability."
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:316
msgid ""
"Functions (or other bits of code) that are called from several scripts "
"should be written inside a **module**, so that only the module is imported "
"in the different scripts (do not copy-and-paste your functions in the "
"different scripts!)."
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:322
msgid "How modules are found and imported"
msgstr "モジュールがどのように見つかり、インポートされるか"

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:325
msgid ""
"When the ``import mymodule`` statement is executed, the module ``mymodule`` "
"is searched in a given list of directories. This list includes a list of "
"installation-dependent default path (e.g., ``/usr/lib64/python3.11``) as "
"well as the list of directories specified by the environment variable "
"``PYTHONPATH``."
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:331
msgid ""
"The list of directories searched by Python is given by the ``sys.path`` "
"variable"
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:348
msgid "Modules must be located in the search path, therefore you can:"
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:350
msgid ""
"write your own modules within directories already defined in the search path"
" (e.g. ``$HOME/.venv/lectures/lib64/python3.11/site-packages``). You may use"
" symbolic links (on Linux) to keep the code somewhere else."
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:354
msgid ""
"modify the environment variable ``PYTHONPATH`` to include the directories "
"containing the user-defined modules."
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:359
msgid ""
"On Linux/Unix, add the following line to a file read by the shell at startup"
" (e.g. /etc/profile, .profile)"
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:366
msgid ""
"On Windows, https://support.microsoft.com/kb/310519 explains how to handle "
"environment variables."
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:369
msgid "or modify the ``sys.path`` variable itself within a Python script."
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:380
msgid ""
"This method is not very robust, however, because it makes the code less "
"portable (user-dependent path) and because you have to add the directory to "
"your sys.path each time you want to import from a module in this directory."
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:387
msgid ""
"See https://docs.python.org/3/tutorial/modules.html for more information "
"about modules."
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:391
msgid "Packages"
msgstr "パッケージ"

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:393
msgid ""
"A directory that contains many modules is called a *package*. A package is a"
" module with submodules (which can have submodules themselves, etc.). A "
"special file called ``__init__.py`` (which may be empty) tells Python that "
"the directory is a Python package, from which modules can be imported."
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:416
msgid "From Ipython:"
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:445
#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:201
msgid "Good practices"
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:447
msgid "Use **meaningful** object **names**"
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:449
msgid "**Indentation: no choice!**"
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:453
msgid ""
"Indenting is compulsory in Python! Every command block following a colon "
"bears an additional indentation level with respect to the previous line with"
" a colon. One must therefore indent after ``def f():`` or ``while:``. At the"
" end of such logical blocks, one decreases the indentation depth (and re-"
"increases it if a new block is entered, etc.)"
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:460
msgid ""
"Strict respect of indentation is the price to pay for getting rid of ``{`` "
"or ``;`` characters that delineate logical blocks in other languages. "
"Improper indentation leads to errors such as"
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:469
msgid ""
"All this indentation business can be a bit confusing in the beginning. "
"However, with the clear indentation, and in the absence of extra characters,"
" the resulting code is very nice to read compared to other languages."
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:474
msgid ""
"**Indentation depth**: Inside your text editor, you may choose to indent "
"with any positive number of spaces (1, 2, 3, 4, ...). However, it is "
"considered good practice to **indent with 4 spaces**. You may configure your"
" editor to map the ``Tab`` key to a 4-space indentation."
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:480
msgid "**Style guidelines**"
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:482
msgid ""
"**Long lines**: you should not write very long lines that span over more "
"than (e.g.) 80 characters. Long lines can be broken with the ``\\`` "
"character ::"
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:489
msgid "**Spaces**"
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:491
msgid ""
"Write well-spaced code: put whitespaces after commas, around arithmetic "
"operators, etc.::"
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:497
msgid ""
"A certain number of rules for writing \"beautiful\" code (and more "
"importantly using the same conventions as anybody else!) are given in the "
"`Style Guide for Python Code <https://peps.python.org/pep-0008>`_."
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst-1
#: ../../scientific-python-lectures/intro/matplotlib/index.rst-1
#: ../../scientific-python-lectures/intro/numpy/operations.rst-1
msgid "**Quick read**"
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:508
msgid ""
"If you want to do a first quick pass through the Scientific Python Lectures "
"to learn the ecosystem, you can directly skip to the next chapter: "
":ref:`numpy`."
msgstr ""

#: ../../scientific-python-lectures/intro/language/reusing_code.rst:512
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1039
msgid ""
"The remainder of this chapter is not necessary to follow the rest of the "
"intro part. But be sure to come back and finish this chapter later."
msgstr ""

#: ../../scientific-python-lectures/intro/language/standard_library.rst:2
msgid "Standard Library"
msgstr "標準ライブラリ"

#: ../../scientific-python-lectures/intro/language/standard_library.rst:4
msgid "Reference document for this section:"
msgstr "このセクションの参考文献:"

#: ../../scientific-python-lectures/intro/language/standard_library.rst:6
msgid ""
"The Python Standard Library documentation: "
"https://docs.python.org/3/library/index.html"
msgstr "Python 標準ライブラリのドキュメント: https://docs.python.org/3/library/index.html"

#: ../../scientific-python-lectures/intro/language/standard_library.rst:9
msgid "Python Essential Reference, David Beazley, Addison-Wesley Professional"
msgstr "Pythonエッセンシャルリファレンス, David Beazley, Addison-Wesley Professional"

#: ../../scientific-python-lectures/intro/language/standard_library.rst:12
msgid "``os`` module: operating system functionality"
msgstr "``os`` モジュール: オペレーティングシステム機能"

#: ../../scientific-python-lectures/intro/language/standard_library.rst:14
msgid "*\"A portable way of using operating system dependent functionality.\"*"
msgstr "*\"オペレーティングシステムに依存する機能を使用するポータブルな方法。\"*"

#: ../../scientific-python-lectures/intro/language/standard_library.rst:17
msgid "Directory and file manipulation"
msgstr "ディレクトリとファイルの操作"

#: ../../scientific-python-lectures/intro/language/standard_library.rst:19
msgid "Current directory:"
msgstr "現在のディレクトリ:"

#: ../../scientific-python-lectures/intro/language/standard_library.rst:28
msgid "List a directory:"
msgstr "ディレクトリのリスト:"

#: ../../scientific-python-lectures/intro/language/standard_library.rst:35
msgid "Make a directory:"
msgstr "ディレクトリを作ります:"

#: ../../scientific-python-lectures/intro/language/standard_library.rst:44
msgid "Rename the directory:"
msgstr "ディレクトリ名を変更します:"

#: ../../scientific-python-lectures/intro/language/standard_library.rst:61
msgid "Delete a file:"
msgstr "ファイルを削除します:"

#: ../../scientific-python-lectures/intro/language/standard_library.rst:78
msgid "``os.path``: path manipulations"
msgstr ""

#: ../../scientific-python-lectures/intro/language/standard_library.rst:80
msgid "``os.path`` provides common operations on pathnames."
msgstr ""

#: ../../scientific-python-lectures/intro/language/standard_library.rst:121
msgid "Running an external command"
msgstr ""

#: ../../scientific-python-lectures/intro/language/standard_library.rst:129
msgid "Alternative to ``os.system``"
msgstr ""

#: ../../scientific-python-lectures/intro/language/standard_library.rst:131
msgid ""
"A noteworthy alternative to ``os.system`` is the `sh module "
"<https://amoffat.github.com/sh/>`_. Which provides much more convenient ways"
" to obtain the output, error stream and exit code of the external command."
msgstr ""

#: ../../scientific-python-lectures/intro/language/standard_library.rst:151
msgid "Walking a directory"
msgstr ""

#: ../../scientific-python-lectures/intro/language/standard_library.rst:153
msgid "``os.path.walk`` generates a list of filenames in a directory tree."
msgstr ""

#: ../../scientific-python-lectures/intro/language/standard_library.rst:170
msgid "Environment variables:"
msgstr ""

#: ../../scientific-python-lectures/intro/language/standard_library.rst:184
msgid "``shutil``: high-level file operations"
msgstr ""

#: ../../scientific-python-lectures/intro/language/standard_library.rst:186
msgid "The ``shutil`` provides useful file operations:"
msgstr ""

#: ../../scientific-python-lectures/intro/language/standard_library.rst:188
msgid "``shutil.rmtree``: Recursively delete a directory tree."
msgstr ""

#: ../../scientific-python-lectures/intro/language/standard_library.rst:189
msgid ""
"``shutil.move``: Recursively move a file or directory to another location."
msgstr ""

#: ../../scientific-python-lectures/intro/language/standard_library.rst:190
msgid "``shutil.copy``: Copy files or directories."
msgstr ""

#: ../../scientific-python-lectures/intro/language/standard_library.rst:193
msgid "``glob``: Pattern matching on files"
msgstr ""

#: ../../scientific-python-lectures/intro/language/standard_library.rst:195
msgid "The ``glob`` module provides convenient file pattern matching."
msgstr ""

#: ../../scientific-python-lectures/intro/language/standard_library.rst:197
msgid "Find all files ending in ``.txt``:"
msgstr ""

#: ../../scientific-python-lectures/intro/language/standard_library.rst:207
msgid "``sys`` module: system-specific information"
msgstr ""

#: ../../scientific-python-lectures/intro/language/standard_library.rst:209
msgid "System-specific information related to the Python interpreter."
msgstr ""

#: ../../scientific-python-lectures/intro/language/standard_library.rst:211
msgid "Which version of python are you running and where is it installed:"
msgstr ""

#: ../../scientific-python-lectures/intro/language/standard_library.rst:227
msgid "List of command line arguments passed to a Python script:"
msgstr ""

#: ../../scientific-python-lectures/intro/language/standard_library.rst:234
msgid ""
"``sys.path`` is a list of strings that specifies the search path for "
"modules.  Initialized from PYTHONPATH:"
msgstr ""

#: ../../scientific-python-lectures/intro/language/standard_library.rst:250
msgid "``pickle``: easy persistence"
msgstr ""

#: ../../scientific-python-lectures/intro/language/standard_library.rst:252
msgid "Useful to store arbitrary objects to a file. Not safe or fast!"
msgstr ""

#: ../../scientific-python-lectures/intro/language/standard_library.rst:274
msgid ""
"Write a program to search your ``PYTHONPATH`` for the module ``site.py``."
msgstr ""

#: ../../scientific-python-lectures/intro/language/standard_library.rst:276
msgid ":ref:`path_site`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/index.rst:8
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:429
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:430
msgid "Code for the chapter's exercises"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/index.rst:27
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:448
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:449
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_exercises_plot_exercise_1.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/index.rst:44
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:465
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:466
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_exercises_plot_exercise_4.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/index.rst:61
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:482
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:483
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_exercises_plot_exercise_3.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/index.rst:78
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:499
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:500
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_exercises_plot_exercise_5.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/index.rst:95
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:516
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:517
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_exercises_plot_exercise_6.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/index.rst:112
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:533
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:534
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_exercises_plot_exercise_2.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/index.rst:129
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:550
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:551
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_exercises_plot_exercise_7.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/index.rst:146
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:567
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:568
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_exercises_plot_exercise_8.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/index.rst:163
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:584
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:585
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_exercises_plot_exercise_9.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/index.rst:180
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:601
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:602
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_exercises_plot_exercise_10.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_1.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_exercises_plot_exercise_1.py>`"
" to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_exercises_plot_exercise_1.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_1.rst:22
msgid "Exercise 1"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_1.rst:24
msgid "Solution of the exercise 1 with matplotlib."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_1.rst:51
msgid ""
":download:`Download Jupyter notebook: plot_exercise_1.ipynb "
"<plot_exercise_1.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_1.rst:55
msgid ""
":download:`Download Python source code: plot_exercise_1.py "
"<plot_exercise_1.py>`"
msgstr ""
":download:`Download Python source code: plot_exercise_1.py "
"<plot_exercise_1.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_1.rst:59
msgid ":download:`Download zipped: plot_exercise_1.zip <plot_exercise_1.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_1.rst:66
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_10.rst:135
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_2.rst:88
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_3.rst:75
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_4.rst:73
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_5.rst:76
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_6.rst:79
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_7.rst:87
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_8.rst:89
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_9.rst:132
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:1190
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:1191
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_aliased.rst:75
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_alpha.rst:72
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_antialiased.rst:74
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_color.rst:72
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_colormaps.rst:78
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_dash_capstyle.rst:98
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_dash_joinstyle.rst:97
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_linestyles.rst:119
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_linewidth.rst:74
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_markers.rst:119
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_mec.rst:89
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_mew.rst:84
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_mfc.rst:87
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_ms.rst:85
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_solid_capstyle.rst:85
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_solid_joinstyle.rst:80
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_ticks.rst:104
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_axes-2.rst:87
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_axes.rst:73
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_bad.rst:71
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_bar.rst:81
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_contour.rst:79
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_good.rst:71
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_grid.rst:75
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_gridspec.rst:89
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_imshow.rst:77
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_multiplot.rst:77
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_pie.rst:71
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_plot.rst:78
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_plot3d-2.rst:93
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_plot3d.rst:72
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_polar.rst:81
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_quiver.rst:76
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_scatter.rst:74
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_subplot-grid.rst:82
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_subplot-horizontal.rst:71
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_subplot-vertical.rst:72
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_text.rst:97
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_ugly.rst:76
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_bar_ext.rst:110
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_boxplot_ext.rst:113
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_contour_ext.rst:116
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_grid_ext.rst:113
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_imshow_ext.rst:114
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_multiplot_ext.rst:109
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_pie_ext.rst:113
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_plot3d_ext.rst:99
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_plot_ext.rst:109
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_polar_ext.rst:102
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_quiver_ext.rst:114
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_scatter_ext.rst:112
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_text_ext.rst:135
#: ../../scientific-python-lectures/intro/numpy/auto_examples/index.rst:204
#: ../../scientific-python-lectures/intro/numpy/auto_examples/index.rst:205
#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_basic1dplot.rst:64
#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_basic2dplot.rst:64
#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_chebyfit.rst:68
#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_distances.rst:64
#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_elephant.rst:105
#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_mandelbrot.rst:89
#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_polyfit.rst:68
#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_populations.rst:66
#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_randomwalk.rst:87
#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:441
#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:442
#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_2d_minimization.rst:148
#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_connect_measurements.rst:129
#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_curve_fit.rst:115
#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_detrend.rst:95
#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_fftpack.rst:173
#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_image_filters.rst:99
#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_image_transform.rst:96
#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_interpolation.rst:102
#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_mathematical_morpho.rst:99
#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_normal_distribution.rst:75
#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_optimize_example1.rst:89
#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_optimize_example2.rst:142
#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_resample.rst:94
#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_solve_ivp_damped_spring_mass.rst:83
#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_solve_ivp_simple.rst:81
#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_spectrogram.rst:137
#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_t_test.rst:73
#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_curvefit_temperature_data.rst:120
#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_fft_image_denoise.rst:188
#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_image_blur.rst:172
#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_periodicity_finder.rst:118
#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/index.rst:169
#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_cumulative_wind_speed_prediction.rst:81
#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_gumbell_wind_speed_prediction.rst:88
#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_optimize_lidar_complex_data.rst:68
#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_optimize_lidar_complex_data_fit.rst:86
#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_optimize_lidar_data.rst:68
#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_optimize_lidar_data_fit.rst:83
#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_sprog_annual_maxima.rst:68
msgid ""
"`Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_"
msgstr ""
"`Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_10.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_exercises_plot_exercise_10.py>`"
" to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_exercises_plot_exercise_10.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_10.rst:24
msgid "Exercises with matplotlib."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_10.rst:120
msgid ""
":download:`Download Jupyter notebook: plot_exercise_10.ipynb "
"<plot_exercise_10.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_10.rst:124
msgid ""
":download:`Download Python source code: plot_exercise_10.py "
"<plot_exercise_10.py>`"
msgstr ""
":download:`Download Python source code: plot_exercise_10.py "
"<plot_exercise_10.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_10.rst:128
msgid ""
":download:`Download zipped: plot_exercise_10.zip <plot_exercise_10.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_2.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_exercises_plot_exercise_2.py>`"
" to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_exercises_plot_exercise_2.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_2.rst:22
msgid "Exercise 2"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_2.rst:24
msgid "Exercise 2 with matplotlib."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_2.rst:73
msgid ""
":download:`Download Jupyter notebook: plot_exercise_2.ipynb "
"<plot_exercise_2.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_2.rst:77
msgid ""
":download:`Download Python source code: plot_exercise_2.py "
"<plot_exercise_2.py>`"
msgstr ""
":download:`Download Python source code: plot_exercise_2.py "
"<plot_exercise_2.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_2.rst:81
msgid ":download:`Download zipped: plot_exercise_2.zip <plot_exercise_2.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_3.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_exercises_plot_exercise_3.py>`"
" to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_exercises_plot_exercise_3.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_3.rst:22
msgid "Exercise 3"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_3.rst:24
msgid "Exercise 3 with matplotlib."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_3.rst:60
msgid ""
":download:`Download Jupyter notebook: plot_exercise_3.ipynb "
"<plot_exercise_3.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_3.rst:64
msgid ""
":download:`Download Python source code: plot_exercise_3.py "
"<plot_exercise_3.py>`"
msgstr ""
":download:`Download Python source code: plot_exercise_3.py "
"<plot_exercise_3.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_3.rst:68
msgid ":download:`Download zipped: plot_exercise_3.zip <plot_exercise_3.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_4.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_exercises_plot_exercise_4.py>`"
" to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_exercises_plot_exercise_4.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_4.rst:22
msgid "Exercise 4"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_4.rst:24
msgid "Exercise 4 with matplotlib."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_4.rst:58
msgid ""
":download:`Download Jupyter notebook: plot_exercise_4.ipynb "
"<plot_exercise_4.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_4.rst:62
msgid ""
":download:`Download Python source code: plot_exercise_4.py "
"<plot_exercise_4.py>`"
msgstr ""
":download:`Download Python source code: plot_exercise_4.py "
"<plot_exercise_4.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_4.rst:66
msgid ":download:`Download zipped: plot_exercise_4.zip <plot_exercise_4.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_5.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_exercises_plot_exercise_5.py>`"
" to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_exercises_plot_exercise_5.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_5.rst:22
msgid "Exercise 5"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_5.rst:24
msgid "Exercise 5 with matplotlib."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_5.rst:61
msgid ""
":download:`Download Jupyter notebook: plot_exercise_5.ipynb "
"<plot_exercise_5.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_5.rst:65
msgid ""
":download:`Download Python source code: plot_exercise_5.py "
"<plot_exercise_5.py>`"
msgstr ""
":download:`Download Python source code: plot_exercise_5.py "
"<plot_exercise_5.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_5.rst:69
msgid ":download:`Download zipped: plot_exercise_5.zip <plot_exercise_5.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_6.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_exercises_plot_exercise_6.py>`"
" to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_exercises_plot_exercise_6.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_6.rst:22
msgid "Exercise 6"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_6.rst:24
msgid "Exercise 6 with matplotlib."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_6.rst:64
msgid ""
":download:`Download Jupyter notebook: plot_exercise_6.ipynb "
"<plot_exercise_6.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_6.rst:68
msgid ""
":download:`Download Python source code: plot_exercise_6.py "
"<plot_exercise_6.py>`"
msgstr ""
":download:`Download Python source code: plot_exercise_6.py "
"<plot_exercise_6.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_6.rst:72
msgid ":download:`Download zipped: plot_exercise_6.zip <plot_exercise_6.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_7.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_exercises_plot_exercise_7.py>`"
" to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_exercises_plot_exercise_7.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_7.rst:22
msgid "Exercise 7"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_7.rst:24
msgid "Exercise 7 with matplotlib"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_7.rst:72
msgid ""
":download:`Download Jupyter notebook: plot_exercise_7.ipynb "
"<plot_exercise_7.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_7.rst:76
msgid ""
":download:`Download Python source code: plot_exercise_7.py "
"<plot_exercise_7.py>`"
msgstr ""
":download:`Download Python source code: plot_exercise_7.py "
"<plot_exercise_7.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_7.rst:80
msgid ":download:`Download zipped: plot_exercise_7.zip <plot_exercise_7.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_8.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_exercises_plot_exercise_8.py>`"
" to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_exercises_plot_exercise_8.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_8.rst:22
msgid "Exercise 8"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_8.rst:24
msgid "Exercise 8 with matplotlib."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_8.rst:74
msgid ""
":download:`Download Jupyter notebook: plot_exercise_8.ipynb "
"<plot_exercise_8.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_8.rst:78
msgid ""
":download:`Download Python source code: plot_exercise_8.py "
"<plot_exercise_8.py>`"
msgstr ""
":download:`Download Python source code: plot_exercise_8.py "
"<plot_exercise_8.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_8.rst:82
msgid ":download:`Download zipped: plot_exercise_8.zip <plot_exercise_8.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_9.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_exercises_plot_exercise_9.py>`"
" to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_exercises_plot_exercise_9.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_9.rst:22
msgid "Exercise 9"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_9.rst:24
msgid "Exercise 9 with matplotlib."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_9.rst:117
msgid ""
":download:`Download Jupyter notebook: plot_exercise_9.ipynb "
"<plot_exercise_9.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_9.rst:121
msgid ""
":download:`Download Python source code: plot_exercise_9.py "
"<plot_exercise_9.py>`"
msgstr ""
":download:`Download Python source code: plot_exercise_9.py "
"<plot_exercise_9.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/plot_exercise_9.rst:125
msgid ":download:`Download zipped: plot_exercise_9.zip <plot_exercise_9.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/sg_execution_times.rst:8
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:8
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:8
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:8
#: ../../scientific-python-lectures/intro/numpy/auto_examples/sg_execution_times.rst:8
#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:8
#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/sg_execution_times.rst:8
#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/sg_execution_times.rst:8
msgid "Computation times"
msgstr "計算時間"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/sg_execution_times.rst:9
msgid ""
"**00:00.000** total execution time for 10 files **from "
"intro/matplotlib/auto_examples/exercises**:"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/sg_execution_times.rst:32
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:32
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:32
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:32
#: ../../scientific-python-lectures/intro/numpy/auto_examples/sg_execution_times.rst:32
#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:32
#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/sg_execution_times.rst:32
#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/sg_execution_times.rst:32
msgid "Example"
msgstr "例"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/sg_execution_times.rst:33
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:33
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:33
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:33
#: ../../scientific-python-lectures/intro/numpy/auto_examples/sg_execution_times.rst:33
#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:33
#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/sg_execution_times.rst:33
#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/sg_execution_times.rst:33
msgid "Time"
msgstr "時間"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/sg_execution_times.rst:34
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:34
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:34
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:34
#: ../../scientific-python-lectures/intro/numpy/auto_examples/sg_execution_times.rst:34
#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:34
#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/sg_execution_times.rst:34
#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/sg_execution_times.rst:34
msgid "Mem (MB)"
msgstr "Mem (MB)"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/sg_execution_times.rst:35
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_exercises_plot_exercise_1.py` "
"(``plot_exercise_1.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/sg_execution_times.rst:36
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/sg_execution_times.rst:39
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/sg_execution_times.rst:42
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/sg_execution_times.rst:45
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/sg_execution_times.rst:48
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/sg_execution_times.rst:51
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/sg_execution_times.rst:54
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/sg_execution_times.rst:57
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/sg_execution_times.rst:60
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/sg_execution_times.rst:63
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:36
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:39
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:42
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:45
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:48
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:51
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:54
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:57
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:60
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:63
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:66
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:69
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:72
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:75
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:78
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:81
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:84
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:36
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:39
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:42
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:45
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:48
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:51
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:54
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:57
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:60
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:63
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:66
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:69
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:72
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:36
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:39
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:42
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:45
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:48
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:51
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:54
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:57
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:60
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:63
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:66
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:69
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:72
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:75
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:78
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:81
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:84
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:87
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:90
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:93
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:96
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:99
#: ../../scientific-python-lectures/intro/numpy/auto_examples/sg_execution_times.rst:36
#: ../../scientific-python-lectures/intro/numpy/auto_examples/sg_execution_times.rst:39
#: ../../scientific-python-lectures/intro/numpy/auto_examples/sg_execution_times.rst:42
#: ../../scientific-python-lectures/intro/numpy/auto_examples/sg_execution_times.rst:45
#: ../../scientific-python-lectures/intro/numpy/auto_examples/sg_execution_times.rst:48
#: ../../scientific-python-lectures/intro/numpy/auto_examples/sg_execution_times.rst:51
#: ../../scientific-python-lectures/intro/numpy/auto_examples/sg_execution_times.rst:54
#: ../../scientific-python-lectures/intro/numpy/auto_examples/sg_execution_times.rst:57
#: ../../scientific-python-lectures/intro/numpy/auto_examples/sg_execution_times.rst:60
#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:36
#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:39
#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:42
#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:45
#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:48
#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:51
#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:54
#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:57
#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:60
#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:63
#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:66
#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:69
#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:72
#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:75
#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:78
#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:81
#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:84
#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/sg_execution_times.rst:36
#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/sg_execution_times.rst:39
#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/sg_execution_times.rst:42
#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/sg_execution_times.rst:45
#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/sg_execution_times.rst:36
#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/sg_execution_times.rst:39
#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/sg_execution_times.rst:42
#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/sg_execution_times.rst:45
#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/sg_execution_times.rst:48
#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/sg_execution_times.rst:51
#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/sg_execution_times.rst:54
msgid "00:00.000"
msgstr "00:00.000"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/sg_execution_times.rst:37
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/sg_execution_times.rst:40
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/sg_execution_times.rst:43
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/sg_execution_times.rst:46
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/sg_execution_times.rst:49
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/sg_execution_times.rst:52
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/sg_execution_times.rst:55
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/sg_execution_times.rst:58
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/sg_execution_times.rst:61
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/sg_execution_times.rst:64
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:37
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:40
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:43
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:46
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:49
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:52
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:55
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:58
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:61
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:64
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:67
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:70
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:73
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:76
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:79
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:82
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:85
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:37
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:40
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:43
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:46
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:49
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:52
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:55
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:58
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:61
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:64
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:67
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:70
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:73
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:37
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:40
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:43
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:46
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:49
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:52
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:55
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:58
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:61
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:64
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:67
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:70
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:73
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:76
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:79
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:82
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:85
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:88
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:91
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:94
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:97
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:100
#: ../../scientific-python-lectures/intro/numpy/auto_examples/sg_execution_times.rst:37
#: ../../scientific-python-lectures/intro/numpy/auto_examples/sg_execution_times.rst:40
#: ../../scientific-python-lectures/intro/numpy/auto_examples/sg_execution_times.rst:43
#: ../../scientific-python-lectures/intro/numpy/auto_examples/sg_execution_times.rst:46
#: ../../scientific-python-lectures/intro/numpy/auto_examples/sg_execution_times.rst:49
#: ../../scientific-python-lectures/intro/numpy/auto_examples/sg_execution_times.rst:52
#: ../../scientific-python-lectures/intro/numpy/auto_examples/sg_execution_times.rst:55
#: ../../scientific-python-lectures/intro/numpy/auto_examples/sg_execution_times.rst:58
#: ../../scientific-python-lectures/intro/numpy/auto_examples/sg_execution_times.rst:61
#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:37
#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:40
#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:43
#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:46
#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:49
#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:52
#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:55
#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:58
#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:61
#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:64
#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:67
#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:70
#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:73
#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:76
#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:79
#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:82
#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:85
#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/sg_execution_times.rst:37
#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/sg_execution_times.rst:40
#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/sg_execution_times.rst:43
#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/sg_execution_times.rst:46
#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/sg_execution_times.rst:37
#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/sg_execution_times.rst:40
#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/sg_execution_times.rst:43
#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/sg_execution_times.rst:46
#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/sg_execution_times.rst:49
#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/sg_execution_times.rst:52
#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/sg_execution_times.rst:55
msgid "0.0"
msgstr "0.0"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/sg_execution_times.rst:38
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_exercises_plot_exercise_10.py`"
" (``plot_exercise_10.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/sg_execution_times.rst:41
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_exercises_plot_exercise_2.py` "
"(``plot_exercise_2.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/sg_execution_times.rst:44
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_exercises_plot_exercise_3.py` "
"(``plot_exercise_3.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/sg_execution_times.rst:47
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_exercises_plot_exercise_4.py` "
"(``plot_exercise_4.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/sg_execution_times.rst:50
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_exercises_plot_exercise_5.py` "
"(``plot_exercise_5.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/sg_execution_times.rst:53
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_exercises_plot_exercise_6.py` "
"(``plot_exercise_6.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/sg_execution_times.rst:56
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_exercises_plot_exercise_7.py` "
"(``plot_exercise_7.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/sg_execution_times.rst:59
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_exercises_plot_exercise_8.py` "
"(``plot_exercise_8.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/exercises/sg_execution_times.rst:62
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_exercises_plot_exercise_9.py` "
"(``plot_exercise_9.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:5
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:6
msgid "Code samples for Matplotlib"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:7
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:8
msgid ""
"The examples here are only examples relevant to the points raised in this "
"chapter. The matplotlib documentation comes with a much more exhaustive "
"`gallery <http://matplotlib.org/gallery.html>`__."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:28
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:29
msgid ":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_pie.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:45
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:46
msgid ":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_good.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:62
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:63
msgid ":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_scatter.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:79
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:80
msgid ":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_multiplot.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:96
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:97
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_subplot-horizontal.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:113
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:114
msgid ":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_bad.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:130
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:131
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_subplot-vertical.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:147
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:148
msgid ":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_axes.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:164
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:165
msgid ":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_plot3d.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:181
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:182
msgid ":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_imshow.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:198
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:199
msgid ":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_quiver.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:215
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:216
msgid ":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_contour.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:232
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:233
msgid ":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_ugly.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:249
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:250
msgid ":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_plot.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:266
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:267
msgid ":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_polar.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:283
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:284
msgid ":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_bar.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:300
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:301
msgid ":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_subplot-grid.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:317
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:318
msgid ":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_axes-2.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:334
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:335
msgid ":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_grid.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:351
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:352
msgid ":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_plot3d-2.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:368
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:369
msgid ":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_gridspec.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:385
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:386
msgid ":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_text.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:618
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:619
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/index.rst:8
msgid "Example demoing choices for an option"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:637
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:638
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/index.rst:27
msgid ":ref:`sphx_glr_intro_matplotlib_auto_examples_options_plot_color.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:654
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:655
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/index.rst:44
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_options_plot_linewidth.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:671
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:672
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/index.rst:61
msgid ":ref:`sphx_glr_intro_matplotlib_auto_examples_options_plot_alpha.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:688
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:689
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/index.rst:78
msgid ":ref:`sphx_glr_intro_matplotlib_auto_examples_options_plot_aliased.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:705
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:706
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/index.rst:95
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_options_plot_antialiased.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:722
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:723
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/index.rst:112
msgid ":ref:`sphx_glr_intro_matplotlib_auto_examples_options_plot_ms.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:739
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:740
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/index.rst:129
msgid ":ref:`sphx_glr_intro_matplotlib_auto_examples_options_plot_mew.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:756
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:757
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/index.rst:146
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_options_plot_colormaps.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:773
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:774
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/index.rst:163
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_options_plot_solid_joinstyle.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:790
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:791
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/index.rst:180
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_options_plot_solid_capstyle.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:807
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:808
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/index.rst:197
msgid ":ref:`sphx_glr_intro_matplotlib_auto_examples_options_plot_mec.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:824
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:825
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/index.rst:214
msgid ":ref:`sphx_glr_intro_matplotlib_auto_examples_options_plot_mfc.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:841
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:842
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/index.rst:231
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_options_plot_dash_capstyle.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:858
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:859
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/index.rst:248
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_options_plot_dash_joinstyle.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:875
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:876
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/index.rst:265
msgid ":ref:`sphx_glr_intro_matplotlib_auto_examples_options_plot_markers.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:892
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:893
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/index.rst:282
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_options_plot_linestyles.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:909
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:910
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/index.rst:299
msgid ":ref:`sphx_glr_intro_matplotlib_auto_examples_options_plot_ticks.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:925
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:926
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/index.rst:7
msgid "Code generating the summary figures with a title"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:944
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:945
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/index.rst:26
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_pretty_plots_plot_plot3d_ext.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:961
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:962
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/index.rst:43
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_pretty_plots_plot_polar_ext.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:978
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:979
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/index.rst:60
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_pretty_plots_plot_plot_ext.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:995
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:996
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/index.rst:77
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_pretty_plots_plot_multiplot_ext.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:1012
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:1013
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/index.rst:94
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_pretty_plots_plot_boxplot_ext.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:1029
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:1030
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/index.rst:111
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_pretty_plots_plot_scatter_ext.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:1046
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:1047
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/index.rst:128
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_pretty_plots_plot_pie_ext.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:1063
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:1064
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/index.rst:145
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_pretty_plots_plot_imshow_ext.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:1080
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:1081
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/index.rst:162
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_pretty_plots_plot_bar_ext.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:1097
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:1098
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/index.rst:179
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_pretty_plots_plot_quiver_ext.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:1114
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:1115
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/index.rst:196
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_pretty_plots_plot_contour_ext.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:1131
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:1132
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/index.rst:213
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_pretty_plots_plot_grid_ext.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:1148
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:1149
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/index.rst:230
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_pretty_plots_plot_text_ext.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:1179
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:1180
msgid ""
":download:`Download all examples in Python source code: "
"auto_examples_python.zip "
"</intro/matplotlib/auto_examples/auto_examples_python.zip>`"
msgstr ""
":download:`Download all examples in Python source code: "
"auto_examples_python.zip "
"</intro/matplotlib/auto_examples/auto_examples_python.zip>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:1183
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/index.rst:1184
msgid ""
":download:`Download all examples in Jupyter notebooks: "
"auto_examples_jupyter.zip "
"</intro/matplotlib/auto_examples/auto_examples_jupyter.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_aliased.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_options_plot_aliased.py>` "
"to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_options_plot_aliased.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_aliased.rst:22
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_antialiased.rst:22
msgid "Aliased versus anti-aliased"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_aliased.rst:24
msgid "This example demonstrates aliased versus anti-aliased text."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_aliased.rst:60
msgid ""
":download:`Download Jupyter notebook: plot_aliased.ipynb "
"<plot_aliased.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_aliased.rst:64
msgid ""
":download:`Download Python source code: plot_aliased.py <plot_aliased.py>`"
msgstr ""
":download:`Download Python source code: plot_aliased.py <plot_aliased.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_aliased.rst:68
msgid ":download:`Download zipped: plot_aliased.zip <plot_aliased.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_alpha.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_options_plot_alpha.py>` to"
" download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_options_plot_alpha.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_alpha.rst:22
msgid "Alpha: transparency"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_alpha.rst:24
msgid "This example demonstrates using alpha for transparency."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_alpha.rst:57
msgid ""
":download:`Download Jupyter notebook: plot_alpha.ipynb <plot_alpha.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_alpha.rst:61
msgid ":download:`Download Python source code: plot_alpha.py <plot_alpha.py>`"
msgstr ""
":download:`Download Python source code: plot_alpha.py <plot_alpha.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_alpha.rst:65
msgid ":download:`Download zipped: plot_alpha.zip <plot_alpha.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_antialiased.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_options_plot_antialiased.py>`"
" to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_options_plot_antialiased.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_antialiased.rst:24
msgid "The example shows aliased versus anti-aliased text."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_antialiased.rst:59
msgid ""
":download:`Download Jupyter notebook: plot_antialiased.ipynb "
"<plot_antialiased.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_antialiased.rst:63
msgid ""
":download:`Download Python source code: plot_antialiased.py "
"<plot_antialiased.py>`"
msgstr ""
":download:`Download Python source code: plot_antialiased.py "
"<plot_antialiased.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_antialiased.rst:67
msgid ""
":download:`Download zipped: plot_antialiased.zip <plot_antialiased.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_color.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_options_plot_color.py>` to"
" download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_options_plot_color.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_color.rst:22
msgid "The colors matplotlib line plots"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_color.rst:24
msgid "An example demoing the various colors taken by matplotlib's plot."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_color.rst:57
msgid ""
":download:`Download Jupyter notebook: plot_color.ipynb <plot_color.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_color.rst:61
msgid ":download:`Download Python source code: plot_color.py <plot_color.py>`"
msgstr ""
":download:`Download Python source code: plot_color.py <plot_color.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_color.rst:65
msgid ":download:`Download zipped: plot_color.zip <plot_color.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_colormaps.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_options_plot_colormaps.py>`"
" to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_options_plot_colormaps.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_colormaps.rst:22
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1247
msgid "Colormaps"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_colormaps.rst:24
msgid "An example plotting the matplotlib colormaps."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_colormaps.rst:63
msgid ""
":download:`Download Jupyter notebook: plot_colormaps.ipynb "
"<plot_colormaps.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_colormaps.rst:67
msgid ""
":download:`Download Python source code: plot_colormaps.py "
"<plot_colormaps.py>`"
msgstr ""
":download:`Download Python source code: plot_colormaps.py "
"<plot_colormaps.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_colormaps.rst:71
msgid ":download:`Download zipped: plot_colormaps.zip <plot_colormaps.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_dash_capstyle.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_options_plot_dash_capstyle.py>`"
" to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_options_plot_dash_capstyle.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_dash_capstyle.rst:22
msgid "Dash capstyle"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_dash_capstyle.rst:24
msgid "An example demoing the dash capstyle."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_dash_capstyle.rst:83
msgid ""
":download:`Download Jupyter notebook: plot_dash_capstyle.ipynb "
"<plot_dash_capstyle.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_dash_capstyle.rst:87
msgid ""
":download:`Download Python source code: plot_dash_capstyle.py "
"<plot_dash_capstyle.py>`"
msgstr ""
":download:`Download Python source code: plot_dash_capstyle.py "
"<plot_dash_capstyle.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_dash_capstyle.rst:91
msgid ""
":download:`Download zipped: plot_dash_capstyle.zip <plot_dash_capstyle.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_dash_joinstyle.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_options_plot_dash_joinstyle.py>`"
" to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_options_plot_dash_joinstyle.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_dash_joinstyle.rst:22
msgid "Dash join style"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_dash_joinstyle.rst:24
msgid "Example demoing the dash join style."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_dash_joinstyle.rst:82
msgid ""
":download:`Download Jupyter notebook: plot_dash_joinstyle.ipynb "
"<plot_dash_joinstyle.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_dash_joinstyle.rst:86
msgid ""
":download:`Download Python source code: plot_dash_joinstyle.py "
"<plot_dash_joinstyle.py>`"
msgstr ""
":download:`Download Python source code: plot_dash_joinstyle.py "
"<plot_dash_joinstyle.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_dash_joinstyle.rst:90
msgid ""
":download:`Download zipped: plot_dash_joinstyle.zip "
"<plot_dash_joinstyle.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_linestyles.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_options_plot_linestyles.py>`"
" to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_options_plot_linestyles.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_linestyles.rst:22
msgid "Linestyles"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_linestyles.rst:24
msgid "Plot the different line styles."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_linestyles.rst:104
msgid ""
":download:`Download Jupyter notebook: plot_linestyles.ipynb "
"<plot_linestyles.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_linestyles.rst:108
msgid ""
":download:`Download Python source code: plot_linestyles.py "
"<plot_linestyles.py>`"
msgstr ""
":download:`Download Python source code: plot_linestyles.py "
"<plot_linestyles.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_linestyles.rst:112
msgid ":download:`Download zipped: plot_linestyles.zip <plot_linestyles.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_linewidth.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_options_plot_linewidth.py>`"
" to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_options_plot_linewidth.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_linewidth.rst:22
msgid "Linewidth"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_linewidth.rst:24
msgid "Plot various linewidth with matplotlib."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_linewidth.rst:59
msgid ""
":download:`Download Jupyter notebook: plot_linewidth.ipynb "
"<plot_linewidth.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_linewidth.rst:63
msgid ""
":download:`Download Python source code: plot_linewidth.py "
"<plot_linewidth.py>`"
msgstr ""
":download:`Download Python source code: plot_linewidth.py "
"<plot_linewidth.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_linewidth.rst:67
msgid ":download:`Download zipped: plot_linewidth.zip <plot_linewidth.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_markers.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_options_plot_markers.py>` "
"to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_options_plot_markers.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_markers.rst:22
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1241
msgid "Markers"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_markers.rst:24
msgid "Show the different markers of matplotlib."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_markers.rst:104
msgid ""
":download:`Download Jupyter notebook: plot_markers.ipynb "
"<plot_markers.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_markers.rst:108
msgid ""
":download:`Download Python source code: plot_markers.py <plot_markers.py>`"
msgstr ""
":download:`Download Python source code: plot_markers.py <plot_markers.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_markers.rst:112
msgid ":download:`Download zipped: plot_markers.zip <plot_markers.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_mec.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_options_plot_mec.py>` to "
"download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_options_plot_mec.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_mec.rst:22
msgid "Marker edge color"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_mec.rst:24
msgid "Demo the marker edge color of matplotlib's markers."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_mec.rst:74
msgid ":download:`Download Jupyter notebook: plot_mec.ipynb <plot_mec.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_mec.rst:78
msgid ":download:`Download Python source code: plot_mec.py <plot_mec.py>`"
msgstr ":download:`Download Python source code: plot_mec.py <plot_mec.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_mec.rst:82
msgid ":download:`Download zipped: plot_mec.zip <plot_mec.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_mew.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_options_plot_mew.py>` to "
"download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_options_plot_mew.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_mew.rst:22
msgid "Marker edge width"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_mew.rst:24
msgid "Demo the marker edge widths of matplotlib's markers."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_mew.rst:69
msgid ":download:`Download Jupyter notebook: plot_mew.ipynb <plot_mew.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_mew.rst:73
msgid ":download:`Download Python source code: plot_mew.py <plot_mew.py>`"
msgstr ":download:`Download Python source code: plot_mew.py <plot_mew.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_mew.rst:77
msgid ":download:`Download zipped: plot_mew.zip <plot_mew.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_mfc.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_options_plot_mfc.py>` to "
"download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_options_plot_mfc.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_mfc.rst:22
msgid "Marker face color"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_mfc.rst:24
msgid "Demo the marker face color of matplotlib's markers."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_mfc.rst:72
msgid ":download:`Download Jupyter notebook: plot_mfc.ipynb <plot_mfc.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_mfc.rst:76
msgid ":download:`Download Python source code: plot_mfc.py <plot_mfc.py>`"
msgstr ":download:`Download Python source code: plot_mfc.py <plot_mfc.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_mfc.rst:80
msgid ":download:`Download zipped: plot_mfc.zip <plot_mfc.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_ms.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_options_plot_ms.py>` to "
"download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_options_plot_ms.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_ms.rst:22
msgid "Marker size"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_ms.rst:24
msgid "Demo the marker size control in matplotlib."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_ms.rst:70
msgid ":download:`Download Jupyter notebook: plot_ms.ipynb <plot_ms.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_ms.rst:74
msgid ":download:`Download Python source code: plot_ms.py <plot_ms.py>`"
msgstr ":download:`Download Python source code: plot_ms.py <plot_ms.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_ms.rst:78
msgid ":download:`Download zipped: plot_ms.zip <plot_ms.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_solid_capstyle.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_options_plot_solid_capstyle.py>`"
" to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_options_plot_solid_capstyle.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_solid_capstyle.rst:22
msgid "Solid cap style"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_solid_capstyle.rst:24
msgid "An example demoing the solide cap style in matplotlib."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_solid_capstyle.rst:70
msgid ""
":download:`Download Jupyter notebook: plot_solid_capstyle.ipynb "
"<plot_solid_capstyle.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_solid_capstyle.rst:74
msgid ""
":download:`Download Python source code: plot_solid_capstyle.py "
"<plot_solid_capstyle.py>`"
msgstr ""
":download:`Download Python source code: plot_solid_capstyle.py "
"<plot_solid_capstyle.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_solid_capstyle.rst:78
msgid ""
":download:`Download zipped: plot_solid_capstyle.zip "
"<plot_solid_capstyle.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_solid_joinstyle.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_options_plot_solid_joinstyle.py>`"
" to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_options_plot_solid_joinstyle.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_solid_joinstyle.rst:22
msgid "Solid joint style"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_solid_joinstyle.rst:24
msgid "An example showing the different solid joint styles in matplotlib."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_solid_joinstyle.rst:65
msgid ""
":download:`Download Jupyter notebook: plot_solid_joinstyle.ipynb "
"<plot_solid_joinstyle.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_solid_joinstyle.rst:69
msgid ""
":download:`Download Python source code: plot_solid_joinstyle.py "
"<plot_solid_joinstyle.py>`"
msgstr ""
":download:`Download Python source code: plot_solid_joinstyle.py "
"<plot_solid_joinstyle.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_solid_joinstyle.rst:73
msgid ""
":download:`Download zipped: plot_solid_joinstyle.zip "
"<plot_solid_joinstyle.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_ticks.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_options_plot_ticks.py>` to"
" download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_options_plot_ticks.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_ticks.rst:22
msgid "Locators for tick on axis"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_ticks.rst:24
msgid ""
"An example demoing different locators to position ticks on axis for "
"matplotlib."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_ticks.rst:89
msgid ""
":download:`Download Jupyter notebook: plot_ticks.ipynb <plot_ticks.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_ticks.rst:93
msgid ":download:`Download Python source code: plot_ticks.py <plot_ticks.py>`"
msgstr ""
":download:`Download Python source code: plot_ticks.py <plot_ticks.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/plot_ticks.rst:97
msgid ":download:`Download zipped: plot_ticks.zip <plot_ticks.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:9
msgid ""
"**00:00.000** total execution time for 17 files **from "
"intro/matplotlib/auto_examples/options**:"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:35
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_options_plot_aliased.py` "
"(``plot_aliased.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:38
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_options_plot_alpha.py` "
"(``plot_alpha.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:41
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_options_plot_antialiased.py` "
"(``plot_antialiased.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:44
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_options_plot_color.py` "
"(``plot_color.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:47
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_options_plot_colormaps.py` "
"(``plot_colormaps.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:50
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_options_plot_dash_capstyle.py`"
" (``plot_dash_capstyle.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:53
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_options_plot_dash_joinstyle.py`"
" (``plot_dash_joinstyle.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:56
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_options_plot_linestyles.py` "
"(``plot_linestyles.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:59
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_options_plot_linewidth.py` "
"(``plot_linewidth.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:62
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_options_plot_markers.py` "
"(``plot_markers.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:65
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_options_plot_mec.py` "
"(``plot_mec.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:68
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_options_plot_mew.py` "
"(``plot_mew.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:71
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_options_plot_mfc.py` "
"(``plot_mfc.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:74
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_options_plot_ms.py` "
"(``plot_ms.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:77
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_options_plot_solid_capstyle.py`"
" (``plot_solid_capstyle.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:80
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_options_plot_solid_joinstyle.py`"
" (``plot_solid_joinstyle.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/options/sg_execution_times.rst:83
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_options_plot_ticks.py` "
"(``plot_ticks.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_axes.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_plot_axes.py>` to download"
" the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_plot_axes.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_axes.rst:22
msgid "Simple axes example"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_axes.rst:24
msgid "This example shows a couple of simple usage of axes."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_axes.rst:58
msgid ""
":download:`Download Jupyter notebook: plot_axes.ipynb <plot_axes.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_axes.rst:62
msgid ":download:`Download Python source code: plot_axes.py <plot_axes.py>`"
msgstr ":download:`Download Python source code: plot_axes.py <plot_axes.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_axes.rst:66
msgid ":download:`Download zipped: plot_axes.zip <plot_axes.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_axes-2.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_plot_axes-2.py>` to "
"download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_plot_axes-2.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_axes-2.rst:22
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:591
msgid "Axes"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_axes-2.rst:24
msgid "This example shows various axes command to position matplotlib axes."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_axes-2.rst:72
msgid ""
":download:`Download Jupyter notebook: plot_axes-2.ipynb <plot_axes-2.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_axes-2.rst:76
msgid ""
":download:`Download Python source code: plot_axes-2.py <plot_axes-2.py>`"
msgstr ""
":download:`Download Python source code: plot_axes-2.py <plot_axes-2.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_axes-2.rst:80
msgid ":download:`Download zipped: plot_axes-2.zip <plot_axes-2.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_bad.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_plot_bad.py>` to download "
"the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_plot_bad.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_bad.rst:22
msgid "A simple plotting example"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_bad.rst:24
msgid "A plotting example with a few simple tweaks"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_bad.rst:56
msgid ":download:`Download Jupyter notebook: plot_bad.ipynb <plot_bad.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_bad.rst:60
msgid ":download:`Download Python source code: plot_bad.py <plot_bad.py>`"
msgstr ":download:`Download Python source code: plot_bad.py <plot_bad.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_bad.rst:64
msgid ":download:`Download zipped: plot_bad.zip <plot_bad.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_bar.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_plot_bar.py>` to download "
"the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_plot_bar.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_bar.rst:22
msgid "Bar plots"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_bar.rst:24
msgid "An example of bar plots with matplotlib."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_bar.rst:66
msgid ":download:`Download Jupyter notebook: plot_bar.ipynb <plot_bar.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_bar.rst:70
msgid ":download:`Download Python source code: plot_bar.py <plot_bar.py>`"
msgstr ":download:`Download Python source code: plot_bar.py <plot_bar.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_bar.rst:74
msgid ":download:`Download zipped: plot_bar.zip <plot_bar.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_contour.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_plot_contour.py>` to "
"download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_plot_contour.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_contour.rst:22
msgid "Displaying the contours of a function"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_contour.rst:24
msgid ""
"An example showing how to display the contours of a function with "
"matplotlib."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_contour.rst:64
msgid ""
":download:`Download Jupyter notebook: plot_contour.ipynb "
"<plot_contour.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_contour.rst:68
msgid ""
":download:`Download Python source code: plot_contour.py <plot_contour.py>`"
msgstr ""
":download:`Download Python source code: plot_contour.py <plot_contour.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_contour.rst:72
msgid ":download:`Download zipped: plot_contour.zip <plot_contour.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_good.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_plot_good.py>` to download"
" the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_plot_good.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_good.rst:22
msgid "A simple, good-looking plot"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_good.rst:24
msgid "Demoing some simple features of matplotlib"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_good.rst:56
msgid ""
":download:`Download Jupyter notebook: plot_good.ipynb <plot_good.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_good.rst:60
msgid ":download:`Download Python source code: plot_good.py <plot_good.py>`"
msgstr ":download:`Download Python source code: plot_good.py <plot_good.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_good.rst:64
msgid ":download:`Download zipped: plot_good.zip <plot_good.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_grid.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_plot_grid.py>` to download"
" the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_plot_grid.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_grid.rst:22
msgid "Grid"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_grid.rst:24
msgid "Displaying a grid on the axes in matploblib."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_grid.rst:60
msgid ""
":download:`Download Jupyter notebook: plot_grid.ipynb <plot_grid.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_grid.rst:64
msgid ":download:`Download Python source code: plot_grid.py <plot_grid.py>`"
msgstr ":download:`Download Python source code: plot_grid.py <plot_grid.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_grid.rst:68
msgid ":download:`Download zipped: plot_grid.zip <plot_grid.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_gridspec.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_plot_gridspec.py>` to "
"download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_plot_gridspec.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_gridspec.rst:22
msgid "GridSpec"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_gridspec.rst:24
msgid "An example demoing gridspec"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_gridspec.rst:74
msgid ""
":download:`Download Jupyter notebook: plot_gridspec.ipynb "
"<plot_gridspec.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_gridspec.rst:78
msgid ""
":download:`Download Python source code: plot_gridspec.py <plot_gridspec.py>`"
msgstr ""
":download:`Download Python source code: plot_gridspec.py <plot_gridspec.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_gridspec.rst:82
msgid ":download:`Download zipped: plot_gridspec.zip <plot_gridspec.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_imshow.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_plot_imshow.py>` to "
"download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_plot_imshow.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_imshow.rst:22
msgid "Imshow elaborate"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_imshow.rst:24
msgid "An example demoing imshow and styling the figure."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_imshow.rst:62
msgid ""
":download:`Download Jupyter notebook: plot_imshow.ipynb <plot_imshow.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_imshow.rst:66
msgid ""
":download:`Download Python source code: plot_imshow.py <plot_imshow.py>`"
msgstr ""
":download:`Download Python source code: plot_imshow.py <plot_imshow.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_imshow.rst:70
msgid ":download:`Download zipped: plot_imshow.zip <plot_imshow.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_multiplot.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_plot_multiplot.py>` to "
"download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_plot_multiplot.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_multiplot.rst:22
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:562
msgid "Subplots"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_multiplot.rst:24
msgid "Show multiple subplots in matplotlib."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_multiplot.rst:62
msgid ""
":download:`Download Jupyter notebook: plot_multiplot.ipynb "
"<plot_multiplot.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_multiplot.rst:66
msgid ""
":download:`Download Python source code: plot_multiplot.py "
"<plot_multiplot.py>`"
msgstr ""
":download:`Download Python source code: plot_multiplot.py "
"<plot_multiplot.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_multiplot.rst:70
msgid ":download:`Download zipped: plot_multiplot.zip <plot_multiplot.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_pie.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_plot_pie.py>` to download "
"the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_plot_pie.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_pie.rst:22
msgid "Pie chart"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_pie.rst:24
msgid "A simple pie chart example with matplotlib."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_pie.rst:56
msgid ":download:`Download Jupyter notebook: plot_pie.ipynb <plot_pie.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_pie.rst:60
msgid ":download:`Download Python source code: plot_pie.py <plot_pie.py>`"
msgstr ":download:`Download Python source code: plot_pie.py <plot_pie.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_pie.rst:64
msgid ":download:`Download zipped: plot_pie.zip <plot_pie.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_plot.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_plot_plot.py>` to download"
" the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_plot_plot.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_plot.rst:22
msgid "Plot and filled plots"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_plot.rst:24
msgid "Simple example of plots and filling between them with matplotlib."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_plot.rst:63
msgid ""
":download:`Download Jupyter notebook: plot_plot.ipynb <plot_plot.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_plot.rst:67
msgid ":download:`Download Python source code: plot_plot.py <plot_plot.py>`"
msgstr ":download:`Download Python source code: plot_plot.py <plot_plot.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_plot.rst:71
msgid ":download:`Download zipped: plot_plot.zip <plot_plot.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_plot3d.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_plot_plot3d.py>` to "
"download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_plot_plot3d.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_plot3d-2.rst:22
#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_plot3d.rst:22
msgid "3D plotting"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_plot3d.rst:24
msgid "A simple example of 3D plotting."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_plot3d.rst:57
msgid ""
":download:`Download Jupyter notebook: plot_plot3d.ipynb <plot_plot3d.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_plot3d.rst:61
msgid ""
":download:`Download Python source code: plot_plot3d.py <plot_plot3d.py>`"
msgstr ""
":download:`Download Python source code: plot_plot3d.py <plot_plot3d.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_plot3d.rst:65
msgid ":download:`Download zipped: plot_plot3d.zip <plot_plot3d.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_plot3d-2.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_plot_plot3d-2.py>` to "
"download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_plot_plot3d-2.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_plot3d-2.rst:24
msgid "Demo 3D plotting with matplotlib and style the figure."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_plot3d-2.rst:78
msgid ""
":download:`Download Jupyter notebook: plot_plot3d-2.ipynb "
"<plot_plot3d-2.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_plot3d-2.rst:82
msgid ""
":download:`Download Python source code: plot_plot3d-2.py <plot_plot3d-2.py>`"
msgstr ""
":download:`Download Python source code: plot_plot3d-2.py <plot_plot3d-2.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_plot3d-2.rst:86
msgid ":download:`Download zipped: plot_plot3d-2.zip <plot_plot3d-2.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_polar.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_plot_polar.py>` to "
"download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_plot_polar.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_polar.rst:22
msgid "Plotting in polar coordinates"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_polar.rst:24
msgid ""
"A simple example showing how to plot in polar coordinates with matplotlib."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_polar.rst:66
msgid ""
":download:`Download Jupyter notebook: plot_polar.ipynb <plot_polar.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_polar.rst:70
msgid ":download:`Download Python source code: plot_polar.py <plot_polar.py>`"
msgstr ""
":download:`Download Python source code: plot_polar.py <plot_polar.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_polar.rst:74
msgid ":download:`Download zipped: plot_polar.zip <plot_polar.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_quiver.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_plot_quiver.py>` to "
"download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_plot_quiver.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_quiver.rst:22
msgid "Plotting a vector field: quiver"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_quiver.rst:24
msgid ""
"A simple example showing how to plot a vector field (quiver) with "
"matplotlib."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_quiver.rst:61
msgid ""
":download:`Download Jupyter notebook: plot_quiver.ipynb <plot_quiver.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_quiver.rst:65
msgid ""
":download:`Download Python source code: plot_quiver.py <plot_quiver.py>`"
msgstr ""
":download:`Download Python source code: plot_quiver.py <plot_quiver.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_quiver.rst:69
msgid ":download:`Download zipped: plot_quiver.zip <plot_quiver.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_scatter.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_plot_scatter.py>` to "
"download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_plot_scatter.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_scatter.rst:22
msgid "Plotting a scatter of points"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_scatter.rst:24
msgid ""
"A simple example showing how to plot a scatter of points with matplotlib."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_scatter.rst:59
msgid ""
":download:`Download Jupyter notebook: plot_scatter.ipynb "
"<plot_scatter.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_scatter.rst:63
msgid ""
":download:`Download Python source code: plot_scatter.py <plot_scatter.py>`"
msgstr ""
":download:`Download Python source code: plot_scatter.py <plot_scatter.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_scatter.rst:67
msgid ":download:`Download zipped: plot_scatter.zip <plot_scatter.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_subplot-grid.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_plot_subplot-grid.py>` to "
"download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_plot_subplot-"
"grid.py>` をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_subplot-grid.rst:22
msgid "Subplot grid"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_subplot-grid.rst:24
msgid "An example showing the subplot grid in matplotlib."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_subplot-grid.rst:67
msgid ""
":download:`Download Jupyter notebook: plot_subplot-grid.ipynb <plot_subplot-"
"grid.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_subplot-grid.rst:71
msgid ""
":download:`Download Python source code: plot_subplot-grid.py <plot_subplot-"
"grid.py>`"
msgstr ""
":download:`Download Python source code: plot_subplot-grid.py <plot_subplot-"
"grid.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_subplot-grid.rst:75
msgid ""
":download:`Download zipped: plot_subplot-grid.zip <plot_subplot-grid.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_subplot-horizontal.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_plot_subplot-"
"horizontal.py>` to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_plot_subplot-"
"horizontal.py>` をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_subplot-horizontal.rst:22
msgid "Horizontal arrangement of subplots"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_subplot-horizontal.rst:24
msgid "An example showing horizontal arrangement of subplots with matplotlib."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_subplot-horizontal.rst:56
msgid ""
":download:`Download Jupyter notebook: plot_subplot-horizontal.ipynb "
"<plot_subplot-horizontal.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_subplot-horizontal.rst:60
msgid ""
":download:`Download Python source code: plot_subplot-horizontal.py "
"<plot_subplot-horizontal.py>`"
msgstr ""
":download:`Download Python source code: plot_subplot-horizontal.py "
"<plot_subplot-horizontal.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_subplot-horizontal.rst:64
msgid ""
":download:`Download zipped: plot_subplot-horizontal.zip <plot_subplot-"
"horizontal.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_subplot-vertical.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_plot_subplot-vertical.py>`"
" to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_plot_subplot-"
"vertical.py>` をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_subplot-vertical.rst:22
msgid "Subplot plot arrangement vertical"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_subplot-vertical.rst:24
msgid "An example showing vertical arrangement of subplots with matplotlib."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_subplot-vertical.rst:57
msgid ""
":download:`Download Jupyter notebook: plot_subplot-vertical.ipynb "
"<plot_subplot-vertical.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_subplot-vertical.rst:61
msgid ""
":download:`Download Python source code: plot_subplot-vertical.py "
"<plot_subplot-vertical.py>`"
msgstr ""
":download:`Download Python source code: plot_subplot-vertical.py "
"<plot_subplot-vertical.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_subplot-vertical.rst:65
msgid ""
":download:`Download zipped: plot_subplot-vertical.zip <plot_subplot-"
"vertical.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_text.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_plot_text.py>` to download"
" the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_plot_text.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_text.rst:22
msgid "Demo text printing"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_text.rst:24
msgid "A example showing off elaborate text printing with matplotlib."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_text.rst:82
msgid ""
":download:`Download Jupyter notebook: plot_text.ipynb <plot_text.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_text.rst:86
msgid ":download:`Download Python source code: plot_text.py <plot_text.py>`"
msgstr ":download:`Download Python source code: plot_text.py <plot_text.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_text.rst:90
msgid ":download:`Download zipped: plot_text.zip <plot_text.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_ugly.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_plot_ugly.py>` to download"
" the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_plot_ugly.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_ugly.rst:22
msgid "A example of plotting not quite right"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_ugly.rst:24
msgid "An \"ugly\" example of plotting."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_ugly.rst:61
msgid ""
":download:`Download Jupyter notebook: plot_ugly.ipynb <plot_ugly.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_ugly.rst:65
msgid ":download:`Download Python source code: plot_ugly.py <plot_ugly.py>`"
msgstr ":download:`Download Python source code: plot_ugly.py <plot_ugly.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/plot_ugly.rst:69
msgid ":download:`Download zipped: plot_ugly.zip <plot_ugly.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_bar_ext.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_pretty_plots_plot_bar_ext.py>`"
" to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_pretty_plots_plot_bar_ext.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_bar_ext.rst:22
msgid "Bar plot advanced"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_bar_ext.rst:24
msgid "An more elaborate bar plot example"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_bar_ext.rst:95
msgid ""
":download:`Download Jupyter notebook: plot_bar_ext.ipynb "
"<plot_bar_ext.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_bar_ext.rst:99
msgid ""
":download:`Download Python source code: plot_bar_ext.py <plot_bar_ext.py>`"
msgstr ""
":download:`Download Python source code: plot_bar_ext.py <plot_bar_ext.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_bar_ext.rst:103
msgid ":download:`Download zipped: plot_bar_ext.zip <plot_bar_ext.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_boxplot_ext.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_pretty_plots_plot_boxplot_ext.py>`"
" to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_pretty_plots_plot_boxplot_ext.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_boxplot_ext.rst:22
msgid "Boxplot with matplotlib"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_boxplot_ext.rst:24
msgid "An example of doing box plots with matplotlib"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_boxplot_ext.rst:98
msgid ""
":download:`Download Jupyter notebook: plot_boxplot_ext.ipynb "
"<plot_boxplot_ext.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_boxplot_ext.rst:102
msgid ""
":download:`Download Python source code: plot_boxplot_ext.py "
"<plot_boxplot_ext.py>`"
msgstr ""
":download:`Download Python source code: plot_boxplot_ext.py "
"<plot_boxplot_ext.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_boxplot_ext.rst:106
msgid ""
":download:`Download zipped: plot_boxplot_ext.zip <plot_boxplot_ext.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_contour_ext.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_pretty_plots_plot_contour_ext.py>`"
" to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_pretty_plots_plot_contour_ext.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_contour_ext.rst:22
msgid "Display the contours of a function"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_contour_ext.rst:24
msgid ""
"An example demoing how to plot the contours of a function, with additional "
"layout tweaks."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_contour_ext.rst:101
msgid ""
":download:`Download Jupyter notebook: plot_contour_ext.ipynb "
"<plot_contour_ext.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_contour_ext.rst:105
msgid ""
":download:`Download Python source code: plot_contour_ext.py "
"<plot_contour_ext.py>`"
msgstr ""
":download:`Download Python source code: plot_contour_ext.py "
"<plot_contour_ext.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_contour_ext.rst:109
msgid ""
":download:`Download zipped: plot_contour_ext.zip <plot_contour_ext.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_grid_ext.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_pretty_plots_plot_grid_ext.py>`"
" to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_pretty_plots_plot_grid_ext.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_grid_ext.rst:22
msgid "Grid elaborate"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_grid_ext.rst:24
msgid "An example displaying a grid on the axes and tweaking the layout."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_grid_ext.rst:98
msgid ""
":download:`Download Jupyter notebook: plot_grid_ext.ipynb "
"<plot_grid_ext.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_grid_ext.rst:102
msgid ""
":download:`Download Python source code: plot_grid_ext.py <plot_grid_ext.py>`"
msgstr ""
":download:`Download Python source code: plot_grid_ext.py <plot_grid_ext.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_grid_ext.rst:106
msgid ":download:`Download zipped: plot_grid_ext.zip <plot_grid_ext.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_imshow_ext.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_pretty_plots_plot_imshow_ext.py>`"
" to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_pretty_plots_plot_imshow_ext.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_imshow_ext.rst:22
msgid "Imshow demo"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_imshow_ext.rst:24
msgid "Demoing imshow"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_imshow_ext.rst:99
msgid ""
":download:`Download Jupyter notebook: plot_imshow_ext.ipynb "
"<plot_imshow_ext.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_imshow_ext.rst:103
msgid ""
":download:`Download Python source code: plot_imshow_ext.py "
"<plot_imshow_ext.py>`"
msgstr ""
":download:`Download Python source code: plot_imshow_ext.py "
"<plot_imshow_ext.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_imshow_ext.rst:107
msgid ":download:`Download zipped: plot_imshow_ext.zip <plot_imshow_ext.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_multiplot_ext.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_pretty_plots_plot_multiplot_ext.py>`"
" to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_pretty_plots_plot_multiplot_ext.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_multiplot_ext.rst:22
msgid "Multiple plots vignette"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_multiplot_ext.rst:24
msgid "Demo multiple plots and style the figure."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_multiplot_ext.rst:94
msgid ""
":download:`Download Jupyter notebook: plot_multiplot_ext.ipynb "
"<plot_multiplot_ext.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_multiplot_ext.rst:98
msgid ""
":download:`Download Python source code: plot_multiplot_ext.py "
"<plot_multiplot_ext.py>`"
msgstr ""
":download:`Download Python source code: plot_multiplot_ext.py "
"<plot_multiplot_ext.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_multiplot_ext.rst:102
msgid ""
":download:`Download zipped: plot_multiplot_ext.zip <plot_multiplot_ext.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_pie_ext.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_pretty_plots_plot_pie_ext.py>`"
" to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_pretty_plots_plot_pie_ext.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_pie_ext.rst:22
msgid "Pie chart vignette"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_pie_ext.rst:24
msgid "Demo pie chart with matplotlib and style the figure."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_pie_ext.rst:98
msgid ""
":download:`Download Jupyter notebook: plot_pie_ext.ipynb "
"<plot_pie_ext.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_pie_ext.rst:102
msgid ""
":download:`Download Python source code: plot_pie_ext.py <plot_pie_ext.py>`"
msgstr ""
":download:`Download Python source code: plot_pie_ext.py <plot_pie_ext.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_pie_ext.rst:106
msgid ":download:`Download zipped: plot_pie_ext.zip <plot_pie_ext.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_plot3d_ext.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_pretty_plots_plot_plot3d_ext.py>`"
" to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_pretty_plots_plot_plot3d_ext.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_plot3d_ext.rst:22
msgid "3D plotting vignette"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_plot3d_ext.rst:24
msgid "Demo 3D plotting with matplotlib and decorate the figure."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_plot3d_ext.rst:84
msgid ""
":download:`Download Jupyter notebook: plot_plot3d_ext.ipynb "
"<plot_plot3d_ext.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_plot3d_ext.rst:88
msgid ""
":download:`Download Python source code: plot_plot3d_ext.py "
"<plot_plot3d_ext.py>`"
msgstr ""
":download:`Download Python source code: plot_plot3d_ext.py "
"<plot_plot3d_ext.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_plot3d_ext.rst:92
msgid ":download:`Download zipped: plot_plot3d_ext.zip <plot_plot3d_ext.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_plot_ext.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_pretty_plots_plot_plot_ext.py>`"
" to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_pretty_plots_plot_plot_ext.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_plot_ext.rst:22
msgid "Plot example vignette"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_plot_ext.rst:24
msgid "An example of plots with matplotlib, and added annotations."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_plot_ext.rst:94
msgid ""
":download:`Download Jupyter notebook: plot_plot_ext.ipynb "
"<plot_plot_ext.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_plot_ext.rst:98
msgid ""
":download:`Download Python source code: plot_plot_ext.py <plot_plot_ext.py>`"
msgstr ""
":download:`Download Python source code: plot_plot_ext.py <plot_plot_ext.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_plot_ext.rst:102
msgid ":download:`Download zipped: plot_plot_ext.zip <plot_plot_ext.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_polar_ext.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_pretty_plots_plot_polar_ext.py>`"
" to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_intro_matplotlib_auto_examples_pretty_plots_plot_polar_ext.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_polar_ext.rst:22
msgid "Plotting in polar, decorated"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_polar_ext.rst:24
msgid ""
"An example showing how to plot in polar coordinate, and some decorations."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_polar_ext.rst:87
msgid ""
":download:`Download Jupyter notebook: plot_polar_ext.ipynb "
"<plot_polar_ext.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_polar_ext.rst:91
msgid ""
":download:`Download Python source code: plot_polar_ext.py "
"<plot_polar_ext.py>`"
msgstr ""
":download:`Download Python source code: plot_polar_ext.py "
"<plot_polar_ext.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_polar_ext.rst:95
msgid ":download:`Download zipped: plot_polar_ext.zip <plot_polar_ext.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_quiver_ext.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_pretty_plots_plot_quiver_ext.py>`"
" to download the full example code."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_quiver_ext.rst:22
msgid "Plotting quiver decorated"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_quiver_ext.rst:24
msgid "An example showing quiver with decorations."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_quiver_ext.rst:99
msgid ""
":download:`Download Jupyter notebook: plot_quiver_ext.ipynb "
"<plot_quiver_ext.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_quiver_ext.rst:103
msgid ""
":download:`Download Python source code: plot_quiver_ext.py "
"<plot_quiver_ext.py>`"
msgstr ""
":download:`Download Python source code: plot_quiver_ext.py "
"<plot_quiver_ext.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_quiver_ext.rst:107
msgid ":download:`Download zipped: plot_quiver_ext.zip <plot_quiver_ext.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_scatter_ext.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_pretty_plots_plot_scatter_ext.py>`"
" to download the full example code."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_scatter_ext.rst:22
msgid "Plot scatter decorated"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_scatter_ext.rst:24
msgid "An example showing the scatter function, with decorations."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_scatter_ext.rst:97
msgid ""
":download:`Download Jupyter notebook: plot_scatter_ext.ipynb "
"<plot_scatter_ext.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_scatter_ext.rst:101
msgid ""
":download:`Download Python source code: plot_scatter_ext.py "
"<plot_scatter_ext.py>`"
msgstr ""
":download:`Download Python source code: plot_scatter_ext.py "
"<plot_scatter_ext.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_scatter_ext.rst:105
msgid ""
":download:`Download zipped: plot_scatter_ext.zip <plot_scatter_ext.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_text_ext.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_matplotlib_auto_examples_pretty_plots_plot_text_ext.py>`"
" to download the full example code."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_text_ext.rst:22
msgid "Text printing decorated"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_text_ext.rst:24
msgid "An example showing text printing and decorating the resulting figure."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_text_ext.rst:120
msgid ""
":download:`Download Jupyter notebook: plot_text_ext.ipynb "
"<plot_text_ext.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_text_ext.rst:124
msgid ""
":download:`Download Python source code: plot_text_ext.py <plot_text_ext.py>`"
msgstr ""
":download:`Download Python source code: plot_text_ext.py <plot_text_ext.py>`"

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/plot_text_ext.rst:128
msgid ":download:`Download zipped: plot_text_ext.zip <plot_text_ext.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:9
msgid ""
"**00:00.000** total execution time for 13 files **from "
"intro/matplotlib/auto_examples/pretty_plots**:"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:35
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_pretty_plots_plot_bar_ext.py` "
"(``plot_bar_ext.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:38
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_pretty_plots_plot_boxplot_ext.py`"
" (``plot_boxplot_ext.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:41
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_pretty_plots_plot_contour_ext.py`"
" (``plot_contour_ext.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:44
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_pretty_plots_plot_grid_ext.py`"
" (``plot_grid_ext.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:47
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_pretty_plots_plot_imshow_ext.py`"
" (``plot_imshow_ext.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:50
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_pretty_plots_plot_multiplot_ext.py`"
" (``plot_multiplot_ext.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:53
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_pretty_plots_plot_pie_ext.py` "
"(``plot_pie_ext.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:56
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_pretty_plots_plot_plot3d_ext.py`"
" (``plot_plot3d_ext.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:59
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_pretty_plots_plot_plot_ext.py`"
" (``plot_plot_ext.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:62
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_pretty_plots_plot_polar_ext.py`"
" (``plot_polar_ext.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:65
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_pretty_plots_plot_quiver_ext.py`"
" (``plot_quiver_ext.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:68
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_pretty_plots_plot_scatter_ext.py`"
" (``plot_scatter_ext.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/pretty_plots/sg_execution_times.rst:71
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_pretty_plots_plot_text_ext.py`"
" (``plot_text_ext.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:9
msgid ""
"**00:00.000** total execution time for 22 files **from "
"intro/matplotlib/auto_examples**:"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:35
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_axes-2.py` "
"(``plot_axes-2.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:38
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_axes.py` "
"(``plot_axes.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:41
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_bad.py` (``plot_bad.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:44
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_bar.py` (``plot_bar.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:47
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_contour.py` "
"(``plot_contour.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:50
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_good.py` "
"(``plot_good.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:53
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_grid.py` "
"(``plot_grid.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:56
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_gridspec.py` "
"(``plot_gridspec.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:59
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_imshow.py` "
"(``plot_imshow.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:62
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_multiplot.py` "
"(``plot_multiplot.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:65
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_pie.py` (``plot_pie.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:68
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_plot.py` "
"(``plot_plot.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:71
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_plot3d-2.py` "
"(``plot_plot3d-2.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:74
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_plot3d.py` "
"(``plot_plot3d.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:77
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_polar.py` "
"(``plot_polar.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:80
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_quiver.py` "
"(``plot_quiver.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:83
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_scatter.py` "
"(``plot_scatter.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:86
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_subplot-grid.py` "
"(``plot_subplot-grid.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:89
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_subplot-horizontal.py` "
"(``plot_subplot-horizontal.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:92
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_subplot-vertical.py` "
"(``plot_subplot-vertical.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:95
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_text.py` "
"(``plot_text.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/auto_examples/sg_execution_times.rst:98
msgid ""
":ref:`sphx_glr_intro_matplotlib_auto_examples_plot_ugly.py` "
"(``plot_ugly.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:8
msgid "Matplotlib: plotting"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst-1
msgid "**Thanks**"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:12
msgid ""
"Many thanks to **Bill Wing** and **Christoph Deil** for review and "
"corrections."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:15
msgid "**Authors**: *Nicolas Rougier, Mike Müller, Gaël Varoquaux*"
msgstr "**著者**: *Nicolas Rougier, Mike Müller, Gaël Varoquaux*"

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:19
msgid "Chapter contents"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:22
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1055
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1077
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1087
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1093
#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:15
msgid "Introduction"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:26
msgid ""
"`Matplotlib <https://matplotlib.org/>`__ is probably the most used Python "
"package for 2D-graphics. It provides both a quick way to visualize data from"
" Python and publication-quality figures in many formats.  We are going to "
"explore matplotlib in interactive mode covering most common cases."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:33
msgid "IPython, Jupyter, and matplotlib modes"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:37
msgid ""
"The `Jupyter <https://jupyter.org>`_ notebook and the `IPython "
"<https://ipython.org/>`_ enhanced interactive Python, are tuned for the "
"scientific-computing workflow in Python, in combination with Matplotlib:"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:42
msgid "For interactive matplotlib sessions, turn on the **matplotlib mode**"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:0
msgid "IPython console"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:46
msgid "When using the IPython console, use::"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:0
msgid "Jupyter notebook"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:52
msgid ""
"In the notebook, insert, **at the beginning of the notebook** the following "
"`magic "
"<https://ipython.readthedocs.io/en/stable/interactive/magics.html>`_::"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:59
msgid "pyplot"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:63
msgid ""
"*pyplot* provides a procedural interface to the matplotlib object-oriented "
"plotting library. It is modeled closely after Matlab™. Therefore, the "
"majority of plotting commands in pyplot have Matlab™ analogs with similar "
"arguments.  Important commands are explained with interactive examples."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:73
msgid "Simple plot"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:77
msgid ""
"In this section, we want to draw the cosine and sine functions on the same "
"plot. Starting from the default settings, we'll enrich the figure step by "
"step to make it nicer."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:81
msgid "First step is to get the data for the sine and cosine functions:"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:91
msgid ""
"``X`` is now a numpy array with 256 values ranging from :math:`-\\pi` to "
":math:`+\\pi` (included). ``C`` is the cosine (256 values) and ``S`` is the "
"sine (256 values)."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:95
msgid ""
"To run the example, you can type them in an IPython interactive session::"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:99
msgid "This brings us to the IPython prompt: ::"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:109
msgid ""
"You can also download each of the examples and run it using regular python, "
"but you will lose interactive data manipulation::"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:114
msgid ""
"You can get source for each step by clicking on the corresponding figure."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:118
msgid "Plotting with default settings"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:125
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:162
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:224
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:254
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:283
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:316
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:356
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:397
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:431
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:478
msgid "Documentation"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:127
msgid "`plot tutorial <https://matplotlib.org/users/pyplot_tutorial.html>`_"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:128
msgid ":func:`~plot()` command"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:132
msgid ""
"Matplotlib comes with a set of default settings that allow customizing all "
"kinds of properties. You can control the defaults of almost every property "
"in matplotlib: figure size and dpi, line width, color and style, axes, axis "
"and grid properties, text and font properties and so on."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:155
msgid "Instantiating defaults"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:164
msgid ""
"`Customizing matplotlib <https://matplotlib.org/users/customizing.html>`_"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:166
msgid ""
"In the script below, we've instantiated (and commented) all the figure "
"settings that influence the appearance of the plot."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:171
msgid ""
"The settings have been explicitly set to their default values, but now you "
"can interactively play with the values to explore their affect (see `Line "
"properties`_ and `Line styles`_ below)."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:217
msgid "Changing colors and line widths"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:226
msgid ""
"`Controlling line properties "
"<https://matplotlib.org/users/pyplot_tutorial.html#controlling-line-"
"properties>`_"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:227
msgid ":class:`~matplotlib.lines.Line2D` API"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:231
msgid ""
"First step, we want to have the cosine in blue and the sine in red and a "
"slightly thicker line for both of them. We'll also slightly alter the figure"
" size to make it more horizontal."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:247
msgid "Setting limits"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:256
msgid ":func:`xlim()` command"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:257
msgid ":func:`ylim()` command"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:261
msgid ""
"Current limits of the figure are a bit too tight and we want to make some "
"space in order to clearly see all data points."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:276
msgid "Setting ticks"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:285
msgid ":func:`xticks()` command"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:286
msgid ":func:`yticks()` command"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:287
msgid ""
"`Tick container <https://matplotlib.org/users/artists.html#axis-container>`_"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:288
msgid ""
"`Tick locating and formatting <https://matplotlib.org/api/ticker_api.html>`_"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:292
msgid ""
"Current ticks are not ideal because they do not show the interesting values "
"(:math:`\\pm \\pi`,:math:`\\pm \\pi`/2) for sine and cosine. We'll change "
"them such that they show only these values."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:308
msgid "Setting tick labels"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:318
msgid "`Working with text <https://matplotlib.org/users/index_text.html>`_"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:319
msgid ":func:`~xticks()` command"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:320
msgid ":func:`~yticks()` command"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:321
msgid ":meth:`~matplotlib.axes.Axes.set_xticklabels()`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:322
msgid ":meth:`~matplotlib.axes.Axes.set_yticklabels()`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:327
msgid ""
"Ticks are now properly placed but their label is not very explicit. We could"
" guess that 3.142 is :math:`\\pi` but it would be better to make it "
"explicit. When we set tick values, we can also provide a corresponding label"
" in the second argument list. Note that we'll use latex to allow for nice "
"rendering of the label."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:348
msgid "Moving spines"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:358
msgid ":mod:`~matplotlib.spines` API"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:359
msgid ""
"`Axis container <https://matplotlib.org/users/artists.html#axis-container>`_"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:360
msgid ""
"`Transformations tutorial "
"<https://matplotlib.org/users/transforms_tutorial.html>`_"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:364
msgid ""
"Spines are the lines connecting the axis tick marks and noting the "
"boundaries of the data area. They can be placed at arbitrary positions and "
"until now, they were on the border of the axis. We'll change that since we "
"want to have them in the middle. Since there are four of them "
"(top/bottom/left/right), we'll discard the top and right by setting their "
"color to none and we'll move the bottom and left ones to coordinate 0 in "
"data space coordinates."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:389
msgid "Adding a legend"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:399
msgid "`Legend guide <https://matplotlib.org/users/legend_guide.html>`_"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:400
msgid ":func:`legend()` command"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:401
msgid ":mod:`~matplotlib.legend` API"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:405
msgid ""
"Let's add a legend in the upper left corner. This only requires adding the "
"keyword argument label (that will be used in the legend box) to the plot "
"commands."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:423
msgid "Annotate some points"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:433
msgid ""
"`Annotating axis <https://matplotlib.org/users/annotations_guide.html>`_"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:434
msgid ":func:`annotate()` command"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:438
msgid ""
"Let's annotate some interesting points using the annotate command. We chose "
"the :math:`2\\pi / 3` value and we want to annotate both the sine and the "
"cosine. We'll first draw a marker on the curve as well as a straight dotted "
"line. Then, we'll use the annotate command to display some text with an "
"arrow."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:471
msgid "Devil is in the details"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:480
msgid ":mod:`~matplotlib.artist` API"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:481
msgid ":meth:`~matplotlib.text.Text.set_bbox()` method"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:485
msgid ""
"The tick labels are now hardly visible because of the blue and red lines. We"
" can make them bigger and we can also adjust their properties such that "
"they'll be rendered on a semi-transparent white background. This will allow "
"us to see both the data and the labels."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:504
msgid "Figures, Subplots, Axes and Ticks"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:506
msgid ""
"A **\"figure\"** in matplotlib means the whole window in the user interface."
" Within this figure there can be **\"subplots\"**."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:511
msgid ""
"So far we have used implicit figure and axes creation. This is handy for "
"fast plots. We can have more control over the display using figure, subplot,"
" and axes explicitly.  While subplot positions the plots in a regular grid, "
"axes allows free placement within the figure. Both can be useful depending "
"on your intention. We've already worked with figures and subplots without "
"explicitly calling them.  When we call plot, matplotlib calls :func:`gca` to"
" get the current axes and gca in turn calls :func:`gcf` to get the current "
"figure. If there is none it calls :func:`figure` to make one, strictly "
"speaking, to make a ``subplot(111)``. Let's look at the details."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:522
msgid "Figures"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:526
msgid ""
"A figure is the windows in the GUI that has \"Figure #\" as title.  Figures "
"are numbered starting from 1 as opposed to the normal Python way starting "
"from 0. This is clearly MATLAB-style.  There are several parameters that "
"determine what the figure looks like:"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:532
msgid "Argument"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:532
msgid "Default"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:532
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1173
msgid "Description"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:534
msgid "``num``"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:534
msgid "``1``"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:534
msgid "number of figure"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:535
msgid "``figsize``"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:535
msgid "``figure.figsize``"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:535
msgid "figure size in inches (width, height)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:536
msgid "``dpi``"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:536
msgid "``figure.dpi``"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:536
msgid "resolution in dots per inch"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:537
msgid "``facecolor``"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:537
msgid "``figure.facecolor``"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:537
msgid "color of the drawing background"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:538
msgid "``edgecolor``"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:538
msgid "``figure.edgecolor``"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:538
msgid "color of edge around the drawing background"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:539
msgid "``frameon``"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:539
msgid "``True``"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:539
msgid "draw figure frame or not"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:544
msgid ""
"The defaults can be specified in the resource file and will be used most of "
"the time. Only the number of the figure is frequently changed."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:547
msgid ""
"As with other objects, you can set figure properties also setp or with the "
"set_something methods."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:550
msgid ""
"When you work with the GUI you can close a figure by clicking on the x in "
"the upper right corner. But you can close a figure programmatically by "
"calling close. Depending on the argument it closes (1) the current figure "
"(no argument), (2) a specific figure (figure number or figure instance as "
"argument), or (3) all figures (``\"all\"`` as argument)."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:566
msgid ""
"With subplot you can arrange plots in a regular grid. You need to specify "
"the number of rows and columns and the number of the plot.  Note that the "
"`gridspec <https://matplotlib.org/users/gridspec.html>`_ command is a more "
"powerful alternative."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:593
msgid ""
"Axes are very similar to subplots but allow placement of plots at any "
"location in the figure. So if we want to put a smaller plot inside a bigger "
"one we do so with axes."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:606
msgid "Ticks"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:608
msgid ""
"Well formatted ticks are an important part of publishing-ready figures. "
"Matplotlib provides a totally configurable system for ticks. There are tick "
"locators to specify where ticks should appear and tick formatters to give "
"ticks the appearance you want. Major and minor ticks can be located and "
"formatted independently from each other. Per default minor ticks are not "
"shown, i.e. there is only an empty list for them because it is as "
"``NullLocator`` (see below)."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:617
msgid "Tick Locators"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:619
msgid ""
"Tick locators control the positions of the ticks. They are set as follows::"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:625
msgid "There are several locators for different kind of requirements:"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:639
msgid ""
"All of these locators derive from the base class "
":class:`matplotlib.ticker.Locator`. You can make your own locator deriving "
"from it. Handling dates as ticks can be especially tricky. Therefore, "
"matplotlib provides special locators in matplotlib.dates."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:646
msgid "Other Types of Plots: examples and exercises"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:687
msgid "Regular Plots"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:694
msgid ""
"Starting from the code below, try to reproduce the graphic taking care of "
"filled areas:"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:699
msgid "You need to use the :func:`fill_between()` command."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:711
msgid "Click on the figure for solution."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:715
msgid "Scatter Plots"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:722
msgid ""
"Starting from the code below, try to reproduce the graphic taking care of "
"marker size, color and transparency."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:727
msgid "Color is given by angle of (X,Y)."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:739
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:775
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:807
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:891
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:915
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:939
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:973
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1005
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1025
msgid "Click on figure for solution."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:743
msgid "Bar Plots"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:750
msgid ""
"Starting from the code below, try to reproduce the graphic by adding labels "
"for red bars."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:755
msgid "You need to take care of text alignment."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:779
msgid "Contour Plots"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:787
msgid ""
"Starting from the code below, try to reproduce the graphic taking care of "
"the colormap (see `Colormaps`_ below)."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:792
msgid "You need to use the :func:`clabel()` command."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:812
msgid "Imshow"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:820
msgid ""
"Starting from the code below, try to reproduce the graphic taking care of "
"colormap, image interpolation and origin."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:825
msgid ""
"You need to take care of the ``origin`` of the image in the imshow command "
"and use a :func:`colorbar()`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:840
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:865
msgid "Click on the figure for the solution."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:844
msgid "Pie Charts"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:852
msgid ""
"Starting from the code below, try to reproduce the graphic taking care of "
"colors and slices size."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:857
msgid "You need to modify Z."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:870
msgid "Quiver Plots"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:878
msgid ""
"Starting from the code below, try to reproduce the graphic taking care of "
"colors and orientations."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:883
msgid "You need to draw arrows twice."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:895
msgid "Grids"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:903
msgid ""
"Starting from the code below, try to reproduce the graphic taking care of "
"line styles."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:919
msgid "Multi Plots"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:926
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:955
#: ../../scientific-python-lectures/intro/matplotlib/index.rst:984
msgid "Starting from the code below, try to reproduce the graphic."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:930
msgid "You can use several subplots with different partition."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:943
msgid "Polar Axis"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:953
msgid "You only need to modify the ``axes`` line"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:977
msgid "3D Plots"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:988
msgid "You need to use :func:`contourf()`"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1008
msgid "Text"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1017
msgid "Try to do the same from scratch !"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1021
msgid ""
"Have a look at the `matplotlib logo "
"<https://matplotlib.org/examples/api/logo2.html>`_."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1035
msgid ""
"If you want to do a first quick pass through the Scientific Python Lectures "
"to learn the ecosystem, you can directly skip to the next chapter: "
":ref:`scipy`."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1043
msgid "Beyond this tutorial"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1045
msgid ""
"Matplotlib benefits from extensive documentation as well as a large "
"community of users and developers. Here are some links of interest:"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1049
msgid "Tutorials"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1053
msgid "`Pyplot tutorial <https://matplotlib.org/users/pyplot_tutorial.html>`_"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1056
msgid "Controlling line properties"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1057
msgid "Working with multiple figures and axes"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1058
msgid "Working with text"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1060
msgid "`Image tutorial <https://matplotlib.org/users/image_tutorial.html>`_"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1062
msgid "Startup commands"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1063
msgid "Importing image data into NumPy arrays"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1064
msgid "Plotting NumPy arrays as images"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1066
msgid "`Text tutorial <https://matplotlib.org/users/index_text.html>`_"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1068
msgid "Text introduction"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1069
msgid "Basic text commands"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1070
msgid "Text properties and layout"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1071
msgid "Writing mathematical expressions"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1072
msgid "Text rendering With LaTeX"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1073
msgid "Annotating text"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1075
msgid "`Artist tutorial <https://matplotlib.org/users/artists.html>`_"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1078
msgid "Customizing your objects"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1079
msgid "Object containers"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1080
msgid "Figure container"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1081
msgid "Axes container"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1082
msgid "Axis containers"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1083
msgid "Tick containers"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1085
msgid "`Path tutorial <https://matplotlib.org/users/path_tutorial.html>`_"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1088
msgid "Bézier example"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1089
msgid "Compound paths"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1091
msgid ""
"`Transforms tutorial "
"<https://matplotlib.org/users/transforms_tutorial.html>`_"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1094
msgid "Data coordinates"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1095
msgid "Axes coordinates"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1096
msgid "Blended transformations"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1097
msgid "Using offset transforms to create a shadow effect"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1098
msgid "The transformation pipeline"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1103
msgid "Matplotlib documentation"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1107
msgid "`User guide <https://matplotlib.org/users/index.html>`_"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1109
msgid "`FAQ <https://matplotlib.org/faq/index.html>`_"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1111
msgid "Installation"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1112
msgid "Usage"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1113
msgid "How-To"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1114
msgid "Troubleshooting"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1115
msgid "Environment Variables"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1117
msgid "`Screenshots <https://matplotlib.org/users/screenshots.html>`_"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1121
msgid "Code documentation"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1123
msgid ""
"The code is well documented and you can quickly access a specific command "
"from within a python session:"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1143
msgid "Galleries"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1145
msgid ""
"The `matplotlib gallery <https://matplotlib.org/gallery.html>`_ is also "
"incredibly useful when you search how to render a given graphic. Each "
"example comes with its source."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1151
msgid "Mailing lists"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1153
msgid ""
"Finally, there is a `user mailing list "
"<https://mail.python.org/mailman/listinfo/matplotlib-users>`_ where you can "
"ask for help and a `developers mailing list "
"<https://mail.python.org/mailman/listinfo/matplotlib-devel>`_ that is more "
"technical."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1161
msgid "Quick references"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1163
msgid "Here is a set of tables that show main properties and styles."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1166
msgid "Line properties"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1172
msgid "Property"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1174
msgid "Appearance"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1176
msgid "alpha (or a)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1177
msgid "alpha transparency on 0-1 scale"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1180
msgid "antialiased"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1181
msgid "True or False - use antialised rendering"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1185
msgid "color (or c)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1186
msgid "matplotlib color arg"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1189
msgid "linestyle (or ls)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1190
msgid "see `Line properties`_"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1193
msgid "linewidth (or lw)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1194
msgid "float, the line width in points"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1197
msgid "solid_capstyle"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1198
msgid "Cap style for solid lines"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1201
msgid "solid_joinstyle"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1202
msgid "Join style for solid lines"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1205
msgid "dash_capstyle"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1206
msgid "Cap style for dashes"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1209
msgid "dash_joinstyle"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1210
msgid "Join style for dashes"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1213
msgid "marker"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1214
msgid "see `Markers`_"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1217
msgid "markeredgewidth (mew)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1218
msgid "line width around the marker symbol"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1221
msgid "markeredgecolor (mec)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1222
msgid "edge color if a marker is used"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1225
msgid "markerfacecolor (mfc)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1226
msgid "face color if a marker is used"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1229
msgid "markersize (ms)"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1230
msgid "size of the marker in points"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1236
msgid "Line styles"
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1249
msgid ""
"All colormaps can be reversed by appending ``_r``. For instance, ``gray_r`` "
"is the reverse of ``gray``."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1252
msgid ""
"If you want to know more about colormaps, check the `documentation on "
"Colormaps in matplotlib "
"<https://matplotlib.org/tutorials/colors/colormaps.html>`_."
msgstr ""

#: ../../scientific-python-lectures/intro/matplotlib/index.rst:1259
#: ../../scientific-python-lectures/intro/numpy/gallery.rst:2
msgid "Full code examples"
msgstr "全コード例"

#: ../../scientific-python-lectures/intro/numpy/advanced_operations.rst:13
msgid "Advanced operations"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/advanced_operations.rst:17
#: ../../scientific-python-lectures/intro/numpy/array_object.rst:13
#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:13
#: ../../scientific-python-lectures/intro/numpy/operations.rst:16
msgid "Section contents"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/advanced_operations.rst:20
msgid "Polynomials"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/advanced_operations.rst:22
msgid "NumPy also contains polynomials in different bases:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/advanced_operations.rst:24
msgid "For example, :math:`3x^2 + 2x - 1`::"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/advanced_operations.rst:50
msgid ""
"See https://numpy.org/doc/stable/reference/routines.polynomials.poly1d.html "
"for more."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/advanced_operations.rst:54
msgid "More polynomials (with more bases)"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/advanced_operations.rst:56
msgid ""
"NumPy also has a more sophisticated polynomial interface, which supports "
"e.g. the Chebyshev basis."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/advanced_operations.rst:59
msgid ":math:`3x^2 + 2x - 1`::"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/advanced_operations.rst:69
msgid ""
"Example using polynomials in Chebyshev basis, for polynomials in range "
"``[-1, 1]``::"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/advanced_operations.rst:87
msgid "The Chebyshev polynomials have some advantages in interpolation."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/advanced_operations.rst:90
msgid "Loading data files"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/advanced_operations.rst:93
msgid "Text files"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/advanced_operations.rst:95
msgid "Example: :download:`populations.txt <../../data/populations.txt>`:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/advanced_operations.rst:115
msgid "If you have a complicated text file, what you can try are:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/advanced_operations.rst:117
msgid "``np.genfromtxt``"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/advanced_operations.rst:119
msgid ""
"Using Python's I/O functions and e.g. regexps for parsing (Python is quite "
"well suited for this)"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/advanced_operations.rst:132
msgid "Reminder: Navigating the filesystem with IPython"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/advanced_operations.rst:134
msgid "Images"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/advanced_operations.rst:136
msgid "Using Matplotlib::"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/advanced_operations.rst:152
msgid "This saved only one channel (of RGB)::"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/advanced_operations.rst:162
msgid "Other libraries::"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/advanced_operations.rst:176
msgid "NumPy's own format"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/advanced_operations.rst:178
msgid "NumPy has its own binary format, not portable but with efficient I/O::"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/advanced_operations.rst:185
msgid "Well-known (& more obscure) file formats"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/advanced_operations.rst:187
msgid ""
"HDF5: `h5py <https://www.h5py.org/>`__, `PyTables "
"<https://www.pytables.org>`__"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/advanced_operations.rst:188
msgid ""
"NetCDF: ``scipy.io.netcdf_file``, `netcdf4-python "
"<https://code.google.com/archive/p/netcdf4-python>`__, ..."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/advanced_operations.rst:189
msgid "Matlab: ``scipy.io.loadmat``, ``scipy.io.savemat``"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/advanced_operations.rst:190
msgid "MatrixMarket: ``scipy.io.mmread``, ``scipy.io.mmwrite``"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/advanced_operations.rst:191
msgid "IDL: ``scipy.io.readsav``"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/advanced_operations.rst:193
msgid ""
"... if somebody uses it, there's probably also a Python library for it."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/advanced_operations.rst-1
msgid "Exercise: Text data files"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/advanced_operations.rst:199
msgid ""
"Write a Python script that loads data from :download:`populations.txt "
"<../../data/populations.txt>`:: and drop the last column and the first 5 "
"rows. Save the smaller dataset to ``pop2.txt``."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/advanced_operations.rst-1
msgid "NumPy internals"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/advanced_operations.rst:219
msgid ""
"If you are interested in the NumPy internals, there is a good discussion in "
":ref:`advanced_numpy`."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:9
msgid "The NumPy array object"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:16
msgid "What are NumPy and NumPy arrays?"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:19
msgid "NumPy arrays"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:0
msgid "**Python** objects"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:23
msgid "high-level number objects: integers, floating point"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:25
msgid ""
"containers: lists (costless insertion and append), dictionaries (fast "
"lookup)"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:0
msgid "**NumPy** provides"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:30
msgid "extension package to Python for multi-dimensional arrays"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:32
msgid "closer to hardware (efficiency)"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:34
msgid "designed for scientific computation (convenience)"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:36
msgid "Also known as *array oriented computing*"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:49
msgid "For example, An array containing:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:51
msgid "values of an experiment/simulation at discrete time steps"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:53
msgid "signal recorded by a measurement device, e.g. sound wave"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:55
msgid "pixels of an image, grey-level or colour"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:57
msgid "3-D data measured at different X-Y-Z positions, e.g. MRI scan"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:59
msgid "..."
msgstr "..."

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:61
msgid ""
"**Why it is useful:** Memory-efficient container that provides fast "
"numerical operations."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:90
msgid "NumPy Reference documentation"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:92
msgid "On the web: https://numpy.org/doc/"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:94
msgid "Interactive help:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:114
msgid "Looking for something:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:125
msgid "Import conventions"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:127
msgid "The recommended convention to import NumPy is:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:135
msgid "Creating arrays"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:138
msgid "Manual construction of arrays"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:140
msgid "**1-D**:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:154
msgid "**2-D, 3-D, ...**:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:138
msgid "**Exercise: Simple arrays**"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:182
msgid ""
"Create a simple two dimensional array. First, redo the examples from above. "
"And then create your own: how about odd numbers counting backwards on the "
"first row, and even numbers on the second?"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:185
msgid ""
"Use the functions :func:`len`, :func:`numpy.shape` on these arrays. How do "
"they relate to each other? And to the ``ndim`` attribute of the arrays?"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:190
msgid "Functions for creating arrays"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:194
msgid "In practice, we rarely enter items one by one..."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:196
msgid "Evenly spaced:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:207
msgid "or by number of points:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:218
msgid "Common arrays:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:243
msgid ":mod:`np.random`: random numbers (Mersenne Twister PRNG):"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:190
msgid "**Exercise: Creating arrays using functions**"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:259
msgid ""
"Experiment with ``arange``, ``linspace``, ``ones``, ``zeros``, ``eye`` and "
"``diag``."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:261
msgid "Create different kinds of arrays with random numbers."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:262
msgid "Try setting the seed before creating an array with random values."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:263
msgid ""
"Look at the function ``np.empty``. What does it do? When might this be "
"useful?"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:273
msgid "Basic data types"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:275
msgid ""
"You may have noticed that, in some instances, array elements are displayed "
"with a trailing dot (e.g. ``2.`` vs ``2``). This is due to a difference in "
"the data-type used:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:291
msgid ""
"Different data-types allow us to store data more compactly in memory, but "
"most of the time we simply work with floating point numbers. Note that, in "
"the example above, NumPy auto-detects the data-type from the input."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:298
msgid "You can explicitly specify which data-type you want:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:307
msgid "The **default** data type is floating point:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:315
msgid "There are also other types:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:0
msgid "Bool"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:0
msgid "Much more"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:343
msgid "``int32``"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:344
msgid "``int64``"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:345
msgid "``uint32``"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:346
msgid "``uint64``"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:352
msgid "Basic visualization"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:354
msgid ""
"Now that we have our first data arrays, we are going to visualize them."
msgstr "最初のデータ配列ができたので、次はそれを視覚化してみましょう。"

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:356
msgid "Start by launching IPython:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:362
msgid "Or the notebook:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:368
msgid "Once IPython has started, enable interactive plots:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:374
msgid "Or, from the notebook, enable plots in the notebook:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:380
msgid ""
"The ``inline`` is important for the notebook, so that plots are displayed in"
" the notebook and not in a new window."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:383
msgid ""
"*Matplotlib* is a 2D plotting package. We can import its functions as below:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:389
msgid ""
"And then use (note that you have to use ``show`` explicitly if you have not "
"enabled interactive plots with ``%matplotlib``):"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:396
msgid "Or, if you have enabled interactive plots with ``%matplotlib``:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:402
msgid "**1D plotting**:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:418
msgid "**2D arrays** (such as images):"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:434
msgid "More in the: :ref:`matplotlib chapter <matplotlib>`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:352
msgid "**Exercise: Simple visualizations**"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:439
msgid ""
"Plot some simple arrays: a cosine as a function of time and a 2D matrix."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:441
msgid "Try using the ``gray`` colormap on the 2D matrix."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:445
msgid "Indexing and slicing"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:447
msgid ""
"The items of an array can be accessed and assigned to the same way as other "
"Python sequences (e.g. lists):"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:460
msgid ""
"Indices begin at 0, like other Python sequences (and C/C++). In contrast, in"
" Fortran or Matlab, indices begin at 1."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:463
msgid "The usual python idiom for reversing a sequence is supported:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:470
msgid "For multidimensional arrays, indices are tuples of integers:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:492
msgid ""
"In 2D, the first dimension corresponds to **rows**, the second to "
"**columns**."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:494
msgid ""
"for multidimensional ``a``, ``a[0]`` is interpreted by taking all elements "
"in the unspecified dimensions."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:497
msgid "**Slicing**: Arrays, like other Python sequences can also be sliced:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:507
msgid "Note that the last index is not included! :"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:514
msgid ""
"All three slice components are not required: by default, `start` is 0, `end`"
" is the last and `step` is 1:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:526
msgid "A small illustrated summary of NumPy indexing and slicing..."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:539
msgid "You can also combine assignment and slicing:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:445
msgid "**Exercise: Indexing and slicing**"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:555
msgid ""
"Try the different flavours of slicing, using ``start``, ``end`` and "
"``step``: starting from a linspace, try to obtain odd numbers counting "
"backwards, and even numbers counting forwards."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:558
msgid ""
"Reproduce the slices in the diagram above. You may use the following "
"expression to create the array:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst-1
msgid "**Exercise: Array creation**"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:574
msgid "Create the following arrays (with correct data types)::"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:588
msgid "Par on course: 3 statements for each"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:590
msgid ""
"*Hint*: Individual array elements can be accessed similarly to a list, e.g. "
"``a[1]`` or ``a[1, 2]``."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:593
msgid "*Hint*: Examine the docstring for ``diag``."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst-1
msgid "Exercise: Tiling for array creation"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:598
msgid ""
"Skim through the documentation for ``np.tile``, and use this function to "
"construct the array::"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:607
msgid "Copies and views"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:609
msgid ""
"A slicing operation creates a **view** on the original array, which is just "
"a way of accessing array data. Thus the original array is not copied in "
"memory. You can use ``np.may_share_memory()`` to check if two arrays share "
"the same memory block. Note however, that this uses heuristics and may give "
"you false positives."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:615
msgid "**When modifying the view, the original array is modified as well**:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:644
msgid ""
"This behavior can be surprising at first sight... but it allows to save both"
" memory and time."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:607
msgid "Worked example: Prime number sieve"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:664
msgid "Compute prime numbers in 0--99, with a sieve"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:666
msgid ""
"Construct a shape (100,) boolean array ``is_prime``, filled with True in the"
" beginning:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:673
msgid "Cross out 0 and 1 which are not primes:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:679
msgid ""
"For each integer ``j`` starting from 2, cross out its higher multiples:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:687
msgid "Skim through ``help(np.nonzero)``, and print the prime numbers"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:689
msgid "Follow-up:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:691
msgid "Move the above code into a script file named ``prime_sieve.py``"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:693
msgid "Run it to check it works"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:695
msgid ""
"Use the optimization suggested in `the sieve of Eratosthenes "
"<https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes>`_:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:698
msgid "Skip ``j`` which are already known to not be primes"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:700
msgid "The first number to cross out is :math:`j^2`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:703
msgid "Fancy indexing"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:707
msgid ""
"NumPy arrays can be indexed with slices, but also with boolean or integer "
"arrays (**masks**). This method is called *fancy indexing*. It creates "
"**copies not views**."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:712
msgid "Using boolean masks"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:728
msgid ""
"Indexing with a mask can be very useful to assign a new value to a sub-"
"array:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:738
msgid "Indexing with an array of integers"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:746
msgid ""
"Indexing can be done with an array of integers, where the same index is "
"repeated several time:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:754
msgid "New values can be assigned with this kind of indexing:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:764
msgid ""
"When a new array is created by indexing with an array of integers, the new "
"array has the same shape as the array of integers:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:780
msgid "The image below illustrates various fancy indexing applications"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:738
msgid "**Exercise: Fancy indexing**"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:796
msgid "Again, reproduce the fancy indexing shown in the diagram above."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/array_object.rst:797
msgid ""
"Use fancy indexing on the left and array creation on the right to assign "
"values into an array, for instance by setting parts of the array in the "
"diagram above to zero."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/index.rst:3
#: ../../scientific-python-lectures/intro/numpy/auto_examples/index.rst:4
msgid "Full code examples for the numpy chapter"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/index.rst:22
#: ../../scientific-python-lectures/intro/numpy/auto_examples/index.rst:23
msgid ":ref:`sphx_glr_intro_numpy_auto_examples_plot_basic1dplot.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/index.rst:39
#: ../../scientific-python-lectures/intro/numpy/auto_examples/index.rst:40
msgid ":ref:`sphx_glr_intro_numpy_auto_examples_plot_basic2dplot.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/index.rst:56
#: ../../scientific-python-lectures/intro/numpy/auto_examples/index.rst:57
msgid ":ref:`sphx_glr_intro_numpy_auto_examples_plot_distances.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/index.rst:73
#: ../../scientific-python-lectures/intro/numpy/auto_examples/index.rst:74
msgid ":ref:`sphx_glr_intro_numpy_auto_examples_plot_polyfit.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/index.rst:90
#: ../../scientific-python-lectures/intro/numpy/auto_examples/index.rst:91
msgid ":ref:`sphx_glr_intro_numpy_auto_examples_plot_chebyfit.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/index.rst:107
#: ../../scientific-python-lectures/intro/numpy/auto_examples/index.rst:108
msgid ":ref:`sphx_glr_intro_numpy_auto_examples_plot_populations.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/index.rst:124
#: ../../scientific-python-lectures/intro/numpy/auto_examples/index.rst:125
msgid ":ref:`sphx_glr_intro_numpy_auto_examples_plot_elephant.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/index.rst:141
#: ../../scientific-python-lectures/intro/numpy/auto_examples/index.rst:142
msgid ":ref:`sphx_glr_intro_numpy_auto_examples_plot_mandelbrot.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/index.rst:158
#: ../../scientific-python-lectures/intro/numpy/auto_examples/index.rst:159
msgid ":ref:`sphx_glr_intro_numpy_auto_examples_plot_randomwalk.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/index.rst:193
#: ../../scientific-python-lectures/intro/numpy/auto_examples/index.rst:194
msgid ""
":download:`Download all examples in Python source code: "
"auto_examples_python.zip "
"</intro/numpy/auto_examples/auto_examples_python.zip>`"
msgstr ""
":download:`Download all examples in Python source code: "
"auto_examples_python.zip "
"</intro/numpy/auto_examples/auto_examples_python.zip>`"

#: ../../scientific-python-lectures/intro/numpy/auto_examples/index.rst:197
#: ../../scientific-python-lectures/intro/numpy/auto_examples/index.rst:198
msgid ""
":download:`Download all examples in Jupyter notebooks: "
"auto_examples_jupyter.zip "
"</intro/numpy/auto_examples/auto_examples_jupyter.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_basic1dplot.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_numpy_auto_examples_plot_basic1dplot.py>` to "
"download the full example code."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_basic1dplot.rst:22
msgid "1D plotting"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_basic1dplot.rst:24
msgid "Plot a basic 1D figure"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_basic1dplot.rst:49
msgid ""
":download:`Download Jupyter notebook: plot_basic1dplot.ipynb "
"<plot_basic1dplot.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_basic1dplot.rst:53
msgid ""
":download:`Download Python source code: plot_basic1dplot.py "
"<plot_basic1dplot.py>`"
msgstr ""
":download:`Download Python source code: plot_basic1dplot.py "
"<plot_basic1dplot.py>`"

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_basic1dplot.rst:57
msgid ""
":download:`Download zipped: plot_basic1dplot.zip <plot_basic1dplot.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_basic2dplot.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_numpy_auto_examples_plot_basic2dplot.py>` to "
"download the full example code."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_basic2dplot.rst:22
msgid "2D plotting"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_basic2dplot.rst:24
msgid "Plot a basic 2D figure"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_basic2dplot.rst:49
msgid ""
":download:`Download Jupyter notebook: plot_basic2dplot.ipynb "
"<plot_basic2dplot.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_basic2dplot.rst:53
msgid ""
":download:`Download Python source code: plot_basic2dplot.py "
"<plot_basic2dplot.py>`"
msgstr ""
":download:`Download Python source code: plot_basic2dplot.py "
"<plot_basic2dplot.py>`"

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_basic2dplot.rst:57
msgid ""
":download:`Download zipped: plot_basic2dplot.zip <plot_basic2dplot.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_chebyfit.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_numpy_auto_examples_plot_chebyfit.py>` to download "
"the full example code."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_chebyfit.rst:22
msgid "Fitting in Chebyshev basis"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_chebyfit.rst:24
msgid "Plot noisy data and their polynomial fit in a Chebyshev basis"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_chebyfit.rst:53
msgid ""
":download:`Download Jupyter notebook: plot_chebyfit.ipynb "
"<plot_chebyfit.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_chebyfit.rst:57
msgid ""
":download:`Download Python source code: plot_chebyfit.py <plot_chebyfit.py>`"
msgstr ""
":download:`Download Python source code: plot_chebyfit.py <plot_chebyfit.py>`"

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_chebyfit.rst:61
msgid ":download:`Download zipped: plot_chebyfit.zip <plot_chebyfit.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_distances.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_numpy_auto_examples_plot_distances.py>` to download"
" the full example code."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_distances.rst:22
msgid "Distances exercise"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_distances.rst:24
msgid "Plot distances in a grid"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_distances.rst:49
msgid ""
":download:`Download Jupyter notebook: plot_distances.ipynb "
"<plot_distances.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_distances.rst:53
msgid ""
":download:`Download Python source code: plot_distances.py "
"<plot_distances.py>`"
msgstr ""
":download:`Download Python source code: plot_distances.py "
"<plot_distances.py>`"

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_distances.rst:57
msgid ":download:`Download zipped: plot_distances.zip <plot_distances.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_elephant.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_numpy_auto_examples_plot_elephant.py>` to download "
"the full example code."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_elephant.rst:22
msgid "Reading and writing an elephant"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_elephant.rst:24
msgid "Read and write images"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_elephant.rst:38
msgid "original figure"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_elephant.rst:53
msgid "red channel displayed in grey"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_elephant.rst:68
msgid "lower resolution"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_elephant.rst:90
msgid ""
":download:`Download Jupyter notebook: plot_elephant.ipynb "
"<plot_elephant.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_elephant.rst:94
msgid ""
":download:`Download Python source code: plot_elephant.py <plot_elephant.py>`"
msgstr ""
":download:`Download Python source code: plot_elephant.py <plot_elephant.py>`"

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_elephant.rst:98
msgid ":download:`Download zipped: plot_elephant.zip <plot_elephant.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_mandelbrot.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_numpy_auto_examples_plot_mandelbrot.py>` to "
"download the full example code."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_mandelbrot.rst:22
#: ../../scientific-python-lectures/intro/numpy/exercises.rst:190
msgid "Mandelbrot set"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_mandelbrot.rst:24
msgid "Compute the Mandelbrot fractal and plot it"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_mandelbrot.rst:74
msgid ""
":download:`Download Jupyter notebook: plot_mandelbrot.ipynb "
"<plot_mandelbrot.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_mandelbrot.rst:78
msgid ""
":download:`Download Python source code: plot_mandelbrot.py "
"<plot_mandelbrot.py>`"
msgstr ""
":download:`Download Python source code: plot_mandelbrot.py "
"<plot_mandelbrot.py>`"

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_mandelbrot.rst:82
msgid ":download:`Download zipped: plot_mandelbrot.zip <plot_mandelbrot.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_polyfit.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_numpy_auto_examples_plot_polyfit.py>` to download "
"the full example code."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_polyfit.rst:22
msgid "Fitting to polynomial"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_polyfit.rst:24
msgid "Plot noisy data and their polynomial fit"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_polyfit.rst:53
msgid ""
":download:`Download Jupyter notebook: plot_polyfit.ipynb "
"<plot_polyfit.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_polyfit.rst:57
msgid ""
":download:`Download Python source code: plot_polyfit.py <plot_polyfit.py>`"
msgstr ""
":download:`Download Python source code: plot_polyfit.py <plot_polyfit.py>`"

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_polyfit.rst:61
msgid ":download:`Download zipped: plot_polyfit.zip <plot_polyfit.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_populations.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_numpy_auto_examples_plot_populations.py>` to "
"download the full example code."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_populations.rst:22
msgid "Population exercise"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_populations.rst:24
msgid "Plot populations of hares, lynxes, and carrots"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_populations.rst:51
msgid ""
":download:`Download Jupyter notebook: plot_populations.ipynb "
"<plot_populations.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_populations.rst:55
msgid ""
":download:`Download Python source code: plot_populations.py "
"<plot_populations.py>`"
msgstr ""
":download:`Download Python source code: plot_populations.py "
"<plot_populations.py>`"

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_populations.rst:59
msgid ""
":download:`Download zipped: plot_populations.zip <plot_populations.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_randomwalk.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_numpy_auto_examples_plot_randomwalk.py>` to "
"download the full example code."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_randomwalk.rst:22
msgid "Random walk exercise"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_randomwalk.rst:24
msgid ""
"Plot distance as a function of time for a random walk together with the "
"theoretical result"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_randomwalk.rst:72
msgid ""
":download:`Download Jupyter notebook: plot_randomwalk.ipynb "
"<plot_randomwalk.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_randomwalk.rst:76
msgid ""
":download:`Download Python source code: plot_randomwalk.py "
"<plot_randomwalk.py>`"
msgstr ""
":download:`Download Python source code: plot_randomwalk.py "
"<plot_randomwalk.py>`"

#: ../../scientific-python-lectures/intro/numpy/auto_examples/plot_randomwalk.rst:80
msgid ":download:`Download zipped: plot_randomwalk.zip <plot_randomwalk.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/sg_execution_times.rst:9
msgid ""
"**00:00.000** total execution time for 9 files **from "
"intro/numpy/auto_examples**:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/sg_execution_times.rst:35
msgid ""
":ref:`sphx_glr_intro_numpy_auto_examples_plot_basic1dplot.py` "
"(``plot_basic1dplot.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/sg_execution_times.rst:38
msgid ""
":ref:`sphx_glr_intro_numpy_auto_examples_plot_basic2dplot.py` "
"(``plot_basic2dplot.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/sg_execution_times.rst:41
msgid ""
":ref:`sphx_glr_intro_numpy_auto_examples_plot_chebyfit.py` "
"(``plot_chebyfit.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/sg_execution_times.rst:44
msgid ""
":ref:`sphx_glr_intro_numpy_auto_examples_plot_distances.py` "
"(``plot_distances.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/sg_execution_times.rst:47
msgid ""
":ref:`sphx_glr_intro_numpy_auto_examples_plot_elephant.py` "
"(``plot_elephant.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/sg_execution_times.rst:50
msgid ""
":ref:`sphx_glr_intro_numpy_auto_examples_plot_mandelbrot.py` "
"(``plot_mandelbrot.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/sg_execution_times.rst:53
msgid ""
":ref:`sphx_glr_intro_numpy_auto_examples_plot_polyfit.py` "
"(``plot_polyfit.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/sg_execution_times.rst:56
msgid ""
":ref:`sphx_glr_intro_numpy_auto_examples_plot_populations.py` "
"(``plot_populations.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/auto_examples/sg_execution_times.rst:59
msgid ""
":ref:`sphx_glr_intro_numpy_auto_examples_plot_randomwalk.py` "
"(``plot_randomwalk.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:9
msgid "More elaborate arrays"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:16
msgid "More data types"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:19
msgid "Casting"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:21
msgid "\"Bigger\" type wins in mixed-type operations::"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:26
msgid "Assignment never changes the type! ::"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:35
msgid "Forced casts::"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:42
msgid "Rounding::"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:53
msgid "Different data type sizes"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:55
msgid "Integers (signed):"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:58
msgid ":class:`int8`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:58
#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:75
msgid "8 bits"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:59
msgid ":class:`int16`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:59
#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:76
#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:90
msgid "16 bits"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:60
msgid ":class:`int32`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:60
msgid "32 bits (same as :class:`int` on 32-bit platform)"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:61
msgid ":class:`int64`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:61
msgid "64 bits (same as :class:`int` on 64-bit platform)"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:72
msgid "Unsigned integers:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:75
msgid ":class:`uint8`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:76
msgid ":class:`uint16`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:77
msgid ":class:`uint32`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:77
#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:91
msgid "32 bits"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:78
msgid ":class:`uint64`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:78
msgid "64 bits"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:87
msgid "Floating-point numbers:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:90
msgid ":class:`float16`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:91
msgid ":class:`float32`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:92
msgid ":class:`float64`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:92
msgid "64 bits (same as :class:`float`)"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:93
msgid ":class:`float96`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:93
msgid "96 bits, platform-dependent (same as :class:`np.longdouble`)"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:94
msgid ":class:`float128`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:94
msgid "128 bits, platform-dependent (same as :class:`np.longdouble`)"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:109
msgid "Complex floating-point numbers:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:112
msgid ":class:`complex64`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:112
msgid "two 32-bit floats"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:113
msgid ":class:`complex128`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:113
msgid "two 64-bit floats"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:114
msgid ":class:`complex192`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:114
msgid "two 96-bit floats, platform-dependent"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:115
msgid ":class:`complex256`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:115
msgid "two 128-bit floats, platform-dependent"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:142
msgid "Smaller data types"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:120
msgid ""
"If you don't know you need special data types, then you probably don't."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:122
msgid "Comparison on using ``float32`` instead of ``float64``:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:124
msgid "Half the size in memory and on disk"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:125
msgid ""
"Half the memory bandwidth required (may be a bit faster in some operations)"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:139
msgid ""
"But: bigger rounding errors --- sometimes in surprising places (i.e., don't "
"use them unless you really need them)"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:144
msgid "Structured data types"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:147
msgid "``sensor_code``"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:147
msgid "(4-character string)"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:148
msgid "``position``"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:148
#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:149
msgid "(float)"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:149
msgid "``value``"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:169
msgid "Field access works by indexing with field names::"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:182
msgid "Multiple fields at once::"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:189
msgid "Fancy indexing works, as usual::"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:195
msgid ""
"There are a bunch of other syntaxes for constructing structured arrays, see "
"`here <https://numpy.org/doc/stable/user/basics.rec.html>`__ and `here "
"<https://numpy.org/doc/stable/reference/arrays.dtypes.html#specifying-and-"
"constructing-data-types>`__."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:201
msgid ":class:`maskedarray`: dealing with (propagation of) missing data"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:203
msgid "For floats one could use NaN's, but masks work for all types::"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:219
msgid "Masking versions of common functions::"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:230
msgid "There are other useful :ref:`array siblings <array_siblings>`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:235
msgid ""
"While it is off topic in a chapter on NumPy, let's take a moment to recall "
"good coding practice, which really do pay off in the long run:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:240
msgid ""
"Explicit variable names (no need of a comment to explain what is in the "
"variable)"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:243
msgid "Style: spaces after commas, around ``=``, etc."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:245
msgid ""
"A certain number of rules for writing \"beautiful\" code (and, more "
"importantly, using the same conventions as everybody else!) are given in the"
" `Style Guide for Python Code <https://peps.python.org/pep-0008>`_ and the "
"`Docstring Conventions <https://peps.python.org/pep-0257>`_ page (to manage "
"help strings)."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/elaborate_arrays.rst:252
msgid "Except some rare cases, variable names and comments in English."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:7
msgid "Some exercises"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:10
msgid "Array manipulations"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:12
msgid "Form the 2-D array (without typing it in explicitly)::"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:20
msgid "and generate a new array containing its 2nd and 4th rows."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:22
msgid "Divide each column of the array:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:29
msgid ""
"elementwise with the array ``b = np.array([1., 5, 10, 15, 20])``. (Hint: "
"``np.newaxis``)."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:32
msgid ""
"Harder one: Generate a 10 x 3 array of random numbers (in range [0,1]). For "
"each row, pick the number closest to 0.5."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:35
msgid ""
"Use ``abs`` and ``argmin`` to find the column ``j`` closest for each row."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:38
msgid ""
"Use fancy indexing to extract the numbers.  (Hint: ``a[i,j]`` -- the array "
"``i`` must contain the row numbers corresponding to stuff in ``j``.)"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:44
msgid "Picture manipulation: Framing a Face"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:46
msgid ""
"Let's do some manipulations on NumPy arrays by starting with an image of a "
"raccoon.  ``scipy`` provides a 2D array of this image with the "
"``scipy.datasets.face`` function::"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:54
msgid ""
"Here are a few images we will be able to obtain with our manipulations: use "
"different colormaps, crop the image, change some parts of the image."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:60
msgid "Let's use the imshow function of matplotlib to display the image."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:69
msgid "The face is displayed in false colors. A colormap must be"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:70
msgid "specified for it to be displayed in grey."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:77
msgid "Create an array of the image with a narrower centering"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst-1
msgid "for example,"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:78
msgid ""
"remove 100 pixels from all the borders of the image. To check the result, "
"display this new array with ``imshow``."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:85
msgid "We will now frame the face with a black locket. For this, we"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:86
msgid ""
"need to create a mask corresponding to the pixels we want to be black. The "
"center of the face is around (660, 330), so we defined the mask by this "
"condition ``(y-300)**2 + (x-660)**2``"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:99
msgid ""
"then we assign the value 0 to the pixels of the image corresponding to the "
"mask. The syntax is extremely simple and intuitive:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:108
msgid "Follow-up: copy all instructions of this exercise in a script called"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:109
msgid ""
"``face_locket.py`` then execute this script in IPython with ``%run "
"face_locket.py``."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:112
msgid "Change the circle to an ellipsoid."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:115
msgid "Data statistics"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:117
msgid ""
"The data in :download:`populations.txt <../../data/populations.txt>` "
"describes the populations of hares and lynxes (and carrots) in northern "
"Canada during 20 years:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:139
msgid "Computes and print, based on the data in ``populations.txt``..."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:141
msgid ""
"The mean and std of the populations of each species for the years in the "
"period."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:144
msgid "Which year each species had the largest population."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:146
msgid ""
"Which species has the largest population for each year. (Hint: ``argsort`` &"
" fancy indexing of ``np.array(['H', 'L', 'C'])``)"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:150
msgid ""
"Which years any of the populations is above 50000. (Hint: comparisons and "
"``np.any``)"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:153
msgid ""
"The top 2 years for each species when they had the lowest populations. "
"(Hint: ``argsort``, fancy indexing)"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:156
msgid ""
"Compare (plot) the change in hare population (see ``help(np.gradient)``) and"
" the number of lynxes. Check correlation (see ``help(np.corrcoef)``)."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:160
msgid "... all without for-loops."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:162
msgid ""
"Solution: :download:`Python source file <solutions/2_2_data_statistics.py>`"
msgstr "解答: :download:`Python source file <solutions/2_2_data_statistics.py>`"

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:165
msgid "Crude integral approximations"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:167
msgid ""
"Write a function ``f(a, b, c)`` that returns :math:`a^b - c`.  Form a "
"24x12x6 array containing its values in parameter ranges ``[0,1] x [0,1] x "
"[0,1]``."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:171
msgid "Approximate the 3-d integral"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:173
msgid ""
"\\int_0^1\\int_0^1\\int_0^1(a^b-c)da\\,db\\,dc\n"
"\n"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:175
msgid ""
"over this volume with the mean.  The exact result is: :math:`\\ln 2 - "
"\\frac{1}{2}\\approx0.1931\\ldots` --- what is your relative error?"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:178
msgid ""
"(Hints: use elementwise operations and broadcasting. You can make "
"``np.ogrid`` give a number of points in given range with "
"``np.ogrid[0:1:20j]``.)"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:182
msgid "**Reminder** Python functions::"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:187
msgid ""
"Solution: :download:`Python source file "
"<solutions/2_3_crude_integration.py>`"
msgstr ""
"解答: :download:`Python source file <solutions/2_3_crude_integration.py>`"

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:197
msgid ""
"Write a script that computes the Mandelbrot fractal. The Mandelbrot "
"iteration::"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:209
msgid ""
"Point (x, y) belongs to the Mandelbrot set if :math:`|z|` < "
"``some_threshold``."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:212
msgid "Do this computation by:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:217
msgid "Construct a grid of c = x + 1j*y values in range [-2, 1] x [-1.5, 1.5]"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:219
msgid "Do the iteration"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:221
msgid "Form the 2-d boolean mask indicating which points are in the set"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:223
msgid "Save the result to an image with:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:233
msgid "Solution: :download:`Python source file <solutions/2_4_mandelbrot.py>`"
msgstr "解答: :download:`Python source file <solutions/2_4_mandelbrot.py>`"

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:236
msgid "Markov chain"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:240
msgid ""
"Markov chain transition matrix ``P``, and probability distribution on the "
"states ``p``:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:243
msgid ""
"``0 <= P[i,j] <= 1``: probability to go from state ``i`` to state ``j``"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:245
msgid "Transition rule: :math:`p_{new} = P^T p_{old}`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:247
msgid "``all(sum(P, axis=1) == 1)``, ``p.sum() == 1``: normalization"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:249
msgid "Write a script that works with 5 states, and:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:251
msgid ""
"Constructs a random matrix, and normalizes each row so that it is a "
"transition matrix."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:254
msgid ""
"Starts from a random (normalized) probability distribution ``p`` and takes "
"50 steps => ``p_50``"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:257
msgid ""
"Computes the stationary distribution: the eigenvector of ``P.T`` with "
"eigenvalue 1 (numerically: closest to 1) => ``p_stationary``"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:260
msgid "Remember to normalize the eigenvector --- I didn't..."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:262
msgid "Checks if ``p_50`` and ``p_stationary`` are equal to tolerance 1e-5"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:264
msgid ""
"Toolbox: ``np.random``, ``@``, ``np.linalg.eig``, reductions, ``abs()``, "
"``argmin``, comparisons, ``all``, ``np.linalg.norm``, etc."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/exercises.rst:268
msgid ""
"Solution: :download:`Python source file <solutions/2_5_markov_chain.py>`"
msgstr "解答: :download:`Python source file <solutions/2_5_markov_chain.py>`"

#: ../../scientific-python-lectures/intro/numpy/index.rst:5
msgid "NumPy: creating and manipulating numerical data"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/index.rst:7
msgid ""
"**Authors**: *Emmanuelle Gouillart, Didrik Pinte, Gaël Varoquaux, and Pauli "
"Virtanen*"
msgstr ""
"**著者**: *Emmanuelle Gouillart, Didrik Pinte, Gaël Varoquaux, と Pauli "
"Virtanen*"

#: ../../scientific-python-lectures/intro/numpy/index.rst:14
msgid ""
"This chapter gives an overview of NumPy, the core tool for performant "
"numerical computing with Python."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:11
msgid "Numerical operations on arrays"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:19
msgid "Elementwise operations"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:22
msgid "Basic operations"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:24
msgid "With scalars:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:34
msgid "All arithmetic operates elementwise:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:48
msgid ""
"These operations are of course much faster than if you did them in pure "
"python:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:60
msgid "**Array multiplication is not matrix multiplication:**"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:70
msgid "**Matrix multiplication:**"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst-1
msgid "**Exercise: Elementwise operations**"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:82
msgid ""
"Try simple arithmetic elementwise operations: add even elements with odd "
"elements"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:84
msgid "Time them against their pure python counterparts using ``%timeit``."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:85
msgid "Generate:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:87
msgid "``[2**0, 2**1, 2**2, 2**3, 2**4]``"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:88
msgid "``a_j = 2^(3*j) - j``"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:92
msgid "Other operations"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:94
msgid "**Comparisons:**"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:107
msgid "Array-wise comparisons:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:120
#: ../../scientific-python-lectures/intro/numpy/operations.rst:268
msgid "**Logical operations:**"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:131
msgid "**Transcendental functions:**"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:144
msgid "**Shape mismatches**"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:154
msgid "*Broadcasting?* We'll return to that :ref:`later <broadcasting>`."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:156
msgid "**Transposition:**"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:171
msgid "**The transposition is a view**"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:173
msgid "The transpose returns a *view* of the original array::"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:186
msgid "**Linear algebra**"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:188
msgid ""
"The sub-module :mod:`numpy.linalg` implements basic linear algebra, such as "
"solving linear systems, singular value decomposition, etc. However, it is "
"not guaranteed to be compiled using efficient routines, and thus we "
"recommend the use of :mod:`scipy.linalg`, as detailed in section "
":ref:`scipy_linalg`"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst-1
msgid "Exercise other operations"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:197
msgid "Look at the help for ``np.allclose``. When might this be useful?"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:198
msgid "Look at the help for ``np.triu`` and ``np.tril``."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:202
msgid "Basic reductions"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:205
msgid "Computing sums"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:218
msgid "Sum by rows and by columns:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:237
msgid "Same idea in higher dimensions:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:249
msgid "Other reductions"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:251
msgid "--- works the same way (and take ``axis=``)"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:253
msgid "**Extrema:**"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:279
msgid "Can be used for array comparisons:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:295
msgid "**Statistics:**"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:312
msgid "... and many more (best to learn as you go)."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst-1
msgid "**Exercise: Reductions**"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:317
msgid "Given there is a ``sum``, what other function might you expect to see?"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:318
msgid "What is the difference between ``sum`` and ``cumsum``?"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst-1
msgid "Worked Example: diffusion using a random walk algorithm"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:328
msgid ""
"Let us consider a simple 1D random walk process: at each time step a walker "
"jumps right or left with equal probability."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:331
msgid ""
"We are interested in finding the typical distance from the origin of a "
"random walker after ``t`` left or right jumps? We are going to simulate many"
" \"walkers\" to find this law, and we are going to do so using array "
"computing tricks: we are going to create a 2D array with the \"stories\" "
"(each walker has a story) in one direction, and the time in the other:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:354
msgid "We randomly choose all the steps 1 or -1 of the walk:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:364
msgid "We build the walks by summing steps along the time:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:371
msgid "We get the mean in the axis of the stories:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:377
msgid "Plot the results:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:396
msgid ""
"We find a well-known result in physics: the RMS distance grows as the square"
" root of the time!"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:417
msgid "Broadcasting"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:419
msgid "Basic operations on ``numpy`` arrays (addition, etc.) are elementwise"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:421
msgid "This works on arrays of the same size."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:0
msgid ""
"**Nevertheless**, It's also possible to do operations on arrays of different"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:0
msgid "sizes if *NumPy* can transform these arrays so that they all have"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:0
msgid "the same size: this conversion is called **broadcasting**."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:427
msgid "The image below gives an example of broadcasting:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:440
msgid "Let's verify:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:457
msgid "We have already used broadcasting without knowing it!:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:469
msgid "A useful trick:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:493
msgid ""
"Broadcasting seems a bit magical, but it is actually quite natural to use it"
" when we want to solve a problem whose output data is an array with more "
"dimensions than input data."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:417
msgid "Worked Example: Broadcasting"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:500
msgid ""
"Let's construct an array of distances (in miles) between cities of Route 66:"
" Chicago, Springfield, Saint-Louis, Tulsa, Oklahoma City, Amarillo, Santa "
"Fe, Albuquerque, Flagstaff and Los Angeles."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:526
msgid ""
"A lot of grid-based or network-based problems can also use broadcasting. For"
" instance, if we want to compute the distance from the origin of points on a"
" 5x5 grid, we can do"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:541
msgid "Or in color:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:556
msgid ""
"**Remark** : the :func:`numpy.ogrid` function allows to directly create "
"vectors x and y of the previous example, with two \"significant "
"dimensions\":"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:574
msgid ""
"So, ``np.ogrid`` is very useful as soon as we have to handle computations on"
" a grid. On the other hand, ``np.mgrid`` directly provides matrices full of "
"indices for cases where we can't (or don't want to) benefit from "
"broadcasting:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:606
msgid ""
":ref:`broadcasting_advanced`: discussion of broadcasting in the "
":ref:`advanced_numpy` chapter."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:611
msgid "Array shape manipulation"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:614
msgid "Flattening"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:628
msgid "Higher dimensions: last dimensions ravel out \"first\"."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:631
msgid "Reshaping"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:633
msgid "The inverse operation to flattening:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:645
msgid "Or,"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:655
msgid ""
"``ndarray.reshape`` **may** return a view (cf ``help(np.reshape)``)), or "
"copy"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:667
msgid "Beware: reshape may also return a copy!:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:679
msgid ""
"To understand this you need to learn more about the memory layout of a NumPy"
" array."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:682
msgid "Adding a dimension"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:684
msgid ""
"Indexing with the ``np.newaxis`` object allows us to add an axis to an array"
" (you have seen this already above in the broadcasting section):"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:704
msgid "Dimension shuffling"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:719
msgid "Also creates a view:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:728
msgid "Resizing"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:730
msgid "Size of an array can be changed with ``ndarray.resize``:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:739
msgid "However, it must not be referred to somewhere else:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:728
msgid "**Exercise: Shape manipulations**"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:771
msgid ""
"Look at the docstring for ``reshape``, especially the notes section which "
"has some more information about copies and views."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:773
msgid ""
"Use ``flatten`` as an alternative to ``ravel``. What is the difference? "
"(Hint: check which one returns a view and which a copy)"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:775
msgid "Experiment with ``transpose`` for dimension shuffling."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:778
msgid "Sorting data"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:780
msgid "Sorting along an axis:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:790
msgid "Sorts each row separately!"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:792
msgid "In-place sort:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:801
msgid "Sorting with fancy indexing:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:812
msgid "Finding minima and maxima:"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst-1
msgid "**Exercise: Sorting**"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:836
msgid "Try both in-place and out-of-place sorting."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:837
msgid "Try creating arrays with different dtypes and sorting them."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:838
msgid "Use ``all`` or ``array_equal`` to check the results."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:839
msgid ""
"Look at ``np.random.shuffle`` for a way to create sortable input quicker."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:840
msgid "Combine ``ravel``, ``sort`` and ``reshape``."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:841
msgid ""
"Look at the ``axis`` keyword for ``sort`` and rewrite the previous exercise."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:845
msgid "Summary"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:847
msgid "**What do you need to know to get started?**"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:849
msgid ""
"Know how to create arrays : ``array``, ``arange``, ``ones``, ``zeros``."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:852
msgid ""
"Know the shape of the array with ``array.shape``, then use slicing to obtain"
" different views of the array: ``array[::2]``, etc. Adjust the shape of the "
"array using ``reshape`` or flatten it with ``ravel``."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:857
msgid ""
"Obtain a subset of the elements of an array and/or modify their values with "
"masks"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:864
msgid ""
"Know miscellaneous operations on arrays, such as finding the mean or max "
"(``array.max()``, ``array.mean()``). No need to retain everything, but have "
"the reflex to search in the documentation (online docs, ``help()``)!!"
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:869
msgid ""
"For advanced use: master the indexing with arrays of integers, as well as "
"broadcasting. Know more NumPy functions to handle various array operations."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:875
msgid ""
"If you want to do a first quick pass through the Scientific Python Lectures "
"to learn the ecosystem, you can directly skip to the next chapter: "
":ref:`matplotlib`."
msgstr ""

#: ../../scientific-python-lectures/intro/numpy/operations.rst:879
msgid ""
"The remainder of this chapter is not necessary to follow the rest of the "
"intro part. But be sure to come back and finish this chapter, as well as to "
"do some more :ref:`exercises <numpy_exercises>`."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:3
#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:4
msgid "Full code examples for the SciPy chapter"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:22
#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:23
msgid ":ref:`sphx_glr_intro_scipy_auto_examples_plot_optimize_example1.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:39
#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:40
msgid ":ref:`sphx_glr_intro_scipy_auto_examples_plot_resample.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:56
#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:57
msgid ":ref:`sphx_glr_intro_scipy_auto_examples_plot_detrend.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:73
#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:74
msgid ":ref:`sphx_glr_intro_scipy_auto_examples_plot_solve_ivp_simple.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:90
#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:91
msgid ":ref:`sphx_glr_intro_scipy_auto_examples_plot_normal_distribution.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:107
#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:108
msgid ""
":ref:`sphx_glr_intro_scipy_auto_examples_plot_solve_ivp_damped_spring_mass.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:124
#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:125
msgid ":ref:`sphx_glr_intro_scipy_auto_examples_plot_t_test.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:141
#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:142
msgid ":ref:`sphx_glr_intro_scipy_auto_examples_plot_curve_fit.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:158
#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:159
msgid ":ref:`sphx_glr_intro_scipy_auto_examples_plot_spectrogram.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:175
#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:176
msgid ":ref:`sphx_glr_intro_scipy_auto_examples_plot_mathematical_morpho.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:192
#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:193
msgid ":ref:`sphx_glr_intro_scipy_auto_examples_plot_image_transform.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:209
#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:210
msgid ":ref:`sphx_glr_intro_scipy_auto_examples_plot_connect_measurements.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:226
#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:227
msgid ":ref:`sphx_glr_intro_scipy_auto_examples_plot_optimize_example2.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:243
#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:244
msgid ":ref:`sphx_glr_intro_scipy_auto_examples_plot_image_filters.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:260
#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:261
msgid ":ref:`sphx_glr_intro_scipy_auto_examples_plot_2d_minimization.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:277
#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:278
msgid ":ref:`sphx_glr_intro_scipy_auto_examples_plot_fftpack.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:294
#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:295
msgid ":ref:`sphx_glr_intro_scipy_auto_examples_plot_interpolation.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:331
#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:332
#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/index.rst:6
msgid "Solutions of the exercises for SciPy"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:350
#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:351
#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/index.rst:25
msgid ""
":ref:`sphx_glr_intro_scipy_auto_examples_solutions_plot_periodicity_finder.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:367
#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:368
#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/index.rst:42
msgid ""
":ref:`sphx_glr_intro_scipy_auto_examples_solutions_plot_curvefit_temperature_data.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:384
#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:385
#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/index.rst:59
msgid ":ref:`sphx_glr_intro_scipy_auto_examples_solutions_plot_image_blur.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:401
#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:402
#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/index.rst:76
msgid ""
":ref:`sphx_glr_intro_scipy_auto_examples_solutions_plot_fft_image_denoise.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:430
#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:431
msgid ""
":download:`Download all examples in Python source code: "
"auto_examples_python.zip "
"</intro/scipy/auto_examples/auto_examples_python.zip>`"
msgstr ""
":download:`Download all examples in Python source code: "
"auto_examples_python.zip "
"</intro/scipy/auto_examples/auto_examples_python.zip>`"

#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:434
#: ../../scientific-python-lectures/intro/scipy/auto_examples/index.rst:435
msgid ""
":download:`Download all examples in Jupyter notebooks: "
"auto_examples_jupyter.zip "
"</intro/scipy/auto_examples/auto_examples_jupyter.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_2d_minimization.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_scipy_auto_examples_plot_2d_minimization.py>` to "
"download the full example code."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_2d_minimization.rst:23
msgid "Optimization of a two-parameter function"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_2d_minimization.rst:53
msgid "A 2D image plot of the function"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_2d_minimization.rst:54
msgid "Simple visualization in 2D"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_2d_minimization.rst:70
msgid "A 3D surface plot of the function"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_2d_minimization.rst:100
#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_optimize_example2.rst:50
msgid "Find minima"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_2d_minimization.rst:133
msgid ""
":download:`Download Jupyter notebook: plot_2d_minimization.ipynb "
"<plot_2d_minimization.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_2d_minimization.rst:137
msgid ""
":download:`Download Python source code: plot_2d_minimization.py "
"<plot_2d_minimization.py>`"
msgstr ""
":download:`Download Python source code: plot_2d_minimization.py "
"<plot_2d_minimization.py>`"

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_2d_minimization.rst:141
msgid ""
":download:`Download zipped: plot_2d_minimization.zip "
"<plot_2d_minimization.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_connect_measurements.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_scipy_auto_examples_plot_connect_measurements.py>` "
"to download the full example code."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_connect_measurements.rst:23
msgid "Demo connected components"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_connect_measurements.rst:25
msgid "Extracting and labeling connected components in a 2D array"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_connect_measurements.rst:38
msgid "Generate some binary data"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_connect_measurements.rst:68
msgid "Label connected components"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_connect_measurements.rst:89
msgid "Extract the 4th connected component, and crop the array around it"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_connect_measurements.rst:114
msgid ""
":download:`Download Jupyter notebook: plot_connect_measurements.ipynb "
"<plot_connect_measurements.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_connect_measurements.rst:118
msgid ""
":download:`Download Python source code: plot_connect_measurements.py "
"<plot_connect_measurements.py>`"
msgstr ""
":download:`Download Python source code: plot_connect_measurements.py "
"<plot_connect_measurements.py>`"

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_connect_measurements.rst:122
msgid ""
":download:`Download zipped: plot_connect_measurements.zip "
"<plot_connect_measurements.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_curve_fit.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_scipy_auto_examples_plot_curve_fit.py>` to download"
" the full example code."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_curve_fit.rst:23
#: ../../scientific-python-lectures/intro/scipy/index.rst:457
msgid "Curve fitting"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_curve_fit.rst:25
msgid "Demos a simple curve fitting"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_curve_fit.rst:29
msgid "First generate some data"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_curve_fit.rst:54
msgid "Now fit a simple sine function to the data"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_curve_fit.rst:76
msgid "And plot the resulting curve on the data"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_curve_fit.rst:100
msgid ""
":download:`Download Jupyter notebook: plot_curve_fit.ipynb "
"<plot_curve_fit.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_curve_fit.rst:104
msgid ""
":download:`Download Python source code: plot_curve_fit.py "
"<plot_curve_fit.py>`"
msgstr ""
":download:`Download Python source code: plot_curve_fit.py "
"<plot_curve_fit.py>`"

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_curve_fit.rst:108
msgid ":download:`Download zipped: plot_curve_fit.zip <plot_curve_fit.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_detrend.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_scipy_auto_examples_plot_detrend.py>` to download "
"the full example code."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_detrend.rst:23
msgid "Detrending a signal"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_detrend.rst:25
msgid ":func:`scipy.signal.detrend` removes a linear trend."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_detrend.rst:29
msgid "Generate a random signal with a trend"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_detrend.rst:44
msgid "Detrend"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_detrend.rst:57
#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_resample.rst:55
msgid "Plot"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_detrend.rst:80
msgid ""
":download:`Download Jupyter notebook: plot_detrend.ipynb "
"<plot_detrend.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_detrend.rst:84
msgid ""
":download:`Download Python source code: plot_detrend.py <plot_detrend.py>`"
msgstr ""
":download:`Download Python source code: plot_detrend.py <plot_detrend.py>`"

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_detrend.rst:88
msgid ":download:`Download zipped: plot_detrend.zip <plot_detrend.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_fftpack.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_scipy_auto_examples_plot_fftpack.py>` to download "
"the full example code."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_fftpack.rst:23
msgid "Plotting and manipulating FFTs for filtering"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_fftpack.rst:25
msgid ""
"Plot the power of the FFT of a signal and inverse FFT back to reconstruct a "
"signal."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_fftpack.rst:28
msgid ""
"This example demonstrate :func:`scipy.fft.fft`, :func:`scipy.fft.fftfreq` "
"and :func:`scipy.fft.ifft`. It implements a basic filter that is very "
"suboptimal, and should not be used."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_fftpack.rst:46
msgid "Generate the signal"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_fftpack.rst:69
msgid "Compute and plot the power"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_fftpack.rst:113
msgid "Remove all the high frequencies"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_fftpack.rst:115
msgid ""
"We now remove all the high frequencies and transform back from frequencies "
"to signal."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_fftpack.rst:138
msgid ""
"**Note** This is actually a bad way of creating a filter: such brutal cut-"
"off in frequency space does not control distortion on the signal."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_fftpack.rst:141
msgid "Filters should be created using the SciPy filter design code"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_fftpack.rst:158
msgid ""
":download:`Download Jupyter notebook: plot_fftpack.ipynb "
"<plot_fftpack.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_fftpack.rst:162
msgid ""
":download:`Download Python source code: plot_fftpack.py <plot_fftpack.py>`"
msgstr ""
":download:`Download Python source code: plot_fftpack.py <plot_fftpack.py>`"

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_fftpack.rst:166
msgid ":download:`Download zipped: plot_fftpack.zip <plot_fftpack.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_image_filters.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_scipy_auto_examples_plot_image_filters.py>` to "
"download the full example code."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_image_filters.rst:23
msgid "Plot filtering on images"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_image_filters.rst:25
msgid "Demo filtering for denoising of images."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_image_filters.rst:84
msgid ""
":download:`Download Jupyter notebook: plot_image_filters.ipynb "
"<plot_image_filters.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_image_filters.rst:88
msgid ""
":download:`Download Python source code: plot_image_filters.py "
"<plot_image_filters.py>`"
msgstr ""
":download:`Download Python source code: plot_image_filters.py "
"<plot_image_filters.py>`"

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_image_filters.rst:92
msgid ""
":download:`Download zipped: plot_image_filters.zip <plot_image_filters.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_image_transform.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_scipy_auto_examples_plot_image_transform.py>` to "
"download the full example code."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_image_transform.rst:23
msgid "Plot geometrical transformations on images"
msgstr "画像に幾何学変換をプロットする"

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_image_transform.rst:25
msgid "Demo geometrical transformations of images."
msgstr "画像の幾何学的変換をデモ。"

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_image_transform.rst:81
msgid ""
":download:`Download Jupyter notebook: plot_image_transform.ipynb "
"<plot_image_transform.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_image_transform.rst:85
msgid ""
":download:`Download Python source code: plot_image_transform.py "
"<plot_image_transform.py>`"
msgstr ""
":download:`Download Python source code: plot_image_transform.py "
"<plot_image_transform.py>`"

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_image_transform.rst:89
msgid ""
":download:`Download zipped: plot_image_transform.zip "
"<plot_image_transform.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_interpolation.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_scipy_auto_examples_plot_interpolation.py>` to "
"download the full example code."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_interpolation.rst:23
msgid "A demo of 1D interpolation"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_interpolation.rst:87
msgid ""
":download:`Download Jupyter notebook: plot_interpolation.ipynb "
"<plot_interpolation.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_interpolation.rst:91
msgid ""
":download:`Download Python source code: plot_interpolation.py "
"<plot_interpolation.py>`"
msgstr ""
":download:`Download Python source code: plot_interpolation.py "
"<plot_interpolation.py>`"

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_interpolation.rst:95
msgid ""
":download:`Download zipped: plot_interpolation.zip <plot_interpolation.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_mathematical_morpho.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_scipy_auto_examples_plot_mathematical_morpho.py>` "
"to download the full example code."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_mathematical_morpho.rst:23
msgid "Demo mathematical morphology"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_mathematical_morpho.rst:25
msgid "A basic demo of binary opening and closing."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_mathematical_morpho.rst:84
msgid ""
":download:`Download Jupyter notebook: plot_mathematical_morpho.ipynb "
"<plot_mathematical_morpho.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_mathematical_morpho.rst:88
msgid ""
":download:`Download Python source code: plot_mathematical_morpho.py "
"<plot_mathematical_morpho.py>`"
msgstr ""
":download:`Download Python source code: plot_mathematical_morpho.py "
"<plot_mathematical_morpho.py>`"

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_mathematical_morpho.rst:92
msgid ""
":download:`Download zipped: plot_mathematical_morpho.zip "
"<plot_mathematical_morpho.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_normal_distribution.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_scipy_auto_examples_plot_normal_distribution.py>` "
"to download the full example code."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_normal_distribution.rst:23
msgid "Normal distribution: histogram and PDF"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_normal_distribution.rst:25
msgid ""
"Explore the normal distribution: a histogram built from samples and the PDF "
"(probability density function)."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_normal_distribution.rst:60
msgid ""
":download:`Download Jupyter notebook: plot_normal_distribution.ipynb "
"<plot_normal_distribution.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_normal_distribution.rst:64
msgid ""
":download:`Download Python source code: plot_normal_distribution.py "
"<plot_normal_distribution.py>`"
msgstr ""
":download:`Download Python source code: plot_normal_distribution.py "
"<plot_normal_distribution.py>`"

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_normal_distribution.rst:68
msgid ""
":download:`Download zipped: plot_normal_distribution.zip "
"<plot_normal_distribution.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_optimize_example1.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_scipy_auto_examples_plot_optimize_example1.py>` to "
"download the full example code."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_optimize_example1.rst:23
msgid "Finding the minimum of a smooth function"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_optimize_example1.rst:25
msgid "Demos various methods to find the minimum of a function."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_optimize_example1.rst:46
msgid "Now find the minimum with a few methods"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_optimize_example1.rst:74
msgid ""
":download:`Download Jupyter notebook: plot_optimize_example1.ipynb "
"<plot_optimize_example1.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_optimize_example1.rst:78
msgid ""
":download:`Download Python source code: plot_optimize_example1.py "
"<plot_optimize_example1.py>`"
msgstr ""
":download:`Download Python source code: plot_optimize_example1.py "
"<plot_optimize_example1.py>`"

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_optimize_example1.rst:82
msgid ""
":download:`Download zipped: plot_optimize_example1.zip "
"<plot_optimize_example1.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_optimize_example2.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_scipy_auto_examples_plot_optimize_example2.py>` to "
"download the full example code."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_optimize_example2.rst:23
msgid "Minima and roots of a function"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_optimize_example2.rst:25
msgid "Demos finding minima and roots of a function."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_optimize_example2.rst:30
msgid "Define the function"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_optimize_example2.rst:72
msgid "Root finding"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_optimize_example2.rst:88
msgid "Plot function, minima, and roots"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_optimize_example2.rst:127
msgid ""
":download:`Download Jupyter notebook: plot_optimize_example2.ipynb "
"<plot_optimize_example2.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_optimize_example2.rst:131
msgid ""
":download:`Download Python source code: plot_optimize_example2.py "
"<plot_optimize_example2.py>`"
msgstr ""
":download:`Download Python source code: plot_optimize_example2.py "
"<plot_optimize_example2.py>`"

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_optimize_example2.rst:135
msgid ""
":download:`Download zipped: plot_optimize_example2.zip "
"<plot_optimize_example2.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_resample.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_scipy_auto_examples_plot_resample.py>` to download "
"the full example code."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_resample.rst:22
msgid "Resample a signal with scipy.signal.resample"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_resample.rst:24
msgid ":func:`scipy.signal.resample` uses FFT to resample a 1D signal."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_resample.rst:28
msgid "Generate a signal with 100 data point"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_resample.rst:42
msgid "Downsample it by a factor of 4"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_resample.rst:79
msgid ""
":download:`Download Jupyter notebook: plot_resample.ipynb "
"<plot_resample.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_resample.rst:83
msgid ""
":download:`Download Python source code: plot_resample.py <plot_resample.py>`"
msgstr ""
":download:`Download Python source code: plot_resample.py <plot_resample.py>`"

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_resample.rst:87
msgid ":download:`Download zipped: plot_resample.zip <plot_resample.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_solve_ivp_damped_spring_mass.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_scipy_auto_examples_plot_solve_ivp_damped_spring_mass.py>`"
" to download the full example code."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_solve_ivp_damped_spring_mass.rst:23
msgid "Integrate the Damped spring-mass oscillator"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_solve_ivp_damped_spring_mass.rst:68
msgid ""
":download:`Download Jupyter notebook: "
"plot_solve_ivp_damped_spring_mass.ipynb "
"<plot_solve_ivp_damped_spring_mass.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_solve_ivp_damped_spring_mass.rst:72
msgid ""
":download:`Download Python source code: plot_solve_ivp_damped_spring_mass.py"
" <plot_solve_ivp_damped_spring_mass.py>`"
msgstr ""
":download:`Download Python source code: plot_solve_ivp_damped_spring_mass.py"
" <plot_solve_ivp_damped_spring_mass.py>`"

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_solve_ivp_damped_spring_mass.rst:76
msgid ""
":download:`Download zipped: plot_solve_ivp_damped_spring_mass.zip "
"<plot_solve_ivp_damped_spring_mass.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_solve_ivp_simple.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_scipy_auto_examples_plot_solve_ivp_simple.py>` to "
"download the full example code."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_solve_ivp_simple.rst:23
msgid "Integrating a simple ODE"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_solve_ivp_simple.rst:25
msgid ""
"Solve the ODE dy/dt = -2y between t = 0..4, with the initial condition "
"y(t=0) = 1."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_solve_ivp_simple.rst:66
msgid ""
":download:`Download Jupyter notebook: plot_solve_ivp_simple.ipynb "
"<plot_solve_ivp_simple.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_solve_ivp_simple.rst:70
msgid ""
":download:`Download Python source code: plot_solve_ivp_simple.py "
"<plot_solve_ivp_simple.py>`"
msgstr ""
":download:`Download Python source code: plot_solve_ivp_simple.py "
"<plot_solve_ivp_simple.py>`"

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_solve_ivp_simple.rst:74
msgid ""
":download:`Download zipped: plot_solve_ivp_simple.zip "
"<plot_solve_ivp_simple.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_spectrogram.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_scipy_auto_examples_plot_spectrogram.py>` to "
"download the full example code."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_spectrogram.rst:23
msgid "Spectrogram, power spectral density"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_spectrogram.rst:25
msgid "Demo spectrogram and power spectral density on a frequency chirp."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_spectrogram.rst:39
msgid "Generate a chirp signal"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_spectrogram.rst:62
msgid "Compute and plot the spectrogram"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_spectrogram.rst:64
msgid "The spectrum of the signal on consecutive time windows"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_spectrogram.rst:87
msgid "Compute and plot the power spectral density (PSD)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_spectrogram.rst:89
msgid "The power of the signal per frequency band"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_spectrogram.rst:122
msgid ""
":download:`Download Jupyter notebook: plot_spectrogram.ipynb "
"<plot_spectrogram.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_spectrogram.rst:126
msgid ""
":download:`Download Python source code: plot_spectrogram.py "
"<plot_spectrogram.py>`"
msgstr ""
":download:`Download Python source code: plot_spectrogram.py "
"<plot_spectrogram.py>`"

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_spectrogram.rst:130
msgid ""
":download:`Download zipped: plot_spectrogram.zip <plot_spectrogram.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_t_test.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_scipy_auto_examples_plot_t_test.py>` to download "
"the full example code."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_t_test.rst:23
msgid "Comparing 2 sets of samples from Gaussians"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_t_test.rst:58
msgid ""
":download:`Download Jupyter notebook: plot_t_test.ipynb <plot_t_test.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_t_test.rst:62
msgid ""
":download:`Download Python source code: plot_t_test.py <plot_t_test.py>`"
msgstr ""
":download:`Download Python source code: plot_t_test.py <plot_t_test.py>`"

#: ../../scientific-python-lectures/intro/scipy/auto_examples/plot_t_test.rst:66
msgid ":download:`Download zipped: plot_t_test.zip <plot_t_test.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:9
msgid ""
"**00:00.000** total execution time for 17 files **from "
"intro/scipy/auto_examples**:"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:35
msgid ""
":ref:`sphx_glr_intro_scipy_auto_examples_plot_2d_minimization.py` "
"(``plot_2d_minimization.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:38
msgid ""
":ref:`sphx_glr_intro_scipy_auto_examples_plot_connect_measurements.py` "
"(``plot_connect_measurements.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:41
msgid ""
":ref:`sphx_glr_intro_scipy_auto_examples_plot_curve_fit.py` "
"(``plot_curve_fit.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:44
msgid ""
":ref:`sphx_glr_intro_scipy_auto_examples_plot_detrend.py` "
"(``plot_detrend.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:47
msgid ""
":ref:`sphx_glr_intro_scipy_auto_examples_plot_fftpack.py` "
"(``plot_fftpack.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:50
msgid ""
":ref:`sphx_glr_intro_scipy_auto_examples_plot_image_filters.py` "
"(``plot_image_filters.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:53
msgid ""
":ref:`sphx_glr_intro_scipy_auto_examples_plot_image_transform.py` "
"(``plot_image_transform.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:56
msgid ""
":ref:`sphx_glr_intro_scipy_auto_examples_plot_interpolation.py` "
"(``plot_interpolation.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:59
msgid ""
":ref:`sphx_glr_intro_scipy_auto_examples_plot_mathematical_morpho.py` "
"(``plot_mathematical_morpho.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:62
msgid ""
":ref:`sphx_glr_intro_scipy_auto_examples_plot_normal_distribution.py` "
"(``plot_normal_distribution.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:65
msgid ""
":ref:`sphx_glr_intro_scipy_auto_examples_plot_optimize_example1.py` "
"(``plot_optimize_example1.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:68
msgid ""
":ref:`sphx_glr_intro_scipy_auto_examples_plot_optimize_example2.py` "
"(``plot_optimize_example2.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:71
msgid ""
":ref:`sphx_glr_intro_scipy_auto_examples_plot_resample.py` "
"(``plot_resample.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:74
msgid ""
":ref:`sphx_glr_intro_scipy_auto_examples_plot_solve_ivp_damped_spring_mass.py`"
" (``plot_solve_ivp_damped_spring_mass.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:77
msgid ""
":ref:`sphx_glr_intro_scipy_auto_examples_plot_solve_ivp_simple.py` "
"(``plot_solve_ivp_simple.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:80
msgid ""
":ref:`sphx_glr_intro_scipy_auto_examples_plot_spectrogram.py` "
"(``plot_spectrogram.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/sg_execution_times.rst:83
msgid ""
":ref:`sphx_glr_intro_scipy_auto_examples_plot_t_test.py` "
"(``plot_t_test.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_curvefit_temperature_data.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_scipy_auto_examples_solutions_plot_curvefit_temperature_data.py>`"
" to download the full example code."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_curvefit_temperature_data.rst:23
msgid "Curve fitting: temperature as a function of month of the year"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_curvefit_temperature_data.rst:25
msgid ""
"We have the min and max temperatures in Alaska for each months of the year. "
"We would like to find a function to describe this yearly evolution."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_curvefit_temperature_data.rst:28
msgid "For this, we will fit a periodic function."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_curvefit_temperature_data.rst:33
msgid "The data"
msgstr "データ"

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_curvefit_temperature_data.rst:56
msgid "Fitting it to a periodic function"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_curvefit_temperature_data.rst:77
msgid "Plotting the fit"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_curvefit_temperature_data.rst:105
msgid ""
":download:`Download Jupyter notebook: plot_curvefit_temperature_data.ipynb "
"<plot_curvefit_temperature_data.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_curvefit_temperature_data.rst:109
msgid ""
":download:`Download Python source code: plot_curvefit_temperature_data.py "
"<plot_curvefit_temperature_data.py>`"
msgstr ""
":download:`Download Python source code: plot_curvefit_temperature_data.py "
"<plot_curvefit_temperature_data.py>`"

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_curvefit_temperature_data.rst:113
msgid ""
":download:`Download zipped: plot_curvefit_temperature_data.zip "
"<plot_curvefit_temperature_data.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_fft_image_denoise.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_scipy_auto_examples_solutions_plot_fft_image_denoise.py>`"
" to download the full example code."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_fft_image_denoise.rst:23
msgid "Image denoising by FFT"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_fft_image_denoise.rst:25
msgid ""
"Denoise an image (:download:`../../../../data/moonlanding.png`) by "
"implementing a blur with an FFT."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_fft_image_denoise.rst:28
msgid "Implements, via FFT, the following convolution:"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_fft_image_denoise.rst:30
msgid "f_1(t) = \\int dt'\\, K(t-t') f_0(t')"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_fft_image_denoise.rst:34
msgid "\\tilde{f}_1(\\omega) = \\tilde{K}(\\omega) \\tilde{f}_0(\\omega)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_fft_image_denoise.rst:41
msgid "Read and plot the image"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_fft_image_denoise.rst:61
msgid "Compute the 2d FFT of the input image"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_fft_image_denoise.rst:90
msgid "Filter in FFT"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_fft_image_denoise.rst:126
msgid "Reconstruct the final image"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_fft_image_denoise.rst:146
msgid "Easier and better: :func:`scipy.ndimage.gaussian_filter`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_fft_image_denoise.rst:148
msgid ""
"Implementing filtering directly with FFTs is tricky and time consuming. We "
"can use the Gaussian filter from :mod:`scipy.ndimage`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_fft_image_denoise.rst:173
msgid ""
":download:`Download Jupyter notebook: plot_fft_image_denoise.ipynb "
"<plot_fft_image_denoise.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_fft_image_denoise.rst:177
msgid ""
":download:`Download Python source code: plot_fft_image_denoise.py "
"<plot_fft_image_denoise.py>`"
msgstr ""
":download:`Download Python source code: plot_fft_image_denoise.py "
"<plot_fft_image_denoise.py>`"

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_fft_image_denoise.rst:181
msgid ""
":download:`Download zipped: plot_fft_image_denoise.zip "
"<plot_fft_image_denoise.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_image_blur.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_scipy_auto_examples_solutions_plot_image_blur.py>` "
"to download the full example code."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_image_blur.rst:23
msgid "Simple image blur by convolution with a Gaussian kernel"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_image_blur.rst:25
msgid ""
"Blur an an image (:download:`../../../../data/elephant.png`) using a "
"Gaussian kernel."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_image_blur.rst:28
msgid ""
"Convolution is easy to perform with FFT: convolving two signals boils down "
"to multiplying their FFTs (and performing an inverse FFT)."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_image_blur.rst:44
msgid "The original image"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_image_blur.rst:60
msgid "Prepare an Gaussian convolution kernel"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_image_blur.rst:79
msgid "Implement convolution via FFT"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_image_blur.rst:106
msgid "Further exercise (only if you are familiar with this stuff):"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_image_blur.rst:108
msgid ""
"A \"wrapped border\" appears in the upper left and top edges of the image. "
"This is because the padding is not done correctly, and does not take the "
"kernel size into account (so the convolution \"flows out of bounds of the "
"image\").  Try to remove this artifact."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_image_blur.rst:116
msgid "A function to do it: :func:`scipy.signal.fftconvolve`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_image_blur.rst:118
msgid ""
"The above exercise was only for didactic reasons: there exists a function in"
" scipy that will do this for us, and probably do a better job: "
":func:`scipy.signal.fftconvolve`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_image_blur.rst:136
msgid ""
"Note that we still have a decay to zero at the border of the image. Using "
":func:`scipy.ndimage.gaussian_filter` would get rid of this artifact"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_image_blur.rst:157
msgid ""
":download:`Download Jupyter notebook: plot_image_blur.ipynb "
"<plot_image_blur.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_image_blur.rst:161
msgid ""
":download:`Download Python source code: plot_image_blur.py "
"<plot_image_blur.py>`"
msgstr ""
":download:`Download Python source code: plot_image_blur.py "
"<plot_image_blur.py>`"

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_image_blur.rst:165
msgid ":download:`Download zipped: plot_image_blur.zip <plot_image_blur.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_periodicity_finder.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_intro_scipy_auto_examples_solutions_plot_periodicity_finder.py>`"
" to download the full example code."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_periodicity_finder.rst:23
msgid "Crude periodicity finding"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_periodicity_finder.rst:25
msgid ""
"Discover the periods in evolution of animal populations "
"(:download:`../../../../data/populations.txt`)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_periodicity_finder.rst:31
msgid "Load the data"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_periodicity_finder.rst:48
msgid "Plot the data"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_periodicity_finder.rst:67
msgid "Plot its periods"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_periodicity_finder.rst:90
msgid ""
"There's probably a period of around 10 years (obvious from the plot), but "
"for this crude a method, there's not enough data to say much more."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_periodicity_finder.rst:103
msgid ""
":download:`Download Jupyter notebook: plot_periodicity_finder.ipynb "
"<plot_periodicity_finder.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_periodicity_finder.rst:107
msgid ""
":download:`Download Python source code: plot_periodicity_finder.py "
"<plot_periodicity_finder.py>`"
msgstr ""
":download:`Download Python source code: plot_periodicity_finder.py "
"<plot_periodicity_finder.py>`"

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/plot_periodicity_finder.rst:111
msgid ""
":download:`Download zipped: plot_periodicity_finder.zip "
"<plot_periodicity_finder.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/sg_execution_times.rst:9
msgid ""
"**00:00.000** total execution time for 4 files **from "
"intro/scipy/auto_examples/solutions**:"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/sg_execution_times.rst:35
msgid ""
":ref:`sphx_glr_intro_scipy_auto_examples_solutions_plot_curvefit_temperature_data.py`"
" (``plot_curvefit_temperature_data.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/sg_execution_times.rst:38
msgid ""
":ref:`sphx_glr_intro_scipy_auto_examples_solutions_plot_fft_image_denoise.py`"
" (``plot_fft_image_denoise.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/sg_execution_times.rst:41
msgid ""
":ref:`sphx_glr_intro_scipy_auto_examples_solutions_plot_image_blur.py` "
"(``plot_image_blur.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/auto_examples/solutions/sg_execution_times.rst:44
msgid ""
":ref:`sphx_glr_intro_scipy_auto_examples_solutions_plot_periodicity_finder.py`"
" (``plot_periodicity_finder.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:5
#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:6
msgid ""
":mod:`scipy.ndimage` provides manipulation of n-dimensional arrays as "
"images."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:9
#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:10
msgid "Geometrical transformations on images"
msgstr "画像の幾何学変換"

#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:11
#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:12
msgid "Changing orientation, resolution, .. ::"
msgstr "方向、解像度、...を変更します ::"

#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:48
#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:49
msgid "Image filtering"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:50
#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:51
msgid "Generate a noisy face::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:60
#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:61
msgid "Apply a variety of filters on it::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:72
#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:73
msgid ""
"Other filters in :mod:`scipy.ndimage.filters` and :mod:`scipy.signal` can be"
" applied to images."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:78
#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:79
msgid "Compare histograms for the different filtered images."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:81
#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:82
msgid "Mathematical morphology"
msgstr "数学的形態学"

#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:85
#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:86
msgid ""
"`Mathematical morphology "
"<https://en.wikipedia.org/wiki/Mathematical_morphology>`_ stems from set "
"theory. It characterizes and transforms geometrical structures. Binary "
"(black and white) images, in particular, can be transformed using this "
"theory: the sets to be transformed are the sets of neighboring non-zero-"
"valued pixels. The theory was also extended to gray-valued images."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:96
#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:97
msgid ""
"Mathematical-morphology operations use a *structuring element* in order to "
"modify geometrical structures."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:99
#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:100
msgid "Let us first generate a structuring element::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:111
#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:112
msgid "**Erosion** :func:`scipy.ndimage.binary_erosion` ::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:141
#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:142
msgid "**Dilation** :func:`scipy.ndimage.binary_dilation`  ::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:158
#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:159
msgid "**Opening** :func:`scipy.ndimage.binary_opening` ::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:184
#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:185
msgid "**Closing:** :func:`scipy.ndimage.binary_closing`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:189
#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:190
msgid "Check that opening amounts to eroding, then dilating."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:191
#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:192
msgid ""
"An opening operation removes small structures, while a closing operation "
"fills small holes. Such operations can therefore be used to \"clean\" an "
"image. ::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:212
#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:213
msgid ""
"Check that the area of the reconstructed square is smaller than the area of "
"the initial square. (The opposite would occur if the closing step was "
"performed *before* the opening)."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:216
#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:217
msgid ""
"For *gray-valued* images, eroding (resp. dilating) amounts to replacing a "
"pixel by the minimal (resp. maximal) value among pixels covered by the "
"structuring element centered on the pixel of interest. ::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:242
#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:243
msgid "Connected components and measurements on images"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:244
#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:245
msgid "Let us first generate a nice synthetic binary image. ::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:260
#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:261
msgid ""
":func:`scipy.ndimage.label` assigns a different label to each connected "
"component::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:272
#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:273
msgid "Now compute measurements on each connected component::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:288
#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:289
msgid "Extract the 4th connected component, and crop the array around it::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:299
#: ../../scientific-python-lectures/intro/scipy/image_processing/image_processing.rst:300
msgid ""
"See the summary exercise on :ref:`summary_exercise_image_processing` for a "
"more advanced example."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:8
msgid "SciPy : high-level scientific computing"
msgstr "SciPy : 高水準科学計算"

#: ../../scientific-python-lectures/intro/scipy/index.rst:10
msgid ""
"**Authors**: *Gaël Varoquaux, Adrien Chauve, Andre Espaze, Emmanuelle "
"Gouillart, Ralf Gommers*"
msgstr ""
"**著者**: *Gaël Varoquaux, Adrien Chauve, Andre Espaze, Emmanuelle Gouillart, "
"Ralf Gommers*"

#: ../../scientific-python-lectures/intro/scipy/index.rst-1
msgid "Scipy"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:15
msgid ""
"The :mod:`scipy` package contains various toolboxes dedicated to common "
"issues in scientific computing. Its different submodules correspond to "
"different applications, such as interpolation, integration, optimization, "
"image processing, statistics, special functions, etc."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:22
msgid ""
":mod:`scipy` can be compared to other standard scientific-computing "
"libraries, such as the GSL (GNU Scientific  Library for C and C++), or "
"Matlab's toolboxes. ``scipy`` is the core package for scientific routines in"
" Python; it is meant to operate efficiently on ``numpy`` arrays, so that "
"NumPy and SciPy work hand in hand."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:28
msgid ""
"Before implementing a routine, it is worth checking if the desired data "
"processing is not already implemented in SciPy. As non-professional "
"programmers, scientists often tend to **re-invent the wheel**, which leads "
"to buggy, non-optimal, difficult-to-share and unmaintainable code. By "
"contrast, ``SciPy``'s routines are optimized and tested, and should "
"therefore be used when possible."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:39
msgid "Chapters contents"
msgstr "各章の内容"

#: ../../scientific-python-lectures/intro/scipy/index.rst:43
msgid ""
"This tutorial is far from an introduction to numerical computing. As "
"enumerating the different submodules and functions in SciPy would be very "
"boring, we concentrate instead on a few examples to give a general idea of "
"how to use ``scipy`` for scientific computing."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:48
msgid ":mod:`scipy` is composed of task-specific sub-modules:"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:51
msgid ":mod:`scipy.cluster`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:51
msgid "Vector quantization / Kmeans"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:52
msgid ":mod:`scipy.constants`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:52
msgid "Physical and mathematical constants"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:53
msgid ":mod:`scipy.fft`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:53
msgid "Fourier transform"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:54
msgid ":mod:`scipy.integrate`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:54
msgid "Integration routines"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:55
msgid ":mod:`scipy.interpolate`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:55
msgid "Interpolation"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:56
msgid ":mod:`scipy.io`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:56
msgid "Data input and output"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:57
msgid ":mod:`scipy.linalg`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:57
msgid "Linear algebra routines"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:58
msgid ":mod:`scipy.ndimage`"
msgstr ":mod:`scipy.ndimage`"

#: ../../scientific-python-lectures/intro/scipy/index.rst:58
msgid "n-dimensional image package"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:59
msgid ":mod:`scipy.odr`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:59
msgid "Orthogonal distance regression"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:60
msgid ":mod:`scipy.optimize`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:60
#: ../../scientific-python-lectures/intro/scipy/index.rst:519
msgid "Optimization"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:61
msgid ":mod:`scipy.signal`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:61
msgid "Signal processing"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:62
msgid ":mod:`scipy.sparse`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:62
msgid "Sparse matrices"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:63
msgid ":mod:`scipy.spatial`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:63
msgid "Spatial data structures and algorithms"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:64
msgid ":mod:`scipy.special`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:64
msgid "Any special mathematical functions"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:65
msgid ":mod:`scipy.stats`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:65
msgid "Statistics"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:70
msgid ""
"They all depend on :mod:`numpy`, but are mostly independent of each other. "
"The standard way of importing NumPy and these SciPy modules is::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:79
msgid "File input/output: :mod:`scipy.io`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:80
msgid ""
":mod:`scipy.io` contains functions for loading and saving data in several "
"common formats including Matlab, IDL, Matrix Market, and Harwell-Boeing."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:84
msgid "**Matlab files**: Loading and saving::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:95
msgid ""
"**Python / Matlab mismatch**: The Matlab file format does not support 1D "
"arrays."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:111
msgid ""
"Notice that the original array was a one-dimensional array, whereas the "
"saved and reloaded array is a two-dimensional array with a single row."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:114
msgid "For other formats, see the :mod:`scipy.io` documentation."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:118
msgid "Load text files: :func:`numpy.loadtxt`/:func:`numpy.savetxt`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:120
msgid "Clever loading of text/csv files: :func:`numpy.genfromtxt`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:123
msgid ""
"Fast and efficient, but NumPy-specific, binary format: "
":func:`numpy.save`/:func:`numpy.load`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:126
msgid ""
"Basic input/output of images in Matplotlib: "
":func:`matplotlib.pyplot.imread`/:func:`matplotlib.pyplot.imsave`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:129
msgid "More advanced input/output of images: :mod:`imageio`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:132
msgid "Special functions: :mod:`scipy.special`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:134
msgid ""
"\"Special\" functions are functions commonly used in science and mathematics"
" that are not considered to be \"elementary\" functions. Examples include"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:137
msgid "the gamma function, :func:`scipy.special.gamma`,"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:138
msgid "the error function, :func:`scipy.special.erf`,"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:139
msgid ""
"Bessel functions, such as :func:`scipy.special.jv` (Bessel function of the "
"first kind), and"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:141
msgid ""
"elliptic functions, such as :func:`scipy.special.ellipj` (Jacobi elliptic "
"functions)."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:144
msgid ""
"Other special functions are combinations of familiar elementary functions, "
"but they offer better accuracy or robustness than their naive "
"implementations would."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:148
msgid ""
"Most of these function are computed elementwise and follow standard NumPy "
"broadcasting rules when the input arrays have different shapes. For example,"
" :func:`scipy.special.xlog1py` is mathematically equivalent to "
":math:`x\\log(1 + y)`."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:163
msgid ""
"However, :func:`scipy.special.xlog1py` is numerically favorable for small "
":math:`y`, when explicit addition of ``1`` would lead to loss of precision "
"due to floating point truncation error."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:174
msgid ""
"Many special functions also have \"logarithmized\" variants. For instance, "
"the gamma function :math:`\\Gamma(\\cdot)` is related to the factorial "
"function by :math:`n! = \\Gamma(n + 1)`, but it extends the domain from the "
"positive integers to the complex plane."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:185
msgid ""
"The factorial function grows quickly, and so the gamma function overflows "
"for moderate values of the argument. However, sometimes only the logarithm "
"of the gamma function is needed. In such cases, we can compute the logarithm"
" of the gamma function directly using :func:`scipy.special.gammaln`."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:196
msgid ""
"Such functions can often be used when the intermediate components of a "
"calculation would overflow or underflow, but the final result would not. For"
" example, suppose we wish to compute the ratio "
":math:`\\Gamma(500)/\\Gamma(499)`."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:206
msgid ""
"Both the numerator and denominator overflow, so performing :math:`a / b` "
"will not return the result we seek. However, the magnitude of the result "
"should be moderate, so the use of logarithms comes to mind. Combining the "
"identities :math:`\\log(a/b) = \\log(a) - \\log(b)` and "
":math:`\\exp(\\log(x)) = x`, we get:"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:219
msgid ""
"Similarly, suppose we wish to compute the difference "
":math:`\\log(\\Gamma(500) - \\Gamma(499))`. For this, we use "
":func:`scipy.special.logsumexp`, which computes :math:`\\log(\\exp(x) + "
"\\exp(y))` using a numerical trick that avoids overflow."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:229
msgid ""
"For more information about these and many other special functions, see the "
"documentation of :mod:`scipy.special`."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:235
msgid "Linear algebra operations: :mod:`scipy.linalg`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:237
msgid ""
":mod:`scipy.linalg` provides a Python interface to efficient, compiled "
"implementations of standard linear algebra operations: the BLAS (Basic "
"Linear Algebra Subroutines) and LAPACK (Linear Algebra PACKage) libraries."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:241
msgid ""
"For example, the :func:`scipy.linalg.det` function computes the determinant "
"of a square matrix::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:250
msgid ""
"Mathematically, the solution of a linear system :math:`Ax = b` is :math:`x ="
" A^{-1}b`, but explicit inversion of a matrix is numerically unstable and "
"should be avoided. Instead, use :func:`scipy.linalg.solve`::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:263
msgid ""
"Linear systems with special structure can often be solved more efficiently "
"than more general systems. For example, systems with triangular matrices can"
" be solved using :func:`scipy.linalg.solve_triangular`::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:275
msgid ""
":mod:`scipy.linalg` also features matrix factorizations/decompositions such "
"as the singular value decomposition."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:284
msgid ""
"The original matrix can be recovered by matrix multiplication of the "
"factors::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:295
msgid ""
"Many other decompositions (e.g. LU, Cholesky, QR), solvers for structured "
"linear systems (e.g. triangular, circulant), eigenvalue problem algorithms, "
"matrix functions (e.g. matrix exponential), and routines for special matrix "
"creation (e.g. block diagonal, toeplitz) are available in "
":mod:`scipy.linalg`."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:304
msgid "Interpolation: :mod:`scipy.interpolate`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:306
msgid ""
":mod:`scipy.interpolate` is used for fitting a function -- an "
"\"interpolant\" -- to experimental or computed data. Once fit, the "
"interpolant can be used to approximate the underlying function at "
"intermediate points; it can also be used to compute the integral, "
"derivative, or inverse of the function."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:311
msgid ""
"Some kinds of interpolants, known as \"smoothing splines\", are designed to "
"generate smooth curves from noisy data. For example, suppose we have the "
"following data::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:322
msgid ""
":func:`scipy.interpolate.make_smoothing_spline` can be used to form a curve "
"similar to the underlying sine function."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:334
msgid ""
"On the other hand, if the data are not noisy, it may be desirable to pass "
"exactly through each point."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:345
msgid ""
"The ``derivative`` and ``antiderivative`` methods of the result object can "
"be used for differentiation and integration. For the latter, the constant of"
" integration is assumed to be zero, but we can \"wrap\" the antiderivative "
"to include a nonzero constant of integration."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:360
msgid ""
"For functions that are monotonic on an interval (e.g. :math:`\\sin` from "
":math:`\\pi/2` to :math:`3\\pi/2`), we can reverse the arguments of "
"``make_interp_spline`` to interpolate the inverse function. Because the "
"first argument is expected to be monotonically *increasing*, we also reverse"
" the order of elements in the arrays with :func:`numpy.flip`."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:372
msgid ""
"See the summary exercise on :ref:`summary_exercise_stat_interp` for a more "
"advanced spline interpolation example, and read the `SciPy interpolation "
"tutorial <https://scipy.github.io/devdocs/tutorial/interpolate.html>`__ and "
"the :mod:`scipy.interpolate` documentation for much more information."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:378
msgid "Optimization and fit: :mod:`scipy.optimize`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:380
msgid ""
":mod:`scipy.optimize` provides algorithms for root finding, curve fitting, "
"and more general optimization."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:384
msgid "Root Finding"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:386
msgid ""
":func:`scipy.optimize.root_scalar` attempts to find a root of a specified "
"scalar-valued function (i.e., an argument at which the function value is "
"zero). Like many :mod:`scipy.optimize` functions, the function needs an "
"initial guess of the solution, which the algorithm will refine until it "
"converges or recognizes failure. We also provide the derivative to improve "
"the rate of convergence."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:409
msgid ""
"None of the functions in :mod:`scipy.optimize` that accept a guess are "
"guaranteed to converge for all possible guesses! (For example, try "
"``x0=1.5`` in the example above, where the derivative of the function is "
"exactly zero.) If this occurs, try a different guess, adjust the options "
"(like providing a ``bracket`` as shown below), or consider whether SciPy "
"offers a more appropriate method for the problem."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:416
msgid ""
"Note that only one the root at ``1.0`` is found. By inspection, we can tell "
"that there is a second root at ``2.0``. We can direct the function toward a "
"particular root by changing the guess or by passing a bracket that contains "
"only the root we seek."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:425
msgid "For multivariate problems, use :func:`scipy.optimize.root`."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:437
msgid ""
"Over-constrained problems can be solved in the least-squares sense using "
":func:`scipy.optimize.root` with ``method='lm'`` (Levenberg-Marquardt)."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:452
msgid ""
"See the documentation of :func:`scipy.optimize.root_scalar` and "
":func:`scipy.optimize.root` for a variety of other solution algorithms and "
"options."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:464
msgid "Suppose we have data that is sinusoidal but noisy::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:471
msgid ""
"We can approximate the underlying amplitude, frequency, and phase from the "
"data by least squares curve fitting. To begin, we write a function that "
"accepts the independent variable as the first argument and all parameters to"
" fit as separate arguments::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:484
msgid ""
"We then use :func:`scipy.optimize.curve_fit` to find :math:`a` and "
":math:`b`::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst-1
msgid "Exercise: Curve fitting of temperature data"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:500
msgid ""
"The temperature extremes in Alaska for each month, starting in January, are "
"given by (in degrees Celsius)::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:506
msgid "Plot these temperature extremes."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:507
msgid ""
"Define a function that can describe min and max temperatures. Hint: this "
"function has to have a period of 1 year. Hint: include a time offset."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:510
msgid "Fit this function to the data with :func:`scipy.optimize.curve_fit`."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:511
msgid "Plot the result.  Is the fit reasonable?  If not, why?"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:512
msgid ""
"Is the time offset for min and max temperatures the same within the fit "
"accuracy?"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:515
msgid ""
":ref:`solution "
"<sphx_glr_intro_scipy_auto_examples_solutions_plot_curvefit_temperature_data.py>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:526
msgid ""
"Suppose we wish to minimize the scalar-valued function of a single variable "
":math:`f(x) = x^2  + 10 \\sin(x)`::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:536
msgid ""
"We can see that the function has a local minimizer near :math:`x = 3.8` and "
"a global minimizer near :math:`x = -1.3`, but the precise values cannot be "
"determined from the plot."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:540
msgid ""
"The most appropriate function for this purpose is "
":func:`scipy.optimize.minimize_scalar`. Since we know the approximate "
"locations of the minima, we will provide bounds that restrict the search to "
"the vicinity of the global minimum."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:557
msgid ""
"If we did not already know the approximate location of the global minimum, "
"we could use one of SciPy's global minimizers, such as "
":func:`scipy.optimize.differential_evolution`. We are required to pass "
"``bounds``, but they do not need to be tight."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:573
msgid ""
"For multivariate optimization, a good choice for many problems is "
":func:`scipy.optimize.minimize`. Suppose we wish to find the minimum of a "
"quadratic function of two variables, :math:`f(x_0, x_1) = (x_0-1)^2 + "
"(x_1-2)^2`."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:581
msgid ""
"Like :func:`scipy.optimize.root`, :func:`scipy.optimize.minimize` requires a"
" guess ``x0``. (Note that this is the initial value of *both* variables "
"rather than the value of the variable we happened to label :math:`x_0`.)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst-1
msgid "**Maximization?**"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:602
msgid ""
"Is :func:`scipy.optimize.minimize` restricted to the solution of "
"minimization problems? Nope! To solve a maximization problem, simply "
"minimize the *negative* of the original objective function."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:606
msgid ""
"This barely scratches the surface of SciPy's optimization features, which "
"include mixed integer linear programming, constrained nonlinear programming,"
" and the solution of assignment problems. For much more information, see the"
" documentation of :mod:`scipy.optimize` and the advanced chapter "
":ref:`mathematical_optimization`."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst-1
msgid "Exercise: 2-D minimization"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:620
msgid "The six-hump camelback function"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:622
msgid ""
"f(x, y) = (4 - 2.1x^2 + \\frac{x^4}{3})x^2 + xy + (4y^2 - 4)y^2\n"
"\n"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:624
msgid ""
"has multiple local minima. Find a global minimum (there is more than one, "
"each with the same value of the objective function) and at least one other "
"local minimum."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:628
msgid "Hints:"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:630
msgid ""
"Variables can be restricted to :math:`-2 < x < 2` and :math:`-1 < y < 1`."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:631
msgid ""
":func:`numpy.meshgrid` and :func:`matplotlib.pyplot.imshow` can help with "
"visualization."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:633
msgid ""
"Try minimizing with :func:`scipy.optimize.minimize` with an initial guess of"
" :math:`(x, y) = (0, 0)`. Does it find the global minimum, or converge to a "
"local minimum? What about other initial guesses?"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:636
msgid "Try minimizing with :func:`scipy.optimize.differential_evolution`."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:638
msgid ""
":ref:`solution <sphx_glr_intro_scipy_auto_examples_plot_2d_minimization.py>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:640
msgid ""
"See the summary exercise on :ref:`summary_exercise_optimize` for another, "
"more advanced example."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:645
msgid "Statistics and random numbers: :mod:`scipy.stats`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:651
msgid ""
":mod:`scipy.stats` contains fundamental tools for statistics in Python."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:654
msgid "Statistical Distributions"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:656
msgid ""
"Consider a random variable distributed according to the standard normal. We "
"draw a sample consisting of 100000 observations from the random variable. "
"The normalized histogram of the sample is an estimator of the random "
"variable's probability density function (PDF)::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst-1
msgid "**Distribution objects and frozen distributions**"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:676
msgid ""
"Each of the 100+ :mod:`scipy.stats` distribution families is represented by "
"an *object* with a `__call__` method. Here, we call the "
":class:`scipy.stats.norm` object to specify its location and scale, and it "
"returns a *frozen* distribution: a particular element of a distribution "
"family with all parameters fixed. The frozen distribution object has methods"
" to compute essential functions of the particular distribution."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:683
msgid ""
"Suppose we knew that the sample had been drawn from a distribution belonging"
" to the family of normal distributions, but we did not know the particular "
"distribution's location (mean) and scale (standard deviation). We perform "
"maximum likelihood estimation of the unknown parameters using the "
"distribution family's ``fit`` method::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:695
msgid ""
"Since we know the true parameters of the distribution from which the sample "
"was drawn, we are not surprised that these estimates are similar."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst-1
msgid "Exercise: Probability distributions"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:701
msgid ""
"Generate 1000 random variates from a gamma distribution with a shape "
"parameter of 1. *Hint: the shape parameter is passed as the first argument "
"when freezing the distribution*. Plot the histogram of the sample, and "
"overlay the distribution's PDF. Estimate the shape parameter from the sample"
" using the ``fit`` method."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:707
msgid ""
"Extra: the distributions have many useful methods. Explore them using tab "
"completion. Plot the cumulative density function of the distribution, and "
"compute the variance."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:712
msgid "Sample Statistics and Hypothesis Tests"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:714
msgid ""
"The sample mean is an estimator of the mean of the distribution from which "
"the sample was drawn::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:720
msgid ""
"NumPy includes some of the most fundamental sample statistics (e.g. "
":func:`numpy.mean`, :func:`numpy.var`, :func:`numpy.percentile`); "
":mod:`scipy.stats` includes many more. For instance, the geometric mean is a"
" common measure of central tendency for data that tends to be distributed "
"over many orders of magnitude."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:729
msgid ""
"SciPy also includes a variety of hypothesis tests that produce a sample "
"statistic and a p-value. For instance, suppose we wish to test the null "
"hypothesis that ``sample`` was drawn from a normal distribution::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:740
msgid ""
"Here, ``statistic`` is a sample statistic that tends to be high for samples "
"that are drawn from non-normal distributions. ``pvalue`` is the probability "
"of observing such a high value of the statistic for a sample that *has* been"
" drawn from a normal distribution. If the p-value is unusually small, this "
"may be taken as evidence that ``sample`` was *not* drawn from the normal "
"distribution. Our statistic and p-value are moderate, so the test is "
"inconclusive."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:748
msgid ""
"There are many other features of :mod:`scipy.stats`, including circular "
"statistics, quasi-Monte Carlo methods, and resampling methods. For much more"
" information, see the documentation of :mod:`scipy.stats` and the advanced "
"chapter :ref:`statistics <statistics>`."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:754
msgid "Numerical integration: :mod:`scipy.integrate`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:757
msgid "Quadrature"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:759
msgid ""
"Suppose we wish to compute the definite integral :math:`\\int_0^{\\pi / 2} "
"\\sin(t) dt` numerically. :func:`scipy.integrate.quad` chooses one of "
"several adaptive techniques depending on the parameters, and is therefore "
"the recommended first choice for integration of function of a single "
"variable::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:770
msgid ""
"Other functions for *numerical quadrature*, including integration of "
"multivariate functions and approximating integrals from samples, are "
"available in :mod:`scipy.integrate`."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:775
msgid "Initial Value Problems"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:777
msgid ""
":mod:`scipy.integrate` also features routines for integrating `Ordinary "
"Differential Equations (ODE) "
"<https://en.wikipedia.org/wiki/Ordinary_differential_equation>`__. For "
"example, :func:`scipy.integrate.solve_ivp` integrates ODEs of the form:"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:782
msgid "\\frac{dy}{dt} = f(t, y(t))"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:786
msgid ""
"from an initial time :math:`t_0` and initial state :math:`y(t=t_0)=t_0` to a"
" final time :math:`t_f` or until an event occurs (e.g. a specified state is "
"reached)."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:789
msgid ""
"As an introduction, consider the initial value problem given by "
":math:`\\frac{dy}{dt} = -2 y` and the initial condition :math:`y(t=0) = 1` "
"on the interval :math:`t = 0 \\dots 4`. We begin by defining a callable that"
" computes :math:`f(t, y(t))` given the current time and state."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:797
msgid "Then, to compute ``y`` as a function of time::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:804
msgid "and plot the result::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:820
msgid ""
"Let us integrate a more complex ODE: a `damped spring-mass oscillator "
"<https://en.wikipedia.org/wiki/Harmonic_oscillator#Damped_harmonic_oscillator>`__."
" The position of a mass attached to a spring obeys the 2nd order ODE "
":math:`\\ddot{y} + 2 \\zeta \\omega_0  \\dot{y} + \\omega_0^2 y = 0` with "
"natural frequency :math:`\\omega_0 = \\sqrt{k/m}`, damping ratio "
":math:`\\zeta = c/(2 m \\omega_0)`, spring constant :math:`k`, mass "
":math:`m`, and damping coefficient :math:`c`."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:828
msgid ""
"Before using :func:`scipy.integrate.solve_ivp`, the 2nd order ODE needs to "
"be transformed into a system of first-order ODEs. Note that"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:831
msgid ""
"\\frac{dy}{dt} = \\dot{y}\n"
"\\frac{d\\dot{y}}{dt} = \\ddot{y} = -(2 \\zeta \\omega_0  \\dot{y} + \\omega_0^2 y)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:836
msgid ""
"If we define :math:`z = [z_0, z_1]` where :math:`z_0 = y` and :math:`z_1 = "
"\\dot{y}`, then the first order equation:"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:839
msgid ""
"\\frac{dz}{dt} =\n"
"\\begin{bmatrix}\n"
"    \\frac{dz_0}{dt} \\\\\n"
"    \\frac{dz_1}{dt}\n"
"\\end{bmatrix} =\n"
"\\begin{bmatrix}\n"
"    z_1  \\\\\n"
"    -(2 \\zeta \\omega_0  z_1 + \\omega_0^2 z_0)\n"
"\\end{bmatrix}"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:851
msgid "is equivalent to the original second order equation."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:853
msgid "We set::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:861
msgid "and define the function that computes :math:`\\dot{z} = f(t, z(t))`::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:871
msgid "Integration of the system follows::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:881
msgid ""
"With the option `method='LSODA'`, :func:`scipy.integrate.solve_ivp` uses the"
" LSODA (Livermore Solver for Ordinary Differential equations with Automatic "
"method switching for stiff and non-stiff problems). See the `ODEPACK Fortran"
" library`_ for more details."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:887
msgid "**Partial Differental Equations**"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:889
msgid ""
"There is no Partial Differential Equations (PDE) solver in SciPy. Some "
"Python packages for solving PDE's are available, such as fipy_ or SfePy_."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:897
msgid "Fast Fourier transforms: :mod:`scipy.fft`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:899
msgid ""
"The :mod:`scipy.fft` module computes fast Fourier transforms (FFTs) and "
"offers utilities to handle them. Some important functions are:"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:902
msgid ":func:`scipy.fft.fft` to compute the FFT"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:904
msgid ":func:`scipy.fft.fftfreq` to generate the sampling frequencies"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:906
msgid ""
":func:`scipy.fft.ifft` to compute the inverse FFT, from frequency space to "
"signal space"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:911
msgid "As an illustration, a (noisy) input signal (``sig``), and its FFT::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:926
msgid "|signal_fig|"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:917
msgid "signal_fig"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:926
msgid "|fft_fig|"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:921
msgid "fft_fig"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:928
msgid "**Signal**"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:928
msgid "**FFT**"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:931
msgid ""
"As the signal comes from a real-valued function, the Fourier transform is "
"symmetric."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:934
msgid "The peak signal frequency can be found with ``freqs[power.argmax()]``"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:942
msgid ""
"Setting the Fourier component above this frequency to zero and inverting the"
" FFT with :func:`scipy.fft.ifft`, gives a filtered signal."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:947
msgid ""
"The code of this example can be found :ref:`here "
"<sphx_glr_intro_scipy_auto_examples_plot_fftpack.py>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst-1
msgid "`numpy.fft`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:951
msgid ""
"NumPy also has an implementation of FFT (:mod:`numpy.fft`). However, the "
"SciPy one should be preferred, as it uses more efficient underlying "
"implementations."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:957
msgid "**Fully worked examples:**"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:968
msgid ""
"Crude periodicity finding (:ref:`link "
"<sphx_glr_intro_scipy_auto_examples_solutions_plot_periodicity_finder.py>`)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:968
msgid ""
"Gaussian image blur (:ref:`link "
"<sphx_glr_intro_scipy_auto_examples_solutions_plot_image_blur.py>`)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:970
msgid "|periodicity_finding|"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:959
msgid "periodicity_finding"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:970
msgid "|image_blur|"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:963
msgid "image_blur"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst-1
msgid "Exercise: Denoise moon landing image"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:981
msgid ""
"Examine the provided image :download:`moonlanding.png "
"<../../data/moonlanding.png>`, which is heavily contaminated with periodic "
"noise. In this exercise, we aim to clean up the noise using the Fast Fourier"
" Transform."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:986
msgid "Load the image using :func:`matplotlib.pyplot.imread`."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:988
msgid ""
"Find and use the 2-D FFT function in :mod:`scipy.fft`, and plot the spectrum"
" (Fourier transform of) the image. Do you have any trouble visualising the "
"spectrum? If so, why?"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:992
msgid ""
"The spectrum consists of high and low frequency components. The noise is "
"contained in the high-frequency part of the spectrum, so set some of those "
"components to zero (use array slicing)."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:996
msgid "Apply the inverse Fourier transform to see the resulting image."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:998
msgid ""
":ref:`Solution "
"<sphx_glr_intro_scipy_auto_examples_solutions_plot_fft_image_denoise.py>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:1004
msgid "Signal processing: :mod:`scipy.signal`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:1008
msgid ""
":mod:`scipy.signal` is for typical signal processing: 1D, regularly-sampled "
"signals."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:1017
msgid ""
"**Resampling** :func:`scipy.signal.resample`: resample a signal to `n` "
"points using FFT. ::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:1032
msgid ""
"Notice how on the side of the window the resampling is less accurate and has"
" a rippling effect."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:1035
msgid ""
"This resampling is different from the :ref:`interpolation "
"<intro_scipy_interpolate>` provided by :mod:`scipy.interpolate` as it only "
"applies to regularly sampled data."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:1045
msgid ""
"**Detrending** :func:`scipy.signal.detrend`: remove linear trend from "
"signal::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:1062
msgid ""
"**Filtering**: For non-linear filtering, :mod:`scipy.signal` has filtering "
"(median filter :func:`scipy.signal.medfilt`, Wiener "
":func:`scipy.signal.wiener`), but we will discuss this in the image section."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:1069
msgid ""
":mod:`scipy.signal` also has a full-blown set of tools for the design of "
"linear filter (finite and infinite response filters), but this is out of the"
" scope of this tutorial."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:1074
msgid ""
"**Spectral analysis**: :func:`scipy.signal.spectrogram` compute a "
"spectrogram --frequency spectrums over consecutive time windows--, while "
":func:`scipy.signal.welch` comptes a power spectrum density (PSD)."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:1091
msgid "|chirp_fig| |spectrogram_fig| |psd_fig|"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:1079
msgid "chirp_fig"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:1083
msgid "spectrogram_fig"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:1087
msgid "psd_fig"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:1094
msgid "Image manipulation: :mod:`scipy.ndimage`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:1101
msgid "Summary exercises on scientific computing"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:1103
msgid ""
"The summary exercises use mainly NumPy, SciPy and Matplotlib. They provide "
"some real-life examples of scientific computing with Python. Now that the "
"basics of working with NumPy and SciPy have been introduced, the interested "
"user is invited to try these exercises."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:1110
msgid "**Exercises:**"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:1121
msgid "**Proposed solutions:**"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:1135
msgid "**References to go further**"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:1137
msgid ""
"Some chapters of the `advanced <advanced_topics_part>`__ and the `packages "
"and applications <applications_part>`__ parts of the SciPy lectures"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/index.rst:1141
msgid "The `SciPy cookbook <https://scipy-cookbook.readthedocs.io>`__"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/solutions.rst:3
msgid "Solutions"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/solutions.rst:9
msgid "The Pi Wallis Solution"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/solutions.rst:18
msgid "The Quicksort Solution"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/solutions.rst:20
msgid "Implement the quicksort algorithm, as defined by wikipedia:"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/solutions.rst:39
msgid "Fibonacci sequence"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/solutions.rst:44
msgid "``u_0 = 1; u_1 = 1``"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/solutions.rst:45
msgid "``u_(n+2) = u_(n+1) + u_n``"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/solutions.rst:73
msgid "The Directory Listing Solution"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/solutions.rst:75
msgid ""
"Implement a script that takes a directory name as argument, and returns the "
"list of '.py' files, sorted by name length."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/solutions.rst:78
msgid "**Hint:** try to understand the docstring of list.sort"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/solutions.rst:85
msgid "The Data File I/O Solution"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/solutions.rst:87
msgid ""
"Write a function that will load the column of numbers in ``data.txt`` and "
"calculate the min, max and sum values."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/solutions.rst:90
msgid "Data file:"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/solutions.rst:101
msgid "The PYTHONPATH Search Solution"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/solutions.rst:103
msgid "Write a program to search your PYTHONPATH for the module ``site.py``."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/answers_image_processing.rst:11
msgid ""
"Example of solution for the image processing exercise: unmolten grains in "
"glass"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/answers_image_processing.rst:17
msgid ""
"Open the image file MV_HFV_012.jpg and display it. Browse through the "
"keyword arguments in the docstring of ``imshow`` to display the image with "
"the \"right\" orientation (origin in the bottom left corner, and not the "
"upper left corner as for standard arrays). ::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/answers_image_processing.rst:24
msgid "Crop the image to remove the lower panel with measure information. ::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/answers_image_processing.rst:28
msgid ""
"Slightly filter the image with a median filter in order to refine its "
"histogram. Check how the histogram changes. ::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/answers_image_processing.rst:38
msgid ""
"Using the histogram of the filtered image, determine thresholds that allow "
"to define masks for sand pixels, glass pixels and bubble pixels. Other "
"option (homework): write a function that determines automatically the "
"thresholds from the minima of the histogram. ::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/answers_image_processing.rst:47
msgid ""
"Display an image in which the three phases are colored with three different "
"colors. ::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/answers_image_processing.rst:55
msgid "Use mathematical morphology to clean the different phases. ::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/answers_image_processing.rst:59
msgid ""
"Attribute labels to all bubbles and sand grains, and remove from the sand "
"mask grains that are smaller than 10 pixels. To do so, use "
"``sp.ndimage.sum`` or ``np.bincount`` to compute the grain sizes. ::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/answers_image_processing.rst:72
msgid "Compute the mean size of bubbles. ::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/index.rst:4
msgid "Examples for the summary excercices"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/index.rst:23
msgid ""
":ref:`sphx_glr_intro_scipy_summary-"
"exercises_auto_examples_plot_optimize_lidar_complex_data.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/index.rst:40
msgid ""
":ref:`sphx_glr_intro_scipy_summary-"
"exercises_auto_examples_plot_optimize_lidar_data.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/index.rst:57
msgid ""
":ref:`sphx_glr_intro_scipy_summary-"
"exercises_auto_examples_plot_sprog_annual_maxima.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/index.rst:74
msgid ""
":ref:`sphx_glr_intro_scipy_summary-"
"exercises_auto_examples_plot_optimize_lidar_data_fit.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/index.rst:91
msgid ""
":ref:`sphx_glr_intro_scipy_summary-"
"exercises_auto_examples_plot_optimize_lidar_complex_data_fit.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/index.rst:108
msgid ""
":ref:`sphx_glr_intro_scipy_summary-"
"exercises_auto_examples_plot_cumulative_wind_speed_prediction.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/index.rst:125
msgid ""
":ref:`sphx_glr_intro_scipy_summary-"
"exercises_auto_examples_plot_gumbell_wind_speed_prediction.py`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/index.rst:158
msgid ""
":download:`Download all examples in Python source code: "
"auto_examples_python.zip </intro/scipy/summary-"
"exercises/auto_examples/auto_examples_python.zip>`"
msgstr ""
":download:`Download all examples in Python source code: "
"auto_examples_python.zip </intro/scipy/summary-"
"exercises/auto_examples/auto_examples_python.zip>`"

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/index.rst:162
msgid ""
":download:`Download all examples in Jupyter notebooks: "
"auto_examples_jupyter.zip </intro/scipy/summary-"
"exercises/auto_examples/auto_examples_jupyter.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_cumulative_wind_speed_prediction.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_intro_scipy_summary-"
"exercises_auto_examples_plot_cumulative_wind_speed_prediction.py>` to "
"download the full example code."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_cumulative_wind_speed_prediction.rst:22
msgid "Cumulative wind speed prediction"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_cumulative_wind_speed_prediction.rst:24
msgid ""
"Generate the image cumulative-wind-speed-prediction.png for the interpolate "
"section of scipy.rst."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_cumulative_wind_speed_prediction.rst:66
msgid ""
":download:`Download Jupyter notebook: "
"plot_cumulative_wind_speed_prediction.ipynb "
"<plot_cumulative_wind_speed_prediction.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_cumulative_wind_speed_prediction.rst:70
msgid ""
":download:`Download Python source code: "
"plot_cumulative_wind_speed_prediction.py "
"<plot_cumulative_wind_speed_prediction.py>`"
msgstr ""
":download:`Download Python source code: "
"plot_cumulative_wind_speed_prediction.py "
"<plot_cumulative_wind_speed_prediction.py>`"

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_cumulative_wind_speed_prediction.rst:74
msgid ""
":download:`Download zipped: plot_cumulative_wind_speed_prediction.zip "
"<plot_cumulative_wind_speed_prediction.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_gumbell_wind_speed_prediction.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_intro_scipy_summary-"
"exercises_auto_examples_plot_gumbell_wind_speed_prediction.py>` to download "
"the full example code."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_gumbell_wind_speed_prediction.rst:22
msgid "The Gumbell distribution"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_gumbell_wind_speed_prediction.rst:24
#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_sprog_annual_maxima.rst:24
msgid "Generate the exercise results on the Gumbell distribution"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_gumbell_wind_speed_prediction.rst:73
msgid ""
":download:`Download Jupyter notebook: "
"plot_gumbell_wind_speed_prediction.ipynb "
"<plot_gumbell_wind_speed_prediction.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_gumbell_wind_speed_prediction.rst:77
msgid ""
":download:`Download Python source code: "
"plot_gumbell_wind_speed_prediction.py "
"<plot_gumbell_wind_speed_prediction.py>`"
msgstr ""
":download:`Download Python source code: "
"plot_gumbell_wind_speed_prediction.py "
"<plot_gumbell_wind_speed_prediction.py>`"

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_gumbell_wind_speed_prediction.rst:81
msgid ""
":download:`Download zipped: plot_gumbell_wind_speed_prediction.zip "
"<plot_gumbell_wind_speed_prediction.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_optimize_lidar_complex_data.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_intro_scipy_summary-"
"exercises_auto_examples_plot_optimize_lidar_complex_data.py>` to download "
"the full example code."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_optimize_lidar_complex_data.rst:22
msgid "The lidar system, data (2 of 2 datasets)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_optimize_lidar_complex_data.rst:24
msgid "Generate a chart of more complex data recorded by the lidar system"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_optimize_lidar_complex_data.rst:53
msgid ""
":download:`Download Jupyter notebook: plot_optimize_lidar_complex_data.ipynb"
" <plot_optimize_lidar_complex_data.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_optimize_lidar_complex_data.rst:57
msgid ""
":download:`Download Python source code: plot_optimize_lidar_complex_data.py "
"<plot_optimize_lidar_complex_data.py>`"
msgstr ""
":download:`Download Python source code: plot_optimize_lidar_complex_data.py "
"<plot_optimize_lidar_complex_data.py>`"

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_optimize_lidar_complex_data.rst:61
msgid ""
":download:`Download zipped: plot_optimize_lidar_complex_data.zip "
"<plot_optimize_lidar_complex_data.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_optimize_lidar_complex_data_fit.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_intro_scipy_summary-"
"exercises_auto_examples_plot_optimize_lidar_complex_data_fit.py>` to "
"download the full example code."
msgstr ""
":ref:`最後まで <sphx_glr_download_intro_scipy_summary-"
"exercises_auto_examples_plot_optimize_lidar_complex_data_fit.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_optimize_lidar_complex_data_fit.rst:22
msgid "The lidar system, data and fit (2 of 2 datasets)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_optimize_lidar_complex_data_fit.rst:24
#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_optimize_lidar_data_fit.rst:24
msgid "Generate a chart of the data fitted by Gaussian curve"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_optimize_lidar_complex_data_fit.rst:71
msgid ""
":download:`Download Jupyter notebook: "
"plot_optimize_lidar_complex_data_fit.ipynb "
"<plot_optimize_lidar_complex_data_fit.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_optimize_lidar_complex_data_fit.rst:75
msgid ""
":download:`Download Python source code: "
"plot_optimize_lidar_complex_data_fit.py "
"<plot_optimize_lidar_complex_data_fit.py>`"
msgstr ""
":download:`Download Python source code: "
"plot_optimize_lidar_complex_data_fit.py "
"<plot_optimize_lidar_complex_data_fit.py>`"

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_optimize_lidar_complex_data_fit.rst:79
msgid ""
":download:`Download zipped: plot_optimize_lidar_complex_data_fit.zip "
"<plot_optimize_lidar_complex_data_fit.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_optimize_lidar_data.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_intro_scipy_summary-"
"exercises_auto_examples_plot_optimize_lidar_data.py>` to download the full "
"example code."
msgstr ""
":ref:`最後まで <sphx_glr_download_intro_scipy_summary-"
"exercises_auto_examples_plot_optimize_lidar_data.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_optimize_lidar_data.rst:22
msgid "The lidar system, data (1 of 2 datasets)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_optimize_lidar_data.rst:24
msgid "Generate a chart of the data recorded by the lidar system"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_optimize_lidar_data.rst:53
msgid ""
":download:`Download Jupyter notebook: plot_optimize_lidar_data.ipynb "
"<plot_optimize_lidar_data.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_optimize_lidar_data.rst:57
msgid ""
":download:`Download Python source code: plot_optimize_lidar_data.py "
"<plot_optimize_lidar_data.py>`"
msgstr ""
":download:`Download Python source code: plot_optimize_lidar_data.py "
"<plot_optimize_lidar_data.py>`"

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_optimize_lidar_data.rst:61
msgid ""
":download:`Download zipped: plot_optimize_lidar_data.zip "
"<plot_optimize_lidar_data.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_optimize_lidar_data_fit.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_intro_scipy_summary-"
"exercises_auto_examples_plot_optimize_lidar_data_fit.py>` to download the "
"full example code."
msgstr ""
":ref:`最後まで <sphx_glr_download_intro_scipy_summary-"
"exercises_auto_examples_plot_optimize_lidar_data_fit.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_optimize_lidar_data_fit.rst:22
msgid "The lidar system, data and fit (1 of 2 datasets)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_optimize_lidar_data_fit.rst:68
msgid ""
":download:`Download Jupyter notebook: plot_optimize_lidar_data_fit.ipynb "
"<plot_optimize_lidar_data_fit.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_optimize_lidar_data_fit.rst:72
msgid ""
":download:`Download Python source code: plot_optimize_lidar_data_fit.py "
"<plot_optimize_lidar_data_fit.py>`"
msgstr ""
":download:`Download Python source code: plot_optimize_lidar_data_fit.py "
"<plot_optimize_lidar_data_fit.py>`"

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_optimize_lidar_data_fit.rst:76
msgid ""
":download:`Download zipped: plot_optimize_lidar_data_fit.zip "
"<plot_optimize_lidar_data_fit.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_sprog_annual_maxima.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_intro_scipy_summary-"
"exercises_auto_examples_plot_sprog_annual_maxima.py>` to download the full "
"example code."
msgstr ""
":ref:`最後まで <sphx_glr_download_intro_scipy_summary-"
"exercises_auto_examples_plot_sprog_annual_maxima.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_sprog_annual_maxima.rst:22
msgid "The Gumbell distribution, results"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_sprog_annual_maxima.rst:53
msgid ""
":download:`Download Jupyter notebook: plot_sprog_annual_maxima.ipynb "
"<plot_sprog_annual_maxima.ipynb>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_sprog_annual_maxima.rst:57
msgid ""
":download:`Download Python source code: plot_sprog_annual_maxima.py "
"<plot_sprog_annual_maxima.py>`"
msgstr ""
":download:`Download Python source code: plot_sprog_annual_maxima.py "
"<plot_sprog_annual_maxima.py>`"

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/plot_sprog_annual_maxima.rst:61
msgid ""
":download:`Download zipped: plot_sprog_annual_maxima.zip "
"<plot_sprog_annual_maxima.zip>`"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/sg_execution_times.rst:9
msgid ""
"**00:00.000** total execution time for 7 files **from intro/scipy/summary-"
"exercises/auto_examples**:"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/sg_execution_times.rst:35
msgid ""
":ref:`sphx_glr_intro_scipy_summary-"
"exercises_auto_examples_plot_cumulative_wind_speed_prediction.py` "
"(``plot_cumulative_wind_speed_prediction.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/sg_execution_times.rst:38
msgid ""
":ref:`sphx_glr_intro_scipy_summary-"
"exercises_auto_examples_plot_gumbell_wind_speed_prediction.py` "
"(``plot_gumbell_wind_speed_prediction.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/sg_execution_times.rst:41
msgid ""
":ref:`sphx_glr_intro_scipy_summary-"
"exercises_auto_examples_plot_optimize_lidar_complex_data.py` "
"(``plot_optimize_lidar_complex_data.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/sg_execution_times.rst:44
msgid ""
":ref:`sphx_glr_intro_scipy_summary-"
"exercises_auto_examples_plot_optimize_lidar_complex_data_fit.py` "
"(``plot_optimize_lidar_complex_data_fit.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/sg_execution_times.rst:47
msgid ""
":ref:`sphx_glr_intro_scipy_summary-"
"exercises_auto_examples_plot_optimize_lidar_data.py` "
"(``plot_optimize_lidar_data.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/sg_execution_times.rst:50
msgid ""
":ref:`sphx_glr_intro_scipy_summary-"
"exercises_auto_examples_plot_optimize_lidar_data_fit.py` "
"(``plot_optimize_lidar_data_fit.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/auto_examples/sg_execution_times.rst:53
msgid ""
":ref:`sphx_glr_intro_scipy_summary-"
"exercises_auto_examples_plot_sprog_annual_maxima.py` "
"(``plot_sprog_annual_maxima.py``)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/image-processing.rst:4
msgid "Image processing application: counting bubbles and unmolten grains"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/image-processing.rst:12
msgid "Statement of the problem"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/image-processing.rst:14
msgid ""
"Open the image file MV_HFV_012.jpg and display it. Browse through the "
"keyword arguments in the docstring of ``imshow`` to display the image with "
"the \"right\" orientation (origin in the bottom left corner, and not the "
"upper left corner as for standard arrays)."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/image-processing.rst:18
msgid ""
"This Scanning Element Microscopy image shows a glass sample (light gray "
"matrix) with some bubbles (on black) and unmolten sand grains (dark gray). "
"We wish to determine the fraction of the sample covered by these three "
"phases, and to estimate the typical size of sand grains and bubbles, their "
"sizes, etc."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/image-processing.rst:23
msgid "Crop the image to remove the lower panel with measure information."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/image-processing.rst:25
msgid ""
"Slightly filter the image with a median filter in order to refine its "
"histogram. Check how the histogram changes."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/image-processing.rst:28
msgid ""
"Using the histogram of the filtered image, determine thresholds that allow "
"to define masks for sand pixels, glass pixels and bubble pixels.  Other "
"option (homework): write a function that determines automatically the "
"thresholds from the minima of the histogram."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/image-processing.rst:32
msgid ""
"Display an image in which the three phases are colored with three different "
"colors."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/image-processing.rst:35
msgid "Use mathematical morphology to clean the different phases."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/image-processing.rst:37
msgid ""
"Attribute labels to all bubbles and sand grains, and remove from the sand "
"mask grains that are smaller than 10 pixels. To do so, use ``ndimage.sum`` "
"or ``np.bincount`` to compute the grain sizes."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/image-processing.rst:41
msgid "Compute the mean size of bubbles."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:9
msgid ""
"Non linear least squares curve fitting: application to point extraction in "
"topographical lidar data"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:11
msgid ""
"The goal of this exercise is to fit a model to some data. The data used in "
"this tutorial are lidar data and are described in details in the following "
"introductory paragraph. If you're impatient and want to practice now, please"
" skip it and go directly to :ref:`first_step`."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:17
msgid ""
"Lidars systems are optical rangefinders that analyze property of scattered "
"light to measure distances. Most of them emit a short light impulsion "
"towards a target and record the reflected signal. This signal is then "
"processed to extract the distance between the lidar system and the target."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:22
msgid ""
"Topographical lidar systems are such systems embedded in airborne platforms."
" They measure distances between the platform and the Earth, so as to deliver"
" information on the Earth's topography (see [#mallet]_ for more details)."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:26
msgid ""
"Mallet, C. and Bretar, F. Full-Waveform Topographic Lidar: State-of-the-Art."
" *ISPRS Journal of Photogrammetry and Remote Sensing* 64(1), pp.1-16, "
"January 2009 http://dx.doi.org/10.1016/j.isprsjprs.2008.09.007"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:28
msgid ""
"In this tutorial, the goal is to analyze the waveform recorded by the lidar "
"system [#data]_. Such a signal contains peaks whose center and amplitude "
"permit to compute the position and some characteristics of the hit target. "
"When the footprint of the laser beam is around 1m on the Earth surface, the "
"beam can hit multiple targets during the two-way propagation (for example "
"the ground and the top of a tree or building). The sum of the contributions "
"of each target hit by the laser beam then produces a complex signal with "
"multiple peaks, each one containing information about one target."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:37
msgid ""
"One state of the art method to extract information from these data is to "
"decompose them in a sum of Gaussian functions where each function represents"
" the contribution of a target hit by the laser beam."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:41
msgid ""
"Therefore, we use the :mod:`scipy.optimize` module to fit a waveform to one "
"or a sum of Gaussian functions."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:47
msgid "Loading and visualization"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:49
msgid "Load the first waveform using::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:54
msgid "and visualize it::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:62
msgid ""
"As shown below, this waveform is a 80-bin-length signal with a single peak "
"with an amplitude of approximately 30 in the 15 nanosecond bin. "
"Additionally, the base level of noise is approximately 3. These values can "
"be used in the initial solution."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:72
msgid "Fitting a waveform with a simple Gaussian model"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:74
msgid ""
"The signal is very simple and can be modeled as a single Gaussian function "
"and an offset corresponding to the background noise. To fit the signal with "
"the function, we must:"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:78
msgid "define the model"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:79
msgid "propose an initial solution"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:80
msgid "call ``scipy.optimize.leastsq``"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:84
msgid "Model"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:86
msgid "A Gaussian function defined by"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:88
msgid ""
"B + A \\exp\\left\\{-\\left(\\frac{t-\\mu}{\\sigma}\\right)^2\\right\\}\n"
"\n"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:91
msgid "can be defined in python by::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:96
msgid "where"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:98
msgid "``coeffs[0]`` is :math:`B` (noise)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:99
msgid "``coeffs[1]`` is :math:`A` (amplitude)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:100
msgid "``coeffs[2]`` is :math:`\\mu` (center)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:101
msgid "``coeffs[3]`` is :math:`\\sigma` (width)"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:105
msgid "Initial solution"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:107
msgid "One possible initial solution that we determine by inspection is::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:112
msgid "Fit"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:114
msgid ""
"``scipy.optimize.leastsq`` minimizes the sum of squares of the function "
"given as an argument. Basically, the function to minimize is the residuals "
"(the difference between the data and the model)::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:121
msgid ""
"So let's get our solution by calling :func:`scipy.optimize.leastsq` with the"
" following arguments:"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:124
msgid "the function to minimize"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:125
msgid "an initial solution"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:126
msgid "the additional arguments to pass to the function"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:136
msgid "And visualize the solution:"
msgstr "そして解決策を可視化します:"

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:146
msgid ""
"*Remark:* from scipy v0.8 and above, you should rather use "
":func:`scipy.optimize.curve_fit` which takes the model and the data as "
"arguments, so you don't need to define the residuals any more."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:151
msgid "Going further"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:153
msgid ""
"Try with a more complex waveform (for instance ``waveform_2.npy``) that "
"contains three significant peaks. You must adapt the model which is now a "
"sum of Gaussian functions instead of only one Gaussian peak."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:162
msgid ""
"In some cases, writing an explicit function to compute the Jacobian is "
"faster than letting ``leastsq`` estimate it numerically. Create a function "
"to compute the Jacobian of the residuals and use it as an input for "
"``leastsq``."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:166
msgid ""
"When we want to detect very small peaks in the signal, or when the initial "
"guess is too far from a good solution, the result given by the algorithm is "
"often not satisfying. Adding constraints to the parameters of the model "
"enables to overcome such limitations. An example of *a priori* knowledge we "
"can add is the sign of our variables (which are all positive)."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:172
msgid ""
"See the `solution "
"<auto_examples/plot_optimize_lidar_complex_data_fit.html>`_."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:174
msgid ""
"Further exercise: compare the result of :func:`scipy.optimize.leastsq` and "
"what you can get with :func:`scipy.optimize.fmin_slsqp` when adding boundary"
" constraints."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/optimize-fit.rst:178
msgid ""
"The data used for this tutorial are part of the demonstration data available"
" for the `FullAnalyze software <https://fullanalyze.sourceforge.net>`_ and "
"were kindly provided by the GIS DRAIX."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/stats-interpolate.rst:4
msgid "Maximum wind speed prediction at the Sprogø station"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/stats-interpolate.rst:5
msgid ""
"The exercise goal is to predict the maximum wind speed occurring every 50 "
"years even if no measure exists for such a period. The available data are "
"only measured over 21 years at the Sprogø meteorological station located in "
"Denmark. First, the statistical steps will be given and then illustrated "
"with functions from the scipy.interpolate module. At the end the interested "
"readers are invited to compute results from raw data and in a slightly "
"different approach."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/stats-interpolate.rst:14
msgid "Statistical approach"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/stats-interpolate.rst:15
msgid ""
"The annual maxima are supposed to fit a normal probability density function."
" However such function is not going to be estimated because it gives a "
"probability from a wind speed maxima. Finding the maximum wind speed "
"occurring every 50 years requires the opposite approach, the result needs to"
" be found from a defined probability. That is the quantile function role and"
" the exercise goal will be to find it. In the current model, it is supposed "
"that the maximum wind speed occurring every 50 years is defined as the upper"
" 2% quantile."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/stats-interpolate.rst:24
msgid ""
"By definition, the quantile function is the inverse of the cumulative "
"distribution function. The latter describes the probability distribution of "
"an annual maxima. In the exercise, the cumulative probability ``p_i`` for a "
"given year ``i`` is defined as ``p_i = i/(N+1)`` with ``N = 21``, the number"
" of measured years. Thus it will be possible to calculate the cumulative "
"probability of every measured wind speed maxima. From those experimental "
"points, the scipy.interpolate module will be very useful for fitting the "
"quantile function. Finally the 50 years maxima is going to be evaluated from"
" the cumulative probability of the 2% quantile."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/stats-interpolate.rst:36
msgid "Computing the cumulative probabilities"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/stats-interpolate.rst:37
msgid ""
"The annual wind speeds maxima have already been computed and saved in the "
"NumPy format in the file :download:`examples/max-speeds.npy`, thus they will"
" be loaded by using NumPy::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/stats-interpolate.rst:45
msgid ""
"Following the cumulative probability definition ``p_i`` from the previous "
"section, the corresponding values will be::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/stats-interpolate.rst:50
msgid "and they are assumed to fit the given wind speeds::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/stats-interpolate.rst:56
msgid "Prediction with UnivariateSpline"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/stats-interpolate.rst:57
msgid ""
"In this section the quantile function will be estimated by using the "
"``UnivariateSpline`` class which can represent a spline from points. The "
"default behavior is to build a spline of degree 3 and points can have "
"different weights according to their reliability. Variants are "
"``InterpolatedUnivariateSpline`` and ``LSQUnivariateSpline`` on which errors"
" checking is going to change.  In case a 2D spline is wanted, the "
"``BivariateSpline`` class family is provided. All those classes for 1D and "
"2D splines use the FITPACK Fortran subroutines, that's why a lower library "
"access is available through the ``splrep`` and ``splev`` functions for "
"respectively representing and evaluating a spline. Moreover interpolation "
"functions without the use of FITPACK parameters are also provided for "
"simpler use."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/stats-interpolate.rst:70
msgid ""
"For the Sprogø maxima wind speeds, the ``UnivariateSpline`` will be used "
"because a spline of degree 3 seems to correctly fit the data::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/stats-interpolate.rst:76
msgid ""
"The quantile function is now going to be evaluated from the full range of "
"probabilities::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/stats-interpolate.rst:82
msgid ""
"In the current model, the maximum wind speed occurring every 50 years is "
"defined as the upper 2% quantile. As a result, the cumulative probability "
"value will be::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/stats-interpolate.rst:89
msgid "So the storm wind speed occurring every 50 years can be guessed by::"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/stats-interpolate.rst:95
msgid "The results are now gathered on a Matplotlib figure:"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/stats-interpolate.rst:100
#: ../../scientific-python-lectures/intro/scipy/summary-exercises/stats-interpolate.rst:132
msgid ""
"Solution: :download:`Python source file "
"<examples/plot_gumbell_wind_speed_prediction.py>`"
msgstr ""
"解答: :download:`Python source file "
"<examples/plot_gumbell_wind_speed_prediction.py>`"

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/stats-interpolate.rst:104
msgid "Exercise with the Gumbell distribution"
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/stats-interpolate.rst:105
msgid ""
"The interested readers are now invited to make an exercise by using the wind"
" speeds measured over 21 years. The measurement period is around 90 minutes "
"(the original period was around 10 minutes but the file size has been "
"reduced for making the exercise setup easier). The data are stored in NumPy "
"format inside the file :download:`examples/sprog-windspeeds.npy`. Do not "
"look at the source code for the plots until you have completed the exercise."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/stats-interpolate.rst:113
msgid ""
"The first step will be to find the annual maxima by using NumPy and plot "
"them as a matplotlib bar figure."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/stats-interpolate.rst:119
msgid ""
"Solution: :download:`Python source file "
"<examples/plot_sprog_annual_maxima.py>`"
msgstr ""
"解答: :download:`Python source file <examples/plot_sprog_annual_maxima.py>`"

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/stats-interpolate.rst:123
msgid ""
"The second step will be to use the Gumbell distribution on cumulative "
"probabilities ``p_i`` defined as ``-log( -log(p_i) )`` for fitting a linear "
"quantile function (remember that you can define the degree of the "
"``UnivariateSpline``). Plotting the annual maxima versus the Gumbell "
"distribution should give you the following figure."
msgstr ""

#: ../../scientific-python-lectures/intro/scipy/summary-exercises/stats-interpolate.rst:136
msgid ""
"The last step will be to find 34.23 m/s for the maximum wind speed occurring"
" every 50 years."
msgstr ""
