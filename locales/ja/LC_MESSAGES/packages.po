# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025
# This file is distributed under the same license as the Scientific Python Lectures package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Tetsuo Koyama <tkoyama010@gmail.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Scientific Python Lectures 2025.1rc0.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-06-19 00:14+0000\n"
"PO-Revision-Date: 2024-11-27 19:15+0000\n"
"Last-Translator: Tetsuo Koyama <tkoyama010@gmail.com>, 2025\n"
"Language-Team: Japanese (https://app.transifex.com/tkoyama010/teams/202028/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../scientific-python-lectures/packages/index.rst:4
msgid "Packages and applications"
msgstr "パッケージとアプリケーション"

#: ../../scientific-python-lectures/packages/index.rst:6
msgid ""
"This part of the *Scientific Python Lectures* is dedicated to various "
"scientific packages useful for extended needs."
msgstr ""
"このパートでは、 *Scientific Python Lectures* の一環として、拡張ニーズに役立つ様々な科学パッケージを紹介します。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1612
#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1644
#: ../../../../../../../tmp/<rst_epilog>:9
msgid "|clear-floats|"
msgstr "|clear-floats|"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/index.rst:3
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/index.rst:4
msgid "Examples for the scikit-image chapter"
msgstr "scikit-imageの章の例"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/index.rst:22
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/index.rst:23
msgid ":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_check.py`"
msgstr ":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_check.py`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/index.rst:39
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/index.rst:40
msgid ":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_camera.py`"
msgstr ":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_camera.py`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/index.rst:56
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/index.rst:57
msgid ""
":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_camera_uint.py`"
msgstr ""
":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_camera_uint.py`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/index.rst:73
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/index.rst:74
msgid ""
":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_equalize_hist.py`"
msgstr ""
":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_equalize_hist.py`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/index.rst:90
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/index.rst:91
msgid ":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_sobel.py`"
msgstr ":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_sobel.py`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/index.rst:107
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/index.rst:108
msgid ":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_boundaries.py`"
msgstr ""
":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_boundaries.py`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/index.rst:124
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/index.rst:125
msgid ":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_threshold.py`"
msgstr ":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_threshold.py`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/index.rst:141
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/index.rst:142
msgid ":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_features.py`"
msgstr ":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_features.py`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/index.rst:158
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/index.rst:159
msgid ":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_labels.py`"
msgstr ":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_labels.py`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/index.rst:175
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/index.rst:176
msgid ""
":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_filter_coins.py`"
msgstr ""
":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_filter_coins.py`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/index.rst:192
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/index.rst:193
msgid ""
":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_segmentations.py`"
msgstr ""
":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_segmentations.py`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/index.rst:229
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/index.rst:230
msgid ""
":download:`Download all examples in Python source code: "
"auto_examples_python.zip </packages/scikit-"
"image/auto_examples/auto_examples_python.zip>`"
msgstr ""
":download:`Download all examples in Python source code: "
"auto_examples_python.zip </packages/scikit-"
"image/auto_examples/auto_examples_python.zip>`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/index.rst:233
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/index.rst:234
msgid ""
":download:`Download all examples in Jupyter notebooks: "
"auto_examples_jupyter.zip </packages/scikit-"
"image/auto_examples/auto_examples_jupyter.zip>`"
msgstr ""
":download:`Download all examples in Jupyter notebooks: "
"auto_examples_jupyter.zip </packages/scikit-"
"image/auto_examples/auto_examples_jupyter.zip>`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/index.rst:240
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/index.rst:241
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_boundaries.rst:77
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_camera.rst:68
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_camera_uint.rst:72
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_check.rst:66
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_equalize_hist.rst:72
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_features.rst:75
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_filter_coins.rst:86
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_labels.rst:87
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_segmentations.rst:109
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_sobel.rst:74
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_threshold.rst:79
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:348
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:349
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_ML_flow_chart.rst:215
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_bias_variance.rst:229
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_california_prediction.rst:166
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_compare_classifiers.rst:93
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_digits_simple_classif.rst:207
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_eigenfaces.rst:335
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_iris_knn.rst:126
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_iris_scatter.rst:82
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_linear_model_cv.rst:106
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_linear_regression.rst:86
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_measuring_performance.rst:109
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_pca.rst:107
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_polynomial_regression.rst:135
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_separator.rst:92
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_svm_non_linear.rst:187
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_tsne.rst:114
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_variance_linear_regr.rst:133
#: ../../scientific-python-lectures/packages/statistics/auto_examples/index.rst:230
#: ../../scientific-python-lectures/packages/statistics/auto_examples/index.rst:231
#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_airfare.rst:241
#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_iris_analysis.rst:112
#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_paired_boxplots.rst:76
#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_pandas.rst:78
#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_regression.rst:133
#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_regression_3d.rst:139
#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_wage_data.rst:153
#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_wage_education_gender.rst:168
#: ../../scientific-python-lectures/packages/statistics/auto_examples/solutions/plot_brain_size.rst:111
msgid ""
"`Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_"
msgstr ""
"`Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_boundaries.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_packages_scikit-"
"image_auto_examples_plot_boundaries.py>` to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_packages_scikit-"
"image_auto_examples_plot_boundaries.py>` をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_boundaries.rst:22
msgid "Segmentation contours"
msgstr "輪郭セグメンテーション"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_boundaries.rst:24
msgid "Visualize segmentation contours on original grayscale image."
msgstr "元のグレースケール画像上でセグメンテーションの輪郭を可視化します。"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_boundaries.rst:62
msgid ""
":download:`Download Jupyter notebook: plot_boundaries.ipynb "
"<plot_boundaries.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plot_boundaries.ipynb "
"<plot_boundaries.ipynb>`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_boundaries.rst:66
msgid ""
":download:`Download Python source code: plot_boundaries.py "
"<plot_boundaries.py>`"
msgstr ""
":download:`Download Python source code: plot_boundaries.py "
"<plot_boundaries.py>`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_boundaries.rst:70
msgid ":download:`Download zipped: plot_boundaries.zip <plot_boundaries.zip>`"
msgstr ""
":download:`Download zipped: plot_boundaries.zip <plot_boundaries.zip>`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_camera.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_packages_scikit-"
"image_auto_examples_plot_camera.py>` to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_packages_scikit-"
"image_auto_examples_plot_camera.py>` をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_camera.rst:22
msgid "Displaying a simple image"
msgstr "シンプルな画像の表示"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_camera.rst:24
msgid "Load and display an image"
msgstr "画像を読み込んで表示します"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_camera.rst:53
msgid ""
":download:`Download Jupyter notebook: plot_camera.ipynb <plot_camera.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plot_camera.ipynb <plot_camera.ipynb>`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_camera.rst:57
msgid ""
":download:`Download Python source code: plot_camera.py <plot_camera.py>`"
msgstr ""
":download:`Download Python source code: plot_camera.py <plot_camera.py>`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_camera.rst:61
msgid ":download:`Download zipped: plot_camera.zip <plot_camera.zip>`"
msgstr ":download:`Download zipped: plot_camera.zip <plot_camera.zip>`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_camera_uint.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_packages_scikit-"
"image_auto_examples_plot_camera_uint.py>` to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_packages_scikit-"
"image_auto_examples_plot_camera_uint.py>` をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_camera_uint.rst:22
msgid "Integers can overflow"
msgstr "整数はオーバーフローすることがある"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_camera_uint.rst:24
msgid "An illustration of overflow problem arising when working with integers"
msgstr "整数を扱う場合のオーバーフロー問題の例"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_camera_uint.rst:57
msgid ""
":download:`Download Jupyter notebook: plot_camera_uint.ipynb "
"<plot_camera_uint.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plot_camera_uint.ipynb "
"<plot_camera_uint.ipynb>`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_camera_uint.rst:61
msgid ""
":download:`Download Python source code: plot_camera_uint.py "
"<plot_camera_uint.py>`"
msgstr ""
":download:`Download Python source code: plot_camera_uint.py "
"<plot_camera_uint.py>`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_camera_uint.rst:65
msgid ""
":download:`Download zipped: plot_camera_uint.zip <plot_camera_uint.zip>`"
msgstr ""
":download:`Download zipped: plot_camera_uint.zip <plot_camera_uint.zip>`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_check.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_packages_scikit-"
"image_auto_examples_plot_check.py>` to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_packages_scikit-"
"image_auto_examples_plot_check.py>` をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_check.rst:22
msgid "Creating an image"
msgstr "画像の作成"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_check.rst:24
msgid ""
"How to create an image with basic NumPy commands : ``np.zeros``, slicing..."
msgstr "NumPyの基本的なコマンドで画像を作成する方法 : ``np.zeros``, スライシング..."

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_check.rst:26
msgid "This examples show how to create a simple checkerboard."
msgstr "この例では、シンプルなチェッカーボードの作り方を紹介します。"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_check.rst:51
msgid ""
":download:`Download Jupyter notebook: plot_check.ipynb <plot_check.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plot_check.ipynb <plot_check.ipynb>`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_check.rst:55
msgid ":download:`Download Python source code: plot_check.py <plot_check.py>`"
msgstr ""
":download:`Download Python source code: plot_check.py <plot_check.py>`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_check.rst:59
msgid ":download:`Download zipped: plot_check.zip <plot_check.zip>`"
msgstr ":download:`Download zipped: plot_check.zip <plot_check.zip>`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_equalize_hist.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_packages_scikit-"
"image_auto_examples_plot_equalize_hist.py>` to download the full example "
"code."
msgstr ""
":ref:`最後まで<sphx_glr_download_packages_scikit-"
"image_auto_examples_plot_equalize_hist.py>` をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_equalize_hist.rst:22
msgid "Equalizing the histogram of an image"
msgstr "画像のヒストグラムを均等化する"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_equalize_hist.rst:24
msgid "Histogram equalizing makes images have a uniform histogram."
msgstr "ヒストグラム均等化 は、画像を均一なヒストグラムにします。"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_equalize_hist.rst:57
msgid ""
":download:`Download Jupyter notebook: plot_equalize_hist.ipynb "
"<plot_equalize_hist.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plot_equalize_hist.ipynb "
"<plot_equalize_hist.ipynb>`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_equalize_hist.rst:61
msgid ""
":download:`Download Python source code: plot_equalize_hist.py "
"<plot_equalize_hist.py>`"
msgstr ""
":download:`Download Python source code: plot_equalize_hist.py "
"<plot_equalize_hist.py>`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_equalize_hist.rst:65
msgid ""
":download:`Download zipped: plot_equalize_hist.zip <plot_equalize_hist.zip>`"
msgstr ""
":download:`Download zipped: plot_equalize_hist.zip <plot_equalize_hist.zip>`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_features.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_packages_scikit-"
"image_auto_examples_plot_features.py>` to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_packages_scikit-"
"image_auto_examples_plot_features.py>` をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_features.rst:22
msgid "Affine transform"
msgstr "アフィン変換"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_features.rst:24
msgid "Warping and affine transforms of images."
msgstr "画像の幾何学歪補正とアフィン変換。"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_features.rst:60
msgid ""
":download:`Download Jupyter notebook: plot_features.ipynb "
"<plot_features.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plot_features.ipynb "
"<plot_features.ipynb>`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_features.rst:64
msgid ""
":download:`Download Python source code: plot_features.py <plot_features.py>`"
msgstr ""
":download:`Download Python source code: plot_features.py <plot_features.py>`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_features.rst:68
msgid ":download:`Download zipped: plot_features.zip <plot_features.zip>`"
msgstr ":download:`Download zipped: plot_features.zip <plot_features.zip>`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_filter_coins.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_packages_scikit-"
"image_auto_examples_plot_filter_coins.py>` to download the full example "
"code."
msgstr ""
":ref:`最後まで<sphx_glr_download_packages_scikit-"
"image_auto_examples_plot_filter_coins.py>` をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_filter_coins.rst:22
msgid "Various denoising filters"
msgstr "様々なノイズ除去フィルター"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_filter_coins.rst:24
msgid ""
"This example compares several denoising filters available in scikit-image: a"
" Gaussian filter, a median filter, and total variation denoising."
msgstr ""
"この例では、scikit-imageで利用可能ないくつかのノイズ除去フィルタ:ガウシアンフィルタ、メディアンフィルタ、全変動ノイズ除去を比較します。"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_filter_coins.rst:71
msgid ""
":download:`Download Jupyter notebook: plot_filter_coins.ipynb "
"<plot_filter_coins.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plot_filter_coins.ipynb "
"<plot_filter_coins.ipynb>`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_filter_coins.rst:75
msgid ""
":download:`Download Python source code: plot_filter_coins.py "
"<plot_filter_coins.py>`"
msgstr ""
":download:`Download Python source code: plot_filter_coins.py "
"<plot_filter_coins.py>`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_filter_coins.rst:79
msgid ""
":download:`Download zipped: plot_filter_coins.zip <plot_filter_coins.zip>`"
msgstr ""
":download:`Download zipped: plot_filter_coins.zip <plot_filter_coins.zip>`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_labels.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_packages_scikit-"
"image_auto_examples_plot_labels.py>` to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_packages_scikit-"
"image_auto_examples_plot_labels.py>` をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_labels.rst:22
msgid "Labelling connected components of an image"
msgstr "画像の連結成分にラベルを付ける"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_labels.rst:24
msgid ""
"This example shows how to label connected components of a binary image, "
"using the dedicated skimage.measure.label function."
msgstr "この例では、専用の skimage.measure.label 関数を使用して、2値画像の連結成分にラベルを付ける方法を示します。"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_labels.rst:72
msgid ""
":download:`Download Jupyter notebook: plot_labels.ipynb <plot_labels.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plot_labels.ipynb <plot_labels.ipynb>`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_labels.rst:76
msgid ""
":download:`Download Python source code: plot_labels.py <plot_labels.py>`"
msgstr ""
":download:`Download Python source code: plot_labels.py <plot_labels.py>`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_labels.rst:80
msgid ":download:`Download zipped: plot_labels.zip <plot_labels.zip>`"
msgstr ":download:`Download zipped: plot_labels.zip <plot_labels.zip>`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_segmentations.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_packages_scikit-"
"image_auto_examples_plot_segmentations.py>` to download the full example "
"code."
msgstr ""
":ref:`最後まで<sphx_glr_download_packages_scikit-"
"image_auto_examples_plot_segmentations.py>` をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_segmentations.rst:22
msgid "Watershed and random walker for segmentation"
msgstr "セグメンテーションのための分水嶺とランダムウォーカー"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_segmentations.rst:24
msgid ""
"This example compares two segmentation methods in order to separate two "
"connected disks: the watershed algorithm, and the random walker algorithm."
msgstr ""
"この例では、2つの連結した円盤を分離するために、2つのセグメンテーション法を比較します: 分水嶺アルゴリズムとランダムウォーカーアルゴリズム。"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_segmentations.rst:27
msgid ""
"Both segmentation methods require seeds, that are pixels belonging "
"unambigusouly to a reagion. Here, local maxima of the distance map to the "
"background are used as seeds."
msgstr ""
"どちらのセグメンテーション手法も、曖昧性のない領域に属する画素であるシードを必要とします。ここでは、背景との距離マップの局所最大値がシードとして使用されます。"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_segmentations.rst:94
msgid ""
":download:`Download Jupyter notebook: plot_segmentations.ipynb "
"<plot_segmentations.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plot_segmentations.ipynb "
"<plot_segmentations.ipynb>`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_segmentations.rst:98
msgid ""
":download:`Download Python source code: plot_segmentations.py "
"<plot_segmentations.py>`"
msgstr ""
":download:`Download Python source code: plot_segmentations.py "
"<plot_segmentations.py>`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_segmentations.rst:102
msgid ""
":download:`Download zipped: plot_segmentations.zip <plot_segmentations.zip>`"
msgstr ""
":download:`Download zipped: plot_segmentations.zip <plot_segmentations.zip>`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_sobel.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_packages_scikit-"
"image_auto_examples_plot_sobel.py>` to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_packages_scikit-"
"image_auto_examples_plot_sobel.py>` をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_sobel.rst:22
msgid "Computing horizontal gradients with the Sobel filter"
msgstr "Sobelフィルタによる水平勾配の計算"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_sobel.rst:24
msgid ""
"This example illustrates the use of the horizontal Sobel filter, to compute "
"horizontal gradients."
msgstr "この例では、水平方向のグラデーションを計算するための水平Sobelフィルターの使い方を説明します。"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_sobel.rst:59
msgid ""
":download:`Download Jupyter notebook: plot_sobel.ipynb <plot_sobel.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plot_sobel.ipynb <plot_sobel.ipynb>`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_sobel.rst:63
msgid ":download:`Download Python source code: plot_sobel.py <plot_sobel.py>`"
msgstr ""
":download:`Download Python source code: plot_sobel.py <plot_sobel.py>`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_sobel.rst:67
msgid ":download:`Download zipped: plot_sobel.zip <plot_sobel.zip>`"
msgstr ":download:`Download zipped: plot_sobel.zip <plot_sobel.zip>`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_threshold.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_packages_scikit-"
"image_auto_examples_plot_threshold.py>` to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_packages_scikit-"
"image_auto_examples_plot_threshold.py>` をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_threshold.rst:22
msgid "Otsu thresholding"
msgstr "大津の二値化法"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_threshold.rst:24
msgid "This example illustrates automatic Otsu thresholding."
msgstr "この例は、大津の二値化法を示しています。"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_threshold.rst:64
msgid ""
":download:`Download Jupyter notebook: plot_threshold.ipynb "
"<plot_threshold.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plot_threshold.ipynb "
"<plot_threshold.ipynb>`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_threshold.rst:68
msgid ""
":download:`Download Python source code: plot_threshold.py "
"<plot_threshold.py>`"
msgstr ""
":download:`Download Python source code: plot_threshold.py "
"<plot_threshold.py>`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/plot_threshold.rst:72
msgid ":download:`Download zipped: plot_threshold.zip <plot_threshold.zip>`"
msgstr ":download:`Download zipped: plot_threshold.zip <plot_threshold.zip>`"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/sg_execution_times.rst:8
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:8
#: ../../scientific-python-lectures/packages/statistics/auto_examples/sg_execution_times.rst:8
#: ../../scientific-python-lectures/packages/statistics/auto_examples/solutions/sg_execution_times.rst:8
msgid "Computation times"
msgstr "計算時間"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/sg_execution_times.rst:9
msgid ""
"**00:00.000** total execution time for 11 files **from packages/scikit-"
"image/auto_examples**:"
msgstr ""
"**00:00.000** total execution time for 11 files **from packages/scikit-"
"image/auto_examples**:"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/sg_execution_times.rst:32
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:32
#: ../../scientific-python-lectures/packages/statistics/auto_examples/sg_execution_times.rst:32
#: ../../scientific-python-lectures/packages/statistics/auto_examples/solutions/sg_execution_times.rst:32
msgid "Example"
msgstr "例"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/sg_execution_times.rst:33
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:33
#: ../../scientific-python-lectures/packages/statistics/auto_examples/sg_execution_times.rst:33
#: ../../scientific-python-lectures/packages/statistics/auto_examples/solutions/sg_execution_times.rst:33
msgid "Time"
msgstr "時間"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/sg_execution_times.rst:34
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:34
#: ../../scientific-python-lectures/packages/statistics/auto_examples/sg_execution_times.rst:34
#: ../../scientific-python-lectures/packages/statistics/auto_examples/solutions/sg_execution_times.rst:34
msgid "Mem (MB)"
msgstr "Mem (MB)"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/sg_execution_times.rst:35
msgid ""
":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_boundaries.py` "
"(``plot_boundaries.py``)"
msgstr ""
":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_boundaries.py` "
"(``plot_boundaries.py``)"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/sg_execution_times.rst:36
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/sg_execution_times.rst:39
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/sg_execution_times.rst:42
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/sg_execution_times.rst:45
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/sg_execution_times.rst:48
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/sg_execution_times.rst:51
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/sg_execution_times.rst:54
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/sg_execution_times.rst:57
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/sg_execution_times.rst:60
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/sg_execution_times.rst:63
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/sg_execution_times.rst:66
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:36
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:39
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:42
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:45
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:48
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:51
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:54
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:57
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:60
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:63
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:66
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:69
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:72
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:75
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:78
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:81
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:84
#: ../../scientific-python-lectures/packages/statistics/auto_examples/sg_execution_times.rst:36
#: ../../scientific-python-lectures/packages/statistics/auto_examples/sg_execution_times.rst:39
#: ../../scientific-python-lectures/packages/statistics/auto_examples/sg_execution_times.rst:42
#: ../../scientific-python-lectures/packages/statistics/auto_examples/sg_execution_times.rst:45
#: ../../scientific-python-lectures/packages/statistics/auto_examples/sg_execution_times.rst:48
#: ../../scientific-python-lectures/packages/statistics/auto_examples/sg_execution_times.rst:51
#: ../../scientific-python-lectures/packages/statistics/auto_examples/sg_execution_times.rst:54
#: ../../scientific-python-lectures/packages/statistics/auto_examples/sg_execution_times.rst:57
#: ../../scientific-python-lectures/packages/statistics/auto_examples/solutions/sg_execution_times.rst:36
msgid "00:00.000"
msgstr "00:00.000"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/sg_execution_times.rst:37
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/sg_execution_times.rst:40
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/sg_execution_times.rst:43
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/sg_execution_times.rst:46
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/sg_execution_times.rst:49
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/sg_execution_times.rst:52
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/sg_execution_times.rst:55
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/sg_execution_times.rst:58
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/sg_execution_times.rst:61
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/sg_execution_times.rst:64
#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/sg_execution_times.rst:67
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:37
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:40
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:43
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:46
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:49
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:52
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:55
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:58
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:61
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:64
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:67
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:70
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:73
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:76
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:79
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:82
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:85
#: ../../scientific-python-lectures/packages/statistics/auto_examples/sg_execution_times.rst:37
#: ../../scientific-python-lectures/packages/statistics/auto_examples/sg_execution_times.rst:40
#: ../../scientific-python-lectures/packages/statistics/auto_examples/sg_execution_times.rst:43
#: ../../scientific-python-lectures/packages/statistics/auto_examples/sg_execution_times.rst:46
#: ../../scientific-python-lectures/packages/statistics/auto_examples/sg_execution_times.rst:49
#: ../../scientific-python-lectures/packages/statistics/auto_examples/sg_execution_times.rst:52
#: ../../scientific-python-lectures/packages/statistics/auto_examples/sg_execution_times.rst:55
#: ../../scientific-python-lectures/packages/statistics/auto_examples/sg_execution_times.rst:58
#: ../../scientific-python-lectures/packages/statistics/auto_examples/solutions/sg_execution_times.rst:37
msgid "0.0"
msgstr "0.0"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/sg_execution_times.rst:38
msgid ""
":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_camera.py` "
"(``plot_camera.py``)"
msgstr ""
":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_camera.py` "
"(``plot_camera.py``)"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/sg_execution_times.rst:41
msgid ""
":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_camera_uint.py` "
"(``plot_camera_uint.py``)"
msgstr ""
":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_camera_uint.py` "
"(``plot_camera_uint.py``)"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/sg_execution_times.rst:44
msgid ""
":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_check.py` "
"(``plot_check.py``)"
msgstr ""
":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_check.py` "
"(``plot_check.py``)"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/sg_execution_times.rst:47
msgid ""
":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_equalize_hist.py` "
"(``plot_equalize_hist.py``)"
msgstr ""
":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_equalize_hist.py` "
"(``plot_equalize_hist.py``)"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/sg_execution_times.rst:50
msgid ""
":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_features.py` "
"(``plot_features.py``)"
msgstr ""
":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_features.py` "
"(``plot_features.py``)"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/sg_execution_times.rst:53
msgid ""
":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_filter_coins.py` "
"(``plot_filter_coins.py``)"
msgstr ""
":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_filter_coins.py` "
"(``plot_filter_coins.py``)"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/sg_execution_times.rst:56
msgid ""
":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_labels.py` "
"(``plot_labels.py``)"
msgstr ""
":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_labels.py` "
"(``plot_labels.py``)"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/sg_execution_times.rst:59
msgid ""
":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_segmentations.py` "
"(``plot_segmentations.py``)"
msgstr ""
":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_segmentations.py` "
"(``plot_segmentations.py``)"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/sg_execution_times.rst:62
msgid ""
":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_sobel.py` "
"(``plot_sobel.py``)"
msgstr ""
":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_sobel.py` "
"(``plot_sobel.py``)"

#: ../../scientific-python-lectures/packages/scikit-image/auto_examples/sg_execution_times.rst:65
msgid ""
":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_threshold.py` "
"(``plot_threshold.py``)"
msgstr ""
":ref:`sphx_glr_packages_scikit-image_auto_examples_plot_threshold.py` "
"(``plot_threshold.py``)"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:10
msgid "``scikit-image``: image processing"
msgstr "``scikit-image``: 画像処理"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:15
msgid "**Author**: *Emmanuelle Gouillart*"
msgstr "**著者**: *Emmanuelle Gouillart*"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:17
msgid ""
"`scikit-image <https://scikit-image.org/>`_ is a Python package dedicated to"
" image processing, using NumPy arrays as image objects. This chapter "
"describes how to use ``scikit-image`` for various image processing tasks, "
"and how it relates to other scientific Python modules such as NumPy and "
"SciPy."
msgstr ""
"`scikit-image <https://scikit-image.org/>`_ "
"は画像処理専用のPythonパッケージで、NumPyの配列を画像オブジェクトとして使用します。 この章では、様々な画像処理タスクのために "
"``scikit-image`` を使用する方法と、NumPyやSciPyのような他の科学的なPythonモジュールとの関係について説明します。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:25
msgid ""
"For basic image manipulation, such as image cropping or simple filtering, a "
"large number of simple operations can be realized with NumPy and SciPy only."
" See :ref:`basic_image`."
msgstr ""
"画像の切り抜きや簡単なフィルタリングのような基本的な画像操作については、NumPyとSciPyだけで多くの簡単な操作を実現することができます。  "
":ref:`basic_image` を参照してください。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:29
msgid ""
"Note that you should be familiar with the content of the previous chapter "
"before reading the current one, as basic operations such as masking and "
"labeling are a prerequisite."
msgstr ""
"マスキングやラベリングといった基本的な操作が前提になるので、この章を読む前に、前の章の内容をよく理解しておく必要があることに注意してください。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:36
#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:38
#: ../../scientific-python-lectures/packages/sympy.rst:35
msgid "Chapters contents"
msgstr "各章の内容"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:39
msgid "Introduction and concepts"
msgstr "イントロダクションとコンセプト"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:41
msgid "Images are NumPy's arrays ``np.ndarray``"
msgstr "画像はNumPyの配列 ``np.ndarray`` です。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:0
msgid "image"
msgstr "画像"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:45
msgid "``np.ndarray``"
msgstr "``np.ndarray``"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:0
msgid "pixels"
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:49
msgid "array values: ``a[2, 3]``"
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:0
msgid "channels"
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:53
msgid "array dimensions"
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:0
msgid "image encoding"
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:57
msgid "``dtype`` (``np.uint8``, ``np.uint16``, ``np.float``)"
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:0
msgid "filters"
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:61
msgid "functions (``numpy``, ``skimage``, ``scipy``)"
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:81
msgid "``scikit-image`` and the scientific Python ecosystem"
msgstr "``scikit-image`` と科学的Pythonエコシステム"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:83
msgid ""
"``scikit-image`` is packaged in both ``pip`` and ``conda``-based Python "
"installations, as well as in most Linux distributions.  Other Python "
"packages for image processing & visualization that operate on NumPy arrays "
"include:"
msgstr ""
"``scikit-image`` は ``pip`` と ``conda`` ベースの Python インストーラ、およびほとんどの Linux "
"ディストリビューションでパッケージ化されています。 NumPy 配列を操作する画像処理と可視化のための他の Python "
"パッケージには以下のものがあります:"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:88
msgid ":mod:`scipy.ndimage`"
msgstr ":mod:`scipy.ndimage`"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:89
msgid ""
"For N-dimensional arrays. Basic filtering, mathematical morphology, regions "
"properties"
msgstr "N次元配列の場合 基本的なフィルタリング、数理形態学、領域の特性"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:92
msgid "`Mahotas <https://mahotas.readthedocs.io>`_"
msgstr "`Mahotas <https://mahotas.readthedocs.io>`_"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:93
msgid "With a focus on high-speed implementations."
msgstr "高速実装に焦点を当てています。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:95
msgid "`Napari <https://napari.org>`_"
msgstr "`Napari <https://napari.org>`_"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:96
msgid "A fast, interactive, multi-dimensional image viewer built in Qt."
msgstr "Qt で作られた高速でインタラクティブな多次元画像ビューア。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:98
msgid ""
"Some powerful C++ image processing libraries also have Python bindings:"
msgstr "いくつかの強力なC++画像処理ライブラリには、Pythonバインディングもあります:"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:100
msgid "`OpenCV <https://docs.opencv.org/4.x/d6/d00/tutorial_py_root.html>`_"
msgstr "`OpenCV <https://docs.opencv.org/4.x/d6/d00/tutorial_py_root.html>`_"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:101
msgid ""
"A highly optimized computer vision library with a focus on real-time "
"applications."
msgstr "リアルタイムアプリケーションに焦点を当てた、高度に最適化されたコンピュータビジョンライブラリ。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:104
msgid "`ITK <https://www.itk.org>`_"
msgstr "`ITK <https://www.itk.org>`_"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:105
msgid ""
"The Insight ToolKit, especially useful for registration and working with 3D "
"images."
msgstr "Insight ToolKitは、レジストレーションや3D画像の操作に特に便利です。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:108
msgid "To varying degrees, these tend to be less Pythonic and NumPy-friendly."
msgstr "程度の差こそあれ、これらはあまりPythonicでなくNumPyに優しくない傾向があります。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:111
msgid "What is included in scikit-image"
msgstr "scikit-imageに含まれるもの"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:113
msgid "Website: https://scikit-image.org/"
msgstr "Webサイト: https://scikit-image.org/"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:115
msgid ""
"Gallery of examples: https://scikit-image.org/docs/stable/auto_examples/"
msgstr "実例ギャラリー: https://scikit-image.org/docs/stable/auto_examples/"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:118
msgid ""
"The library contains predominantly image processing algorithms, but also "
"utility functions to ease data handling and processing. It contains the "
"following submodules:"
msgstr ""
"このライブラリには、主に画像処理アルゴリズムが含まれていますが、データの取り扱いと処理を容易にするユーティリティ関数も含まれています。 "
"以下のサブモジュールを含みます:"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:122
msgid ":mod:`color`"
msgstr ":mod:`color`"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:123
msgid "Color space conversion."
msgstr "色空間の変換。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:125
msgid ":mod:`data`"
msgstr ":mod:`data`"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:126
msgid "Test images and example data."
msgstr "テスト画像とサンプルデータ。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:128
msgid ":mod:`draw`"
msgstr ":mod:`draw`"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:129
msgid "Drawing primitives (lines, text, etc.) that operate on NumPy arrays."
msgstr "NumPyの配列を操作する描画プリミティブ (線、テキストなど) 。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:132
msgid ":mod:`exposure`"
msgstr ":mod:`exposure`"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:133
msgid "Image intensity adjustment, e.g., histogram equalization, etc."
msgstr "画像強度調整、例、ヒストグラム等化など"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:135
msgid ":mod:`feature`"
msgstr ":mod:`feature`"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:136
msgid "Feature detection and extraction, e.g., texture analysis corners, etc."
msgstr "特徴検出と抽出、例、テクスチャー分析コーナーなど。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:138
msgid ":mod:`filters`"
msgstr ":mod:`filters`"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:139
msgid "Sharpening, edge finding, rank filters, thresholding, etc."
msgstr "シャープネス、エッジ検出、ランクフィルター、閾値処理など。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:141
msgid ":mod:`graph`"
msgstr ":mod:`graph`"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:142
msgid "Graph-theoretic operations, e.g., shortest paths."
msgstr "グラフ理論的操作、例えば最短経路。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:144
msgid ":mod:`io`"
msgstr ":mod:`io`"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:145
msgid "Reading, saving, and displaying images and video."
msgstr "画像やビデオの読み取り、保存、表示。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:147
msgid ":mod:`measure`"
msgstr ":mod:`measure`"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:148
msgid "Measurement of image properties, e.g., region properties and contours."
msgstr "画像特性の測定、例えば、リージョンプロパティや輪郭など。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:150
msgid ":mod:`metrics`"
msgstr ":mod:`metrics`"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:151
msgid ""
"Metrics corresponding to images, e.g. distance metrics, similarity, etc."
msgstr "画像に対応するメトリクス、例えば、距離メトリクス、類似度など。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:153
msgid ":mod:`morphology`"
msgstr ":mod:`morphology`"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:154
msgid "Morphological operations, e.g., opening or skeletonization."
msgstr "形態学的操作、例えば、オープニングやスケルトン化。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:156
msgid ":mod:`restoration`"
msgstr ":mod:`restoration`"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:157
msgid ""
"Restoration algorithms, e.g., deconvolution algorithms, denoising, etc."
msgstr "復元アルゴリズム、例えばデコンボリューションアルゴリズム、ノイズ除去など。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:159
msgid ":mod:`segmentation`"
msgstr ":mod:`segmentation`"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:160
msgid "Partitioning an image into multiple regions."
msgstr "画像を複数の領域に分割する。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:162
msgid ":mod:`transform`"
msgstr ":mod:`transform`"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:163
msgid "Geometric and other transforms, e.g., rotation or the Radon transform."
msgstr "幾何学変換やその他の変換、例えば回転やRadon変換など。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:165
msgid ":mod:`util`"
msgstr ":mod:`util`"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:166
msgid "Generic utilities."
msgstr "汎用ユーティリティ。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:172
msgid "Importing"
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:174
msgid "We import ``scikit-image`` using the convention::"
msgstr "``scikit-image`` をインポートするには::"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:178
msgid "Most functionality lives in subpackages, e.g.::"
msgstr "ほとんどの機能はサブパッケージに含まれています、例えば::"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:182
msgid "You can list all submodules with::"
msgstr "以下ですべてのサブモジュールを一覧できます::"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:204
msgid ""
"Most ``scikit-image`` functions take NumPy ``ndarrays`` as arguments ::"
msgstr "ほとんどの ``scikit-image`` 関数は、NumPyの ``ndarrays`` を引数にとります ::"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:216
msgid "Example data"
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:218
msgid ""
"To start off, we need example images to work with. The library ships with a "
"few of these:"
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:221
msgid ":mod:`skimage.data` ::"
msgstr ":mod:`skimage.data` ::"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:228
msgid "Input/output, data types and colorspaces"
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:230
msgid "I/O: :mod:`skimage.io`"
msgstr "I/O: :mod:`skimage.io`"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:232
msgid "Save an image to disk: :func:`skimage.io.imsave` ::"
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:236
msgid "Reading from files: :func:`skimage.io.imread` ::"
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:245
msgid ""
"This works with many data formats supported by the `ImageIO "
"<https://imageio.readthedocs.io>`__ library."
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:248
msgid "Loading also works with URLs::"
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:253
msgid "Data types"
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:261
msgid ""
"Image ndarrays can be represented either by integers (signed or unsigned) or"
" floats."
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:264
msgid "Careful with overflows with integer data types"
msgstr "整数データ型でのオーバーフローに注意してください"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:273
msgid ""
"Different integer sizes are possible: 8-, 16- or 32-bytes, signed or "
"unsigned."
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:278
msgid ""
"An important (if questionable) ``skimage`` **convention**: float images are "
"supposed to lie in [-1, 1] (in order to have comparable contrast for all "
"float images) ::"
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:286
msgid ""
"Some image processing routines need to work with float arrays, and may hence"
" output an array with a different type and the data range from the input "
"array ::"
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:295
msgid ""
"Utility functions are provided in :mod:`skimage` to convert both the dtype "
"and the data range, following skimage's conventions: ``util.img_as_float``, "
"``util.img_as_ubyte``, etc."
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:299
msgid ""
"See the `user guide <https://scikit-"
"image.org/docs/stable/user_guide/data_types.html>`_ for more details."
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:304
msgid "Colorspaces"
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:306
msgid ""
"Color images are of shape (N, M, 3) or (N, M, 4) (when an alpha channel "
"encodes transparency) ::"
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:314
msgid ""
"Routines converting between different colorspaces (RGB, HSV, LAB etc.) are "
"available in :mod:`skimage.color` : ``color.rgb2hsv``, ``color.lab2rgb``, "
"etc. Check the docstring for the expected dtype (and data range) of input "
"images."
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-image/index.rst-1
msgid "3D images"
msgstr "3D画像"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:321
msgid ""
"Most functions of ``skimage`` can take 3D images as input arguments. Check "
"the docstring to know if a function can be used on 3D images (for example "
"MRI or CT images)."
msgstr ""
"``skimage`` "
"のほとんどの関数は、入力引数として3D画像を受け取ることができます。ある関数が3D画像（例えばMRIやCT画像）に使用できるかどうかは、docstringを確認してください。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst-1
#: ../../scientific-python-lectures/packages/scikit-image/index.rst:624
msgid "Exercise"
msgstr "例題"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:330
msgid "Open a color image on your disk as a NumPy array."
msgstr "ディスク上のカラー画像をNumPyの配列として開きます。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:332
msgid ""
"Find a skimage function computing the histogram of an image and plot the "
"histogram of each color channel"
msgstr "画像のヒストグラムを計算するskimage関数を見つけ、各色チャンネルのヒストグラムをプロットします。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:335
msgid "Convert the image to grayscale and plot its histogram."
msgstr "画像をグレースケールに変換し、そのヒストグラムをプロットします。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:338
msgid "Image preprocessing / enhancement"
msgstr "画像の前処理/改良"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:340
msgid "Goals: denoising, feature (edges) extraction, ..."
msgstr "目標: ノイズ除去、特徴（エッジ）抽出、..."

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:344
msgid "Local filters"
msgstr "局所フィルター"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:346
msgid ""
"Local filters replace the value of pixels by a function of the values of "
"neighboring pixels. The function can be linear or non-linear."
msgstr "局所フィルターは、ピクセルの値を局所ピクセルの値の関数で置き換えます。この関数は線形でも非線形でもよいです。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:349
msgid ""
"Neighbourhood: square (choose size), disk, or more complicated *structuring "
"element*."
msgstr "局所: 正方形（サイズを選択）、円盤、またはより複雑な *構造要素* 。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:356
msgid "Example : horizontal Sobel filter ::"
msgstr "例: 水平Sobelフィルター"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:362
msgid "Uses the following linear kernel for computing horizontal gradients::"
msgstr "水平勾配の計算には次の線形カーネルを使用します::"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:375
msgid "Non-local filters"
msgstr "非局所フィルター"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:377
msgid ""
"Non-local filters use a large region of the image (or all the image) to "
"transform the value of one pixel::"
msgstr "非局所フィルターは、画像の広い領域（または画像全体）を使って、あるピクセルの値を変換します::"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:383
msgid "Enhances contrast in large almost uniform regions."
msgstr "ほぼ均一な広い領域のコントラストを高めます。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:391
msgid "Mathematical morphology"
msgstr "数学的形態学"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:393
msgid ""
"See `wikipedia <https://en.wikipedia.org/wiki/Mathematical_morphology>`_ for"
" an introduction on mathematical morphology."
msgstr ""
"数学的形態学については `wikipedia "
"<https://en.wikipedia.org/wiki/Mathematical_morphology>`_ を参照してください。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:396
msgid ""
"Probe an image with a simple shape (a **structuring element**), and modify "
"this image according to how the shape locally fits or misses the image."
msgstr ""
"単純な形状（ **構造化要素** "
"）で画像を探査し、その形状が局所的に画像にどのようにフィットするか、あるいは画像をどのように外すかによって、この画像を修正します。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:400
msgid "Default structuring element: 4-connectivity of a pixel ::"
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:414
msgid ""
"**Erosion** = minimum filter. Replace the value of a pixel by the minimal "
"value covered by the structuring element.::"
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:444
msgid "**Dilation**: maximum filter::"
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:461
msgid "**Opening**: erosion + dilation::"
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:478
msgid "Opening removes small objects and smoothes corners."
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-image/index.rst-1
msgid "Grayscale mathematical morphology"
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:482
msgid ""
"Mathematical morphology operations are also available for (non-binary) "
"grayscale images (int or float type). Erosion and dilation correspond to "
"minimum (resp. maximum) filters."
msgstr ""
"数理形態学演算は、 (2値でない) グレースケール画像 (int型またはfloat型) でも利用できます。 erosionとdilationは最小 "
"(あるいは最大) フィルタに対応します。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:486
msgid ""
"Higher-level mathematical morphology are available: tophat, skeletonization,"
" etc."
msgstr "より高度な数学的形態学が利用できます: tophat、skeletonizationなど。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:491
msgid ""
"Basic mathematical morphology is also implemented in "
":mod:`scipy.ndimage.morphology`. The ``scipy.ndimage`` implementation works "
"on arbitrary-dimensional arrays."
msgstr ""
"基本的な数理形態学は :mod:`scipy.ndimage.morphology` にも実装されています。 "
"``scipy.ndimage``の実装は任意の次元の配列に対して動作します。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:391
msgid "Example of filters comparison: image denoising"
msgstr "フィルターの比較例: 画像のノイズ除去"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:516
msgid "Image segmentation"
msgstr "画像分割"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:518
msgid ""
"Image segmentation is the attribution of different labels to different "
"regions of the image, for example in order to extract the pixels of an "
"object of interest."
msgstr ""
"画像セグメンテーションとは、画像の異なる領域に異なるラベルを付けることであり、例えば、関心のあるオブジェクトのピクセルを抽出するために行われます。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:523
msgid "Binary segmentation: foreground + background"
msgstr "バイナリセグメンテーション: 前景＋背景"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:526
msgid "Histogram-based method: **Otsu thresholding**"
msgstr "ヒストグラムに基づく方法: **Otsu thresholding**"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:530
msgid ""
"The `Otsu method <https://en.wikipedia.org/wiki/Otsu%27s_method>`_ is a "
"simple heuristic to find a threshold to separate the foreground from the "
"background."
msgstr ""
"`Otsu method <https://en.wikipedia.org/wiki/Otsu%27s_method>`_ "
"は、前景と背景を分離する閾値を見つけるための単純なヒューリスティックである。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst-1
msgid "Earlier scikit-image versions"
msgstr "以前の scikit-image バージョン"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:536
msgid ""
":mod:`skimage.filters` is called :mod:`skimage.filter` in earlier versions "
"of scikit-image"
msgstr ""
":mod:`skimage.filters` は、以前のバージョンの scikit-image では :mod:`skimage.filter` "
"と呼ばれていた。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:551
msgid "Labeling connected components of a discrete image"
msgstr "離散画像の連結成分にラベルを付ける"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:555
msgid ""
"Once you have separated foreground objects, it is use to separate them from "
"each other. For this, we can assign a different integer labels to each one."
msgstr "前景オブジェクトを分離したら、それらを互いに分離するのに使います。 そのために、それぞれに異なる整数ラベルを割り当てることができます。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:559
msgid "Synthetic data::"
msgstr "合成データ::"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:570
msgid "Label all connected components::"
msgstr "接続されているすべてのコンポーネントにラベルを貼ります::"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:574
msgid "Label only foreground connected components::"
msgstr "接続されているすべての前景コンポーネントにラベルを貼ります::"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:586
msgid ""
":func:`scipy.ndimage.find_objects` is useful to return slices on object in "
"an image."
msgstr ":func:`scipy.ndimage.find_objects` は、画像内のオブジェクトのスライスを返すのに便利です。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:590
msgid "Marker based methods"
msgstr "マーカーに基づく方法"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:592
msgid ""
"If you have markers inside a set of regions, you can use these to segment "
"the regions."
msgstr "リージョンのセットの中にマーカーがあれば、それを使ってリージョンを分割することができます。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:596
msgid "*Watershed* segmentation"
msgstr "*Watershed* セグメンテーション"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:598
msgid ""
"The Watershed (:func:`skimage.segmentation.watershed`) is a region-growing "
"approach that fills \"basins\" in the image ::"
msgstr ""
"Watershed (:func:`skimage.segmentation.watershed`) は、画像の \"basins \" "
"を埋める領域拡大アプローチです ::"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:624
msgid "*Random walker* segmentation"
msgstr "*ランダムウォーカー* セグメンテーション"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:626
msgid ""
"The random walker algorithm (:func:`skimage.segmentation.random_walker`) is "
"similar to the Watershed, but with a more \"probabilistic\" approach. It is "
"based on the idea of the diffusion of labels in the image::"
msgstr ""
"ランダムウォーカーアルゴリズム (:func:`skimage.segmentation.random_walker`) "
"はWatershedに似ていますが、より \"確率的\" なアプローチです。 画像内のラベルの拡散という考えに基づいています::"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst-1
msgid "Postprocessing label images"
msgstr "ラベル画像の後処理"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:643
msgid ""
"``skimage`` provides several utility functions that can be used on label "
"images (ie images where different discrete values identify different "
"regions). Functions names are often self-explaining: "
":func:`skimage.segmentation.clear_border`, "
":func:`skimage.segmentation.relabel_from_one`, "
":func:`skimage.morphology.remove_small_objects`, etc."
msgstr ""
"skimage`` はラベル画像 (つまり、異なる離散値が異なる領域を識別する画像) に使用できるユーティリティ関数をいくつか提供しています。 "
"関数名は説明不要な場合が多いです: :func:`skimage.segmentation.clear_border`, "
":func:`skimage.segmentation.relabel_from_one`, "
":func:`skimage.morphology.remove_small_objects`, etc."

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:654
msgid "Load the ``coins`` image from the ``data`` submodule."
msgstr "サブモジュール ``data`` から ``coins`` イメージをロードします。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:656
msgid ""
"Separate the coins from the background by testing several segmentation "
"methods: Otsu thresholding, adaptive thresholding, and watershed or random "
"walker segmentation."
msgstr ""
"いくつかのセグメンテーション方法をテストして、背景からコインを分離します: Otsu "
"thresholding、適応閾値処理、watershedセグメンテーション、ランダムウォーカーセグメンテーション。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:660
msgid ""
"If necessary, use a postprocessing function to improve the coins / "
"background segmentation."
msgstr "必要であれば、後処理機能を使って、コイン/バックグラウンドのセグメンテーションを改善します。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:665
msgid "Measuring regions' properties"
msgstr "領域の特性を測定する"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:667
msgid "Example: compute the size and perimeter of the two segmented regions::"
msgstr "例: 2つの分割された領域のサイズと周囲を計算します::"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:677
msgid ""
"for some properties, functions are available as well in "
":mod:`scipy.ndimage.measurements` with a different API (a list is returned)."
msgstr ""
"プロパティによっては、別のAPIで :mod:`scipy.ndimage.measurements` に関数が用意されています (リストが返されます)"
" 。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst-1
msgid "Exercise (continued)"
msgstr "例題 (続き)"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:685
msgid ""
"Use the binary image of the coins and background from the previous exercise."
msgstr "前の練習で使用したコインと背景の2値画像を使用します。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:688
msgid "Compute an image of labels for the different coins."
msgstr "異なるコインのラベルのイメージを計算します。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:690
msgid "Compute the size and eccentricity of all coins."
msgstr "すべてのコインの大きさと偏心を計算します。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:693
msgid "Data visualization and interaction"
msgstr "データの可視化とインタラクション"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:695
msgid ""
"Meaningful visualizations are useful when testing a given processing "
"pipeline."
msgstr "意味のある可視化は、与えられた処理パイプラインをテストするときに役立ちます。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:698
msgid "Some image processing operations::"
msgstr "いくつかの画像処理操作::"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:704
msgid "Visualize binary result::"
msgstr "バイナリ結果の可視化::"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:711
msgid "Visualize contour ::"
msgstr "輪郭の視覚化 ::"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:720
msgid "Use ``skimage`` dedicated utility function::"
msgstr "専用ユーティリティ関数 ``skimage`` を使用します::"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:732
msgid "Feature extraction for computer vision"
msgstr "コンピュータビジョンのための特徴抽出"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:734
msgid ""
"Geometric or textural descriptor can be extracted from images in order to"
msgstr "幾何学的記述子やテクスチャ記述子は、以下の目的で画像から抽出することができます"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:736
msgid "classify parts of the image (e.g. sky vs. buildings)"
msgstr "画像の一部を分類する (例：空と建物)"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:738
msgid "match parts of different images (e.g. for object detection)"
msgstr "異なる画像の一部を一致させます (例：物体検出)"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:740
msgid ""
"and many other applications of `Computer Vision "
"<https://en.wikipedia.org/wiki/Computer_vision>`_"
msgstr ""
"`コンピュータビジョン <https://en.wikipedia.org/wiki/Computer_vision>`_ "
"の他の多くのアプリケーション。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:743
msgid "Example: detecting corners using Harris detector ::"
msgstr "例: Harris検出器によるコーナー検出::"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:765
msgid ""
"(this example is taken from the `plot_corner <https://scikit-"
"image.org/docs/stable/auto_examples/features_detection/plot_corner.html>`_ "
"example in scikit-image)"
msgstr ""
"(この例はscikit-imageの `plot_corner <https://scikit-"
"image.org/docs/stable/auto_examples/features_detection/plot_corner.html>`_ "
"の例から引用しています)"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:769
msgid ""
"Points of interest such as corners can then be used to match objects in "
"different images, as described in the `plot_matching <https://scikit-"
"image.org/docs/stable/auto_examples/transform/plot_matching.html>`_ example "
"of scikit-image."
msgstr ""
"scikit-imageの `plot_matching <https://scikit-"
"image.org/docs/stable/auto_examples/transform/plot_matching.html>`_ "
"の例で説明されているように、角のような注目点は、異なる画像内のオブジェクトをマッチングするために使用することができます。"

#: ../../scientific-python-lectures/packages/scikit-image/index.rst:775
msgid "Full code examples"
msgstr "全コード例"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:3
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:4
msgid "Examples for the scikit-learn chapter"
msgstr "scikit-learnの章の例"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:22
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:23
msgid ":ref:`sphx_glr_packages_scikit-learn_auto_examples_plot_pca.py`"
msgstr ":ref:`sphx_glr_packages_scikit-learn_auto_examples_plot_pca.py`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:39
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:40
msgid ""
":ref:`sphx_glr_packages_scikit-"
"learn_auto_examples_plot_measuring_performance.py`"
msgstr ""
":ref:`sphx_glr_packages_scikit-"
"learn_auto_examples_plot_measuring_performance.py`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:56
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:57
msgid ""
":ref:`sphx_glr_packages_scikit-"
"learn_auto_examples_plot_linear_regression.py`"
msgstr ""
":ref:`sphx_glr_packages_scikit-"
"learn_auto_examples_plot_linear_regression.py`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:73
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:74
msgid ""
":ref:`sphx_glr_packages_scikit-learn_auto_examples_plot_iris_scatter.py`"
msgstr ""
":ref:`sphx_glr_packages_scikit-learn_auto_examples_plot_iris_scatter.py`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:90
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:91
msgid ":ref:`sphx_glr_packages_scikit-learn_auto_examples_plot_tsne.py`"
msgstr ":ref:`sphx_glr_packages_scikit-learn_auto_examples_plot_tsne.py`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:107
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:108
msgid ""
":ref:`sphx_glr_packages_scikit-learn_auto_examples_plot_linear_model_cv.py`"
msgstr ""
":ref:`sphx_glr_packages_scikit-learn_auto_examples_plot_linear_model_cv.py`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:124
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:125
msgid ""
":ref:`sphx_glr_packages_scikit-"
"learn_auto_examples_plot_variance_linear_regr.py`"
msgstr ""
":ref:`sphx_glr_packages_scikit-"
"learn_auto_examples_plot_variance_linear_regr.py`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:141
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:142
msgid ":ref:`sphx_glr_packages_scikit-learn_auto_examples_plot_separator.py`"
msgstr ":ref:`sphx_glr_packages_scikit-learn_auto_examples_plot_separator.py`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:158
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:159
msgid ""
":ref:`sphx_glr_packages_scikit-"
"learn_auto_examples_plot_compare_classifiers.py`"
msgstr ""
":ref:`sphx_glr_packages_scikit-"
"learn_auto_examples_plot_compare_classifiers.py`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:175
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:176
msgid ""
":ref:`sphx_glr_packages_scikit-"
"learn_auto_examples_plot_polynomial_regression.py`"
msgstr ""
":ref:`sphx_glr_packages_scikit-"
"learn_auto_examples_plot_polynomial_regression.py`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:192
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:193
msgid ""
":ref:`sphx_glr_packages_scikit-"
"learn_auto_examples_plot_california_prediction.py`"
msgstr ""
":ref:`sphx_glr_packages_scikit-"
"learn_auto_examples_plot_california_prediction.py`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:209
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:210
msgid ":ref:`sphx_glr_packages_scikit-learn_auto_examples_plot_iris_knn.py`"
msgstr ":ref:`sphx_glr_packages_scikit-learn_auto_examples_plot_iris_knn.py`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:226
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:227
msgid ""
":ref:`sphx_glr_packages_scikit-"
"learn_auto_examples_plot_digits_simple_classif.py`"
msgstr ""
":ref:`sphx_glr_packages_scikit-"
"learn_auto_examples_plot_digits_simple_classif.py`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:243
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:244
msgid ":ref:`sphx_glr_packages_scikit-learn_auto_examples_plot_eigenfaces.py`"
msgstr ""
":ref:`sphx_glr_packages_scikit-learn_auto_examples_plot_eigenfaces.py`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:260
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:261
msgid ""
":ref:`sphx_glr_packages_scikit-learn_auto_examples_plot_svm_non_linear.py`"
msgstr ""
":ref:`sphx_glr_packages_scikit-learn_auto_examples_plot_svm_non_linear.py`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:277
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:278
msgid ""
":ref:`sphx_glr_packages_scikit-learn_auto_examples_plot_bias_variance.py`"
msgstr ""
":ref:`sphx_glr_packages_scikit-learn_auto_examples_plot_bias_variance.py`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:294
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:295
msgid ""
":ref:`sphx_glr_packages_scikit-learn_auto_examples_plot_ML_flow_chart.py`"
msgstr ""
":ref:`sphx_glr_packages_scikit-learn_auto_examples_plot_ML_flow_chart.py`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:337
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:338
msgid ""
":download:`Download all examples in Python source code: "
"auto_examples_python.zip </packages/scikit-"
"learn/auto_examples/auto_examples_python.zip>`"
msgstr ""
":download:`Download all examples in Python source code: "
"auto_examples_python.zip </packages/scikit-"
"learn/auto_examples/auto_examples_python.zip>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:341
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/index.rst:342
msgid ""
":download:`Download all examples in Jupyter notebooks: "
"auto_examples_jupyter.zip </packages/scikit-"
"learn/auto_examples/auto_examples_jupyter.zip>`"
msgstr ""
":download:`Download all examples in Jupyter notebooks: "
"auto_examples_jupyter.zip </packages/scikit-"
"learn/auto_examples/auto_examples_jupyter.zip>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_ML_flow_chart.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_packages_scikit-"
"learn_auto_examples_plot_ML_flow_chart.py>` to download the full example "
"code."
msgstr ""
":ref:`最後まで<sphx_glr_download_packages_scikit-"
"learn_auto_examples_plot_ML_flow_chart.py>` をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_ML_flow_chart.rst:22
msgid "Tutorial Diagrams"
msgstr "チュートリアルダイアグラム"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_ML_flow_chart.rst:24
msgid "This script plots the flow-charts used in the scikit-learn tutorials."
msgstr "このスクリプトは scikit-learn のチュートリアルで使用されるフローチャートをプロットします。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_ML_flow_chart.rst:200
msgid ""
":download:`Download Jupyter notebook: plot_ML_flow_chart.ipynb "
"<plot_ML_flow_chart.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plot_ML_flow_chart.ipynb "
"<plot_ML_flow_chart.ipynb>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_ML_flow_chart.rst:204
msgid ""
":download:`Download Python source code: plot_ML_flow_chart.py "
"<plot_ML_flow_chart.py>`"
msgstr ""
":download:`Download Python source code: plot_ML_flow_chart.py "
"<plot_ML_flow_chart.py>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_ML_flow_chart.rst:208
msgid ""
":download:`Download zipped: plot_ML_flow_chart.zip <plot_ML_flow_chart.zip>`"
msgstr ""
":download:`Download zipped: plot_ML_flow_chart.zip <plot_ML_flow_chart.zip>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_bias_variance.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_packages_scikit-"
"learn_auto_examples_plot_bias_variance.py>` to download the full example "
"code."
msgstr ""
":ref:`最後まで<sphx_glr_download_packages_scikit-"
"learn_auto_examples_plot_bias_variance.py>` をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_bias_variance.rst:23
msgid "Bias and variance of polynomial fit"
msgstr "多項式フィットのバイアスと分散"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_bias_variance.rst:25
msgid ""
"Demo overfitting, underfitting, and validation and learning curves with "
"polynomial regression."
msgstr "多項式回帰のオーバーフィット、アンダーフィット、検証、学習曲線のデモです。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_bias_variance.rst:28
msgid ""
"Fit polynomes of different degrees to a dataset: for too small a degree, the"
" model *underfits*, while for too large a degree, it overfits."
msgstr ""
"次数の異なる多項式をデータセットにフィットさせます。次数が小さすぎるとモデルは *アンダーフィット* し、次数が大きすぎるとオーバーフィットします。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_bias_variance.rst:48
msgid "A polynomial regression"
msgstr "多項回帰"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_bias_variance.rst:61
msgid "A simple figure to illustrate the problem"
msgstr "問題を説明するための簡単な図"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_bias_variance.rst:102
msgid "Generate a larger dataset"
msgstr "より大きなデータセットを作成します"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_bias_variance.rst:131
msgid "Plot a validation curve"
msgstr "検証曲線をプロットします"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_bias_variance.rst:169
msgid "Learning curves"
msgstr "学習曲線"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_bias_variance.rst:171
msgid "Plot train and test error with an increasing number of samples"
msgstr "サンプル数の増加に伴う訓練誤差とテスト誤差のプロット"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_bias_variance.rst:214
msgid ""
":download:`Download Jupyter notebook: plot_bias_variance.ipynb "
"<plot_bias_variance.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plot_bias_variance.ipynb "
"<plot_bias_variance.ipynb>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_bias_variance.rst:218
msgid ""
":download:`Download Python source code: plot_bias_variance.py "
"<plot_bias_variance.py>`"
msgstr ""
":download:`Download Python source code: plot_bias_variance.py "
"<plot_bias_variance.py>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_bias_variance.rst:222
msgid ""
":download:`Download zipped: plot_bias_variance.zip <plot_bias_variance.zip>`"
msgstr ""
":download:`Download zipped: plot_bias_variance.zip <plot_bias_variance.zip>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_california_prediction.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_packages_scikit-"
"learn_auto_examples_plot_california_prediction.py>` to download the full "
"example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_packages_scikit-"
"learn_auto_examples_plot_california_prediction.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_california_prediction.rst:22
msgid "A simple regression analysis on the California housing data"
msgstr "カリフォルニア州の住宅データに対する単純回帰分析"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_california_prediction.rst:24
msgid ""
"Here we perform a simple regression analysis on the California housing data,"
" exploring two types of regressors."
msgstr "ここでは，カリフォルニア州の住宅データについて，単純回帰分析を行い，2種類の回帰因子を探索します。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_california_prediction.rst:39
msgid "Print a histogram of the quantity to predict: price"
msgstr "予測する数量のヒストグラムを表示: 価格"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_california_prediction.rst:56
msgid "Print the join histogram for each feature"
msgstr "各特徴の結合ヒストグラムを表示します"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_california_prediction.rst:74
msgid "Simple prediction"
msgstr "単純な予測をします"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_california_prediction.rst:104
msgid "Prediction with gradient boosted tree"
msgstr "勾配ブースティング木による予測"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_california_prediction.rst:130
msgid "Print the error rate"
msgstr "エラー率を表示します"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_california_prediction.rst:151
msgid ""
":download:`Download Jupyter notebook: plot_california_prediction.ipynb "
"<plot_california_prediction.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plot_california_prediction.ipynb "
"<plot_california_prediction.ipynb>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_california_prediction.rst:155
msgid ""
":download:`Download Python source code: plot_california_prediction.py "
"<plot_california_prediction.py>`"
msgstr ""
":download:`Download Python source code: plot_california_prediction.py "
"<plot_california_prediction.py>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_california_prediction.rst:159
msgid ""
":download:`Download zipped: plot_california_prediction.zip "
"<plot_california_prediction.zip>`"
msgstr ""
":download:`Download zipped: plot_california_prediction.zip "
"<plot_california_prediction.zip>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_compare_classifiers.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_packages_scikit-"
"learn_auto_examples_plot_compare_classifiers.py>` to download the full "
"example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_packages_scikit-"
"learn_auto_examples_plot_compare_classifiers.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_compare_classifiers.rst:22
msgid "Compare classifiers on the digits data"
msgstr "ディジットのデータで分類子を比較"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_compare_classifiers.rst:24
msgid ""
"Compare the performance of a variety of classifiers on a test set for the "
"digits data."
msgstr "数字データのテストセットで、様々な分類器の性能を比較します。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_compare_classifiers.rst:78
msgid ""
":download:`Download Jupyter notebook: plot_compare_classifiers.ipynb "
"<plot_compare_classifiers.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plot_compare_classifiers.ipynb "
"<plot_compare_classifiers.ipynb>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_compare_classifiers.rst:82
msgid ""
":download:`Download Python source code: plot_compare_classifiers.py "
"<plot_compare_classifiers.py>`"
msgstr ""
":download:`Download Python source code: plot_compare_classifiers.py "
"<plot_compare_classifiers.py>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_compare_classifiers.rst:86
msgid ""
":download:`Download zipped: plot_compare_classifiers.zip "
"<plot_compare_classifiers.zip>`"
msgstr ""
":download:`Download zipped: plot_compare_classifiers.zip "
"<plot_compare_classifiers.zip>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_digits_simple_classif.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_packages_scikit-"
"learn_auto_examples_plot_digits_simple_classif.py>` to download the full "
"example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_packages_scikit-"
"learn_auto_examples_plot_digits_simple_classif.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_digits_simple_classif.rst:22
msgid "Simple visualization and classification of the digits dataset"
msgstr "数字データセットの簡単な視覚化と分類"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_digits_simple_classif.rst:24
msgid ""
"Plot the first few samples of the digits dataset and a 2D representation "
"built using PCA, then do a simple classification"
msgstr "数字データセットの最初の数サンプルと、PCAを使って作成した2次元表現をプロットし、簡単な分類を行います。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_digits_simple_classif.rst:40
msgid "Plot the data: images of digits"
msgstr "データのプロット: 数字の画像"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_digits_simple_classif.rst:42
msgid "Each data in a 8x8 image"
msgstr "8x8画像の各データ"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_digits_simple_classif.rst:64
msgid "Plot a projection on the 2 first principal axis"
msgstr "2つの第一主軸に投影図を描きます"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_digits_simple_classif.rst:85
msgid "Classify with Gaussian naive Bayes"
msgstr "Gaussian naive Bayesによる分類"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_digits_simple_classif.rst:126
msgid "Quantify the performance"
msgstr "パフォーマンスの定量化"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_digits_simple_classif.rst:128
msgid "First print the number of correct matches"
msgstr "最初に正しいマッチの数を表示します"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_digits_simple_classif.rst:139
msgid "The total number of data points"
msgstr "データポイントの総数"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_digits_simple_classif.rst:149
msgid "And now, the ration of correct predictions"
msgstr "そして、予想的中率です。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_digits_simple_classif.rst:160
msgid "Print the classification report"
msgstr "分類レポートを表示します"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_digits_simple_classif.rst:173
msgid "Print the confusion matrix"
msgstr "混同行列を表示します"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_digits_simple_classif.rst:192
msgid ""
":download:`Download Jupyter notebook: plot_digits_simple_classif.ipynb "
"<plot_digits_simple_classif.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plot_digits_simple_classif.ipynb "
"<plot_digits_simple_classif.ipynb>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_digits_simple_classif.rst:196
msgid ""
":download:`Download Python source code: plot_digits_simple_classif.py "
"<plot_digits_simple_classif.py>`"
msgstr ""
":download:`Download Python source code: plot_digits_simple_classif.py "
"<plot_digits_simple_classif.py>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_digits_simple_classif.rst:200
msgid ""
":download:`Download zipped: plot_digits_simple_classif.zip "
"<plot_digits_simple_classif.zip>`"
msgstr ""
":download:`Download zipped: plot_digits_simple_classif.zip "
"<plot_digits_simple_classif.zip>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_eigenfaces.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_packages_scikit-"
"learn_auto_examples_plot_eigenfaces.py>` to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_packages_scikit-"
"learn_auto_examples_plot_eigenfaces.py>` をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_eigenfaces.rst:22
msgid "The eigenfaces example: chaining PCA and SVMs"
msgstr "固有顔の例: PCAとSVMの連鎖"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_eigenfaces.rst:24
msgid ""
"The goal of this example is to show how an unsupervised method and a "
"supervised one can be chained for better prediction. It starts with a "
"didactic but lengthy way of doing things, and finishes with the idiomatic "
"approach to pipelining in scikit-learn."
msgstr ""
"この例のゴールは、教師なし手法と教師あり手法をどのように連鎖させればより良い予測ができるかを示すことです。 "
"教則的ですが長いやり方から始まり、scikit-learn のパイプラインへの慣用的なアプローチで終わります。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_eigenfaces.rst:29
msgid ""
"Here we'll take a look at a simple facial recognition example. Ideally, we "
"would use a dataset consisting of a subset of the `Labeled Faces in the Wild"
" <http://vis-www.cs.umass.edu/lfw/>`__ data that is available with "
":func:`sklearn.datasets.fetch_lfw_people`. However, this is a relatively "
"large download (~200MB) so we will do the tutorial on a simpler, less rich "
"dataset. Feel free to explore the LFW dataset."
msgstr ""
"ここでは簡単な顔認識の例を見てみましょう。 理想的には、 :func:`sklearn.datasets.fetch_lfw_people` "
"で利用可能な `Labeled Faces in the Wild <http://vis-www.cs.umass.edu/lfw/>`__ "
"データのサブセットからなるデータセットを使うことです。 "
"しかし、これは比較的大きなダウンロード（~200MB）なので、よりシンプルでリッチでないデータセットでチュートリアルを行うことにします。 "
"LFWのデータセットをご自由にご覧ください。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_eigenfaces.rst:49
msgid "Let's visualize these faces to see what we're working with"
msgstr "これらの顔を視覚化して、何を扱っているのかを見てみましょう"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_eigenfaces.rst:69
msgid ""
"Note is that these faces have already been localized and scaled to a common "
"size. This is an important preprocessing piece for facial recognition, and "
"is a process that can require a large collection of training data. This can "
"be done in scikit-learn, but the challenge is gathering a sufficient amount "
"of training data for the algorithm to work. Fortunately, this piece is "
"common enough that it has been done. One good resource is `OpenCV "
"<https://docs.opencv.org/2.4/modules/contrib/doc/facerec/facerec_tutorial.html>`__,"
" the *Open Computer Vision Library*."
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_eigenfaces.rst:79
msgid ""
"We'll perform a Support Vector classification of the images. We'll do a "
"typical train-test split on the images:"
msgstr "画像のサポートベクトル分類を行います。典型的な訓練とテストの分割を画像で行います:"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_eigenfaces.rst:99
msgid "Preprocessing: Principal Component Analysis"
msgstr "前処理: 主成分分析"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_eigenfaces.rst:101
msgid ""
"1850 dimensions is a lot for SVM. We can use PCA to reduce these 1850 "
"features to a manageable size, while maintaining most of the information in "
"the dataset."
msgstr ""
"SVMにとって1850次元は多いです。 "
"PCAを使えば、データセットの情報をほとんど維持したまま、1850の特徴を扱いやすいサイズに減らすことができます。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_eigenfaces.rst:118
msgid ""
"One interesting part of PCA is that it computes the \"mean\" face, which can"
" be interesting to examine:"
msgstr "PCAの面白いところは、\"平均 \"顔を計算することです、 そしてそれを調べるのは興味深いことです:"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_eigenfaces.rst:131
msgid ""
"The principal components measure deviations about this mean along orthogonal"
" axes."
msgstr "主成分は、直交する軸に沿って、この平均に関する偏差を測定します。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_eigenfaces.rst:144
msgid "It is also interesting to visualize these principal components:"
msgstr "これらの主成分を視覚化するのも興味深いです:"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_eigenfaces.rst:159
msgid ""
"The components (\"eigenfaces\") are ordered by their importance from top-"
"left to bottom-right. We see that the first few components seem to primarily"
" take care of lighting conditions; the remaining components pull out certain"
" identifying features: the nose, eyes, eyebrows, etc."
msgstr ""
"成分（\"固有顔\"）は、左上から右下に向かって重要度が高い順に並べられています。 "
"最初のいくつかのコンポーネントは、主に照明条件を管理しているようです; 残りのコンポーネントは、特定の識別機能を引き出します: 鼻、目、眉毛などです。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_eigenfaces.rst:164
msgid ""
"With this projection computed, we can now project our original training and "
"test data onto the PCA basis:"
msgstr "この射影が計算されたので、元の訓練データとテストデータをPCA基底に射影することができます:"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_eigenfaces.rst:185
msgid ""
"These projected components correspond to factors in a linear combination of "
"component images such that the combination approaches the original face."
msgstr "これらの投影された成分は、組み合わせが元の顔に近づくような成分画像の線形結合の因子に対応します。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_eigenfaces.rst:190
msgid "Doing the Learning: Support Vector Machines"
msgstr "学びを実践する: サポートベクターマシン"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_eigenfaces.rst:192
msgid ""
"Now we'll perform support-vector-machine classification on this reduced "
"dataset:"
msgstr "では、この縮小されたデータセットに対してサポートベクトルマシン分類を実行しましょう:"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_eigenfaces.rst:208
msgid ""
"Finally, we can evaluate how well this classification did. First, we might "
"plot a few of the test-cases with the labels learned from the training set:"
msgstr ""
"最後に、この分類がどの程度うまくいったかを評価することができます。まず、トレーニングセットから学習したラベルを使って、いくつかのテストケースをプロットしてみましょう:"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_eigenfaces.rst:230
msgid ""
"The classifier is correct on an impressive number of images given the "
"simplicity of its learning model! Using a linear classifier on 150 features "
"derived from the pixel-level data, the algorithm correctly identifies a "
"large number of the people in the images."
msgstr ""
"この分類器は、その学習モデルが単純であることを考えると、驚くほど多くの画像で正しいです！ "
"ピクセルレベルのデータから導き出された150の特徴に線形分類器を用いることで、このアルゴリズムは画像内の多数の人物を正しく識別しました。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_eigenfaces.rst:235
msgid ""
"Again, we can quantify this effectiveness using one of several measures from"
" :mod:`sklearn.metrics`. First we can do the classification report, which "
"shows the precision, recall and other measures of the \"goodness\" of the "
"classification:"
msgstr ""
"この効果も、 :mod:`sklearn.metrics` が提供するいくつかの指標のいずれかを使って定量化することができる。 "
"まず、分類レポートを作成し、精度、リコール、その他分類の \"良さ \"を示す尺度を表示します:"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_eigenfaces.rst:253
msgid ""
"Another interesting metric is the *confusion matrix*, which indicates how "
"often any two items are mixed-up. The confusion matrix of a perfect "
"classifier would only have nonzero entries on the diagonal, with zeros on "
"the off-diagonal:"
msgstr ""
"もう一つの興味深い指標は、 *混同行列* です、 これは、2つのアイテムが混在する頻度を示します。 "
"完全な分類器の混同行列は、対角線上に0でない項目のみを持ち、非対角線上に0を持ちます:"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_eigenfaces.rst:269
msgid "Pipelining"
msgstr "パイプライン"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_eigenfaces.rst:271
msgid ""
"Above we used PCA as a pre-processing step before applying our support "
"vector machine classifier. Plugging the output of one estimator directly "
"into the input of a second estimator is a commonly used pattern; for this "
"reason scikit-learn provides a ``Pipeline`` object which automates this "
"process. The above problem can be re-expressed as a pipeline as follows:"
msgstr ""
"上記では、サポートベクターマシン分類器を適用する前の前処理としてPCAを使用しました。 "
"1つの推定器の出力を2番目の推定器の入力に直接差し込むのは、よく使われるパターンです; そのため scikit-learn はこの処理を自動化する "
"``Pipeline`` オブジェクトを提供しています。 上記の問題は、次のようにパイプラインとして再表現できます:"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_eigenfaces.rst:302
msgid "A Note on Facial Recognition"
msgstr "顔認識に関するメモ"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_eigenfaces.rst:304
msgid ""
"Here we have used PCA \"eigenfaces\" as a pre-processing step for facial "
"recognition. The reason we chose this is because PCA is a broadly-applicable"
" technique, which can be useful for a wide array of data types. Research in "
"the field of facial recognition in particular, however, has shown that other"
" more specific feature extraction methods are can be much more effective."
msgstr ""
"ここでは、顔認識の前処理としてPCA \"固有顔\" を使用しました。 "
"これを選んだ理由は、PCAが広く適用可能な技法であり、さまざまな種類のデータに有効だからです。 "
"特に顔認識分野の研究、しかし、他のもっと特殊な特徴抽出法の方がはるかに効果的であることが示されています。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_eigenfaces.rst:320
msgid ""
":download:`Download Jupyter notebook: plot_eigenfaces.ipynb "
"<plot_eigenfaces.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plot_eigenfaces.ipynb "
"<plot_eigenfaces.ipynb>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_eigenfaces.rst:324
msgid ""
":download:`Download Python source code: plot_eigenfaces.py "
"<plot_eigenfaces.py>`"
msgstr ""
":download:`Download Python source code: plot_eigenfaces.py "
"<plot_eigenfaces.py>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_eigenfaces.rst:328
msgid ":download:`Download zipped: plot_eigenfaces.zip <plot_eigenfaces.zip>`"
msgstr ""
":download:`Download zipped: plot_eigenfaces.zip <plot_eigenfaces.zip>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_iris_knn.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_packages_scikit-"
"learn_auto_examples_plot_iris_knn.py>` to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_packages_scikit-"
"learn_auto_examples_plot_iris_knn.py>` をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_iris_knn.rst:22
msgid "Nearest-neighbor prediction on iris"
msgstr "虹彩の最近傍予測"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_iris_knn.rst:24
msgid ""
"Plot the decision boundary of nearest neighbor decision on iris, first with "
"a single nearest neighbor, and then using 3 nearest neighbors."
msgstr "虹彩の最近傍判定の判定境界をプロットします。最初は1つの最近傍を使用し、次に3つの最近傍を使用します。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_iris_knn.rst:58
msgid "Put the result into a color plot"
msgstr "結果をカラープロットにする"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_iris_knn.rst:78
msgid "And now, redo the analysis with 3 neighbors"
msgstr "そして今度は、3つの近傍を使って分析をやり直します。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_iris_knn.rst:111
msgid ""
":download:`Download Jupyter notebook: plot_iris_knn.ipynb "
"<plot_iris_knn.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plot_iris_knn.ipynb "
"<plot_iris_knn.ipynb>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_iris_knn.rst:115
msgid ""
":download:`Download Python source code: plot_iris_knn.py <plot_iris_knn.py>`"
msgstr ""
":download:`Download Python source code: plot_iris_knn.py <plot_iris_knn.py>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_iris_knn.rst:119
msgid ":download:`Download zipped: plot_iris_knn.zip <plot_iris_knn.zip>`"
msgstr ":download:`Download zipped: plot_iris_knn.zip <plot_iris_knn.zip>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_iris_scatter.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_packages_scikit-"
"learn_auto_examples_plot_iris_scatter.py>` to download the full example "
"code."
msgstr ""
":ref:`最後まで<sphx_glr_download_packages_scikit-"
"learn_auto_examples_plot_iris_scatter.py>` をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_iris_scatter.rst:22
msgid "Plot 2D views of the iris dataset"
msgstr "アヤメの花データセットの2Dビューをプロット"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_iris_scatter.rst:24
msgid "Plot a simple scatter plot of 2 features of the iris dataset."
msgstr "アヤメの花データセットの2つの特徴の単純な散布図をプロットします。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_iris_scatter.rst:26
msgid ""
"Note that more elaborate visualization of this dataset is detailed in the "
":ref:`statistics` chapter."
msgstr "なお、このデータセットのより精巧な視覚化については、 :ref:`statistics` 章に詳しいです。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_iris_scatter.rst:67
msgid ""
":download:`Download Jupyter notebook: plot_iris_scatter.ipynb "
"<plot_iris_scatter.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plot_iris_scatter.ipynb "
"<plot_iris_scatter.ipynb>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_iris_scatter.rst:71
msgid ""
":download:`Download Python source code: plot_iris_scatter.py "
"<plot_iris_scatter.py>`"
msgstr ""
":download:`Download Python source code: plot_iris_scatter.py "
"<plot_iris_scatter.py>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_iris_scatter.rst:75
msgid ""
":download:`Download zipped: plot_iris_scatter.zip <plot_iris_scatter.zip>`"
msgstr ""
":download:`Download zipped: plot_iris_scatter.zip <plot_iris_scatter.zip>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_linear_model_cv.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_packages_scikit-"
"learn_auto_examples_plot_linear_model_cv.py>` to download the full example "
"code."
msgstr ""
":ref:`最後まで<sphx_glr_download_packages_scikit-"
"learn_auto_examples_plot_linear_model_cv.py>` をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_linear_model_cv.rst:23
msgid "Use the RidgeCV and LassoCV to set the regularization parameter"
msgstr "RidgeCVとLassoCVを使用して正則化パラメータを設定する"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_linear_model_cv.rst:27
msgid "Load the diabetes dataset"
msgstr "糖尿病データセットをロードする"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_linear_model_cv.rst:42
msgid "Compute the cross-validation score with the default hyper-parameters"
msgstr "デフォルトのハイパーパラメータでクロスバリデーションのスコアを計算します。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_linear_model_cv.rst:58
msgid ""
"We compute the cross-validation score as a function of alpha, the strength "
"of the regularization for Lasso and Ridge"
msgstr "alphaの関数としてクロスバリデーションのスコアを計算します、 LassoとRidgeの正則化の強さ"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_linear_model_cv.rst:91
msgid ""
":download:`Download Jupyter notebook: plot_linear_model_cv.ipynb "
"<plot_linear_model_cv.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plot_linear_model_cv.ipynb "
"<plot_linear_model_cv.ipynb>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_linear_model_cv.rst:95
msgid ""
":download:`Download Python source code: plot_linear_model_cv.py "
"<plot_linear_model_cv.py>`"
msgstr ""
":download:`Download Python source code: plot_linear_model_cv.py "
"<plot_linear_model_cv.py>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_linear_model_cv.rst:99
msgid ""
":download:`Download zipped: plot_linear_model_cv.zip "
"<plot_linear_model_cv.zip>`"
msgstr ""
":download:`Download zipped: plot_linear_model_cv.zip "
"<plot_linear_model_cv.zip>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_linear_regression.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_packages_scikit-"
"learn_auto_examples_plot_linear_regression.py>` to download the full example"
" code."
msgstr ""
":ref:`最後まで<sphx_glr_download_packages_scikit-"
"learn_auto_examples_plot_linear_regression.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_linear_regression.rst:22
#: ../../scientific-python-lectures/packages/statistics/index.rst:451
msgid "A simple linear regression"
msgstr "単純な線形回帰"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_linear_regression.rst:71
msgid ""
":download:`Download Jupyter notebook: plot_linear_regression.ipynb "
"<plot_linear_regression.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plot_linear_regression.ipynb "
"<plot_linear_regression.ipynb>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_linear_regression.rst:75
msgid ""
":download:`Download Python source code: plot_linear_regression.py "
"<plot_linear_regression.py>`"
msgstr ""
":download:`Download Python source code: plot_linear_regression.py "
"<plot_linear_regression.py>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_linear_regression.rst:79
msgid ""
":download:`Download zipped: plot_linear_regression.zip "
"<plot_linear_regression.zip>`"
msgstr ""
":download:`Download zipped: plot_linear_regression.zip "
"<plot_linear_regression.zip>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_measuring_performance.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_packages_scikit-"
"learn_auto_examples_plot_measuring_performance.py>` to download the full "
"example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_packages_scikit-"
"learn_auto_examples_plot_measuring_performance.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_measuring_performance.rst:22
msgid "Measuring Decision Tree performance"
msgstr "決定木のパフォーマンス測定"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_measuring_performance.rst:24
msgid "Demonstrates overfit when testing on train set."
msgstr "学習セットでテストすると過学習を示します。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_measuring_performance.rst:28
msgid "Get the data"
msgstr "データを取得します"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_measuring_performance.rst:42
msgid "Train and test a model"
msgstr "モデルの訓練とテスト"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_measuring_performance.rst:58
msgid "Plot predicted as a function of expected"
msgstr "予想の関数として予想されるプロット"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_measuring_performance.rst:78
msgid "Pretty much no errors!"
msgstr "エラーはほとんどありません！"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_measuring_performance.rst:80
msgid ""
"This is too good to be true: we are testing the model on the train data, "
"which is not a measure of generalization."
msgstr "これは出来過ぎです: 訓練データでモデルをテストしています、 これは一般化の尺度ではありません。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_measuring_performance.rst:83
msgid "**The results are not valid**"
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_measuring_performance.rst:94
msgid ""
":download:`Download Jupyter notebook: plot_measuring_performance.ipynb "
"<plot_measuring_performance.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plot_measuring_performance.ipynb "
"<plot_measuring_performance.ipynb>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_measuring_performance.rst:98
msgid ""
":download:`Download Python source code: plot_measuring_performance.py "
"<plot_measuring_performance.py>`"
msgstr ""
":download:`Download Python source code: plot_measuring_performance.py "
"<plot_measuring_performance.py>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_measuring_performance.rst:102
msgid ""
":download:`Download zipped: plot_measuring_performance.zip "
"<plot_measuring_performance.zip>`"
msgstr ""
":download:`Download zipped: plot_measuring_performance.zip "
"<plot_measuring_performance.zip>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_pca.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_packages_scikit-"
"learn_auto_examples_plot_pca.py>` to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_packages_scikit-"
"learn_auto_examples_plot_pca.py>` をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_pca.rst:23
msgid "Demo PCA in 2D"
msgstr "2次元PCAのデモ"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_pca.rst:27
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_tsne.rst:33
msgid "Load the iris data"
msgstr "アヤメの花データを読み込みます"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_pca.rst:42
msgid "Fit a PCA"
msgstr "PCAに合わせます"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_pca.rst:56
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_tsne.rst:62
msgid "Project the data in 2D"
msgstr "データを2Dで投影します"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_pca.rst:67
#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_tsne.rst:73
msgid "Visualize the data"
msgstr "データを視覚化します"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_pca.rst:92
msgid ":download:`Download Jupyter notebook: plot_pca.ipynb <plot_pca.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plot_pca.ipynb <plot_pca.ipynb>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_pca.rst:96
msgid ":download:`Download Python source code: plot_pca.py <plot_pca.py>`"
msgstr ":download:`Download Python source code: plot_pca.py <plot_pca.py>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_pca.rst:100
msgid ":download:`Download zipped: plot_pca.zip <plot_pca.zip>`"
msgstr ":download:`Download zipped: plot_pca.zip <plot_pca.zip>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_polynomial_regression.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_packages_scikit-"
"learn_auto_examples_plot_polynomial_regression.py>` to download the full "
"example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_packages_scikit-"
"learn_auto_examples_plot_polynomial_regression.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_polynomial_regression.rst:22
msgid "Plot fitting a 9th order polynomial"
msgstr "9次の多項式にフィッティングするプロット"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_polynomial_regression.rst:24
msgid ""
"Fits data generated from a 9th order polynomial with model of 4th order and "
"9th order polynomials, to demonstrate that often simpler models are to be "
"preferred"
msgstr "9次の多項式から生成されたデータを、4次と9次の多項式のモデルでフィットさせ、より単純なモデルが好まれることが多いことを示します。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_polynomial_regression.rst:55
msgid "The data"
msgstr "データ"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_polynomial_regression.rst:67
msgid "Fitting 4th and 9th order polynomials"
msgstr "4次および9次多項式のフィッティング"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_polynomial_regression.rst:69
msgid "For this we need to engineer features: the n_th powers of x:"
msgstr "そのために必要なのは、機能をエンジニアすることです: xのn乗:"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_polynomial_regression.rst:97
msgid "Ground truth"
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_polynomial_regression.rst:120
msgid ""
":download:`Download Jupyter notebook: plot_polynomial_regression.ipynb "
"<plot_polynomial_regression.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plot_polynomial_regression.ipynb "
"<plot_polynomial_regression.ipynb>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_polynomial_regression.rst:124
msgid ""
":download:`Download Python source code: plot_polynomial_regression.py "
"<plot_polynomial_regression.py>`"
msgstr ""
":download:`Download Python source code: plot_polynomial_regression.py "
"<plot_polynomial_regression.py>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_polynomial_regression.rst:128
msgid ""
":download:`Download zipped: plot_polynomial_regression.zip "
"<plot_polynomial_regression.zip>`"
msgstr ""
":download:`Download zipped: plot_polynomial_regression.zip "
"<plot_polynomial_regression.zip>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_separator.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_packages_scikit-"
"learn_auto_examples_plot_separator.py>` to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_packages_scikit-"
"learn_auto_examples_plot_separator.py>` をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_separator.rst:22
msgid "Simple picture of the formal problem of machine learning"
msgstr "機械学習の形式的問題の単純なイメージ"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_separator.rst:24
msgid ""
"This example generates simple synthetic data ploints and shows a separating "
"hyperplane on them."
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_separator.rst:77
msgid ""
":download:`Download Jupyter notebook: plot_separator.ipynb "
"<plot_separator.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plot_separator.ipynb "
"<plot_separator.ipynb>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_separator.rst:81
msgid ""
":download:`Download Python source code: plot_separator.py "
"<plot_separator.py>`"
msgstr ""
":download:`Download Python source code: plot_separator.py "
"<plot_separator.py>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_separator.rst:85
msgid ":download:`Download zipped: plot_separator.zip <plot_separator.zip>`"
msgstr ":download:`Download zipped: plot_separator.zip <plot_separator.zip>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_svm_non_linear.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_packages_scikit-"
"learn_auto_examples_plot_svm_non_linear.py>` to download the full example "
"code."
msgstr ""
":ref:`最後まで<sphx_glr_download_packages_scikit-"
"learn_auto_examples_plot_svm_non_linear.py>` をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_svm_non_linear.rst:22
msgid "Example of linear and non-linear models"
msgstr "線形モデルと非線形モデルの例"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_svm_non_linear.rst:24
msgid ""
"This is an example plot from the tutorial which accompanies an explanation "
"of the support vector machine GUI."
msgstr "これは、サポートベクターマシンのGUIの説明に付随するチュートリアルのプロット例です。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_svm_non_linear.rst:43
msgid "data that is linearly separable"
msgstr "線形分離可能なデータ"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_svm_non_linear.rst:98
msgid "data with a non-linear separation"
msgstr "非線形分離のデータ"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_svm_non_linear.rst:172
msgid ""
":download:`Download Jupyter notebook: plot_svm_non_linear.ipynb "
"<plot_svm_non_linear.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plot_svm_non_linear.ipynb "
"<plot_svm_non_linear.ipynb>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_svm_non_linear.rst:176
msgid ""
":download:`Download Python source code: plot_svm_non_linear.py "
"<plot_svm_non_linear.py>`"
msgstr ""
":download:`Download Python source code: plot_svm_non_linear.py "
"<plot_svm_non_linear.py>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_svm_non_linear.rst:180
msgid ""
":download:`Download zipped: plot_svm_non_linear.zip "
"<plot_svm_non_linear.zip>`"
msgstr ""
":download:`Download zipped: plot_svm_non_linear.zip "
"<plot_svm_non_linear.zip>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_tsne.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_packages_scikit-"
"learn_auto_examples_plot_tsne.py>` to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_packages_scikit-"
"learn_auto_examples_plot_tsne.py>` をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_tsne.rst:23
msgid "tSNE to visualize digits"
msgstr "数字を可視化する tSNE"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_tsne.rst:25
msgid ""
"Here we use :class:`sklearn.manifold.TSNE` to visualize the digits datasets."
" Indeed, the digits are vectors in a 8*8 = 64 dimensional space. We want to "
"project them in 2D for visualization. tSNE is often a good solution, as it "
"groups and separates data points based on their local relationship."
msgstr ""
"ここでは、 :class:`sklearn.manifold.TSNE` "
"を使って数字データセットを可視化します。実際、数字は8*8=64次元空間のベクトルです。 それを2Dで投影して視覚化したいです。 "
"tSNEは、データ点をその局所的な関係に基づいてグループ化し、分離するため、しばしば良い解決策となります。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_tsne.rst:49
msgid "Fit and transform with a TSNE"
msgstr "TSNEでフィットとトランスフォーム"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_tsne.rst:99
msgid ""
":download:`Download Jupyter notebook: plot_tsne.ipynb <plot_tsne.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plot_tsne.ipynb <plot_tsne.ipynb>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_tsne.rst:103
msgid ":download:`Download Python source code: plot_tsne.py <plot_tsne.py>`"
msgstr ":download:`Download Python source code: plot_tsne.py <plot_tsne.py>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_tsne.rst:107
msgid ":download:`Download zipped: plot_tsne.zip <plot_tsne.zip>`"
msgstr ":download:`Download zipped: plot_tsne.zip <plot_tsne.zip>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_variance_linear_regr.rst:13
msgid ""
":ref:`Go to the end <sphx_glr_download_packages_scikit-"
"learn_auto_examples_plot_variance_linear_regr.py>` to download the full "
"example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_packages_scikit-"
"learn_auto_examples_plot_variance_linear_regr.py>` "
"をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_variance_linear_regr.rst:23
msgid "Plot variance and regularization in linear models"
msgstr "線形モデルにおけるプロット分散と正則化"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_variance_linear_regr.rst:40
msgid "We consider the situation where we have only 2 data point"
msgstr "データポイントが2つしかない場合を考えます"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_variance_linear_regr.rst:53
msgid "Without noise, as linear regression fits the data perfectly"
msgstr "ノイズがなければ、線形回帰はデータに完全にフィットします。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_variance_linear_regr.rst:69
msgid ""
"In real life situation, we have noise (e.g. measurement noise) in our data:"
msgstr "現実の状況では、データにノイズ (例えば測定ノイズなど) が含まれます:"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_variance_linear_regr.rst:85
msgid ""
"As we can see, our linear model captures and amplifies the noise in the "
"data. It displays a lot of variance."
msgstr "見てわかるように、この線形モデルはデータのノイズをとらえ、増幅しています。 多くの分散を表示しています。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_variance_linear_regr.rst:88
msgid ""
"We can use another linear estimator that uses regularization, the "
":class:`~sklearn.linear_model.Ridge` estimator. This estimator regularizes "
"the coefficients by shrinking them to zero, under the assumption that very "
"high correlations are often spurious. The alpha parameter controls the "
"amount of shrinkage used."
msgstr ""
"正則化を用いる別の線形推定器、 :class:`~sklearn.linear_model.Ridge` 推定器を用いることができます。 "
"この推定量は、非常に高い相関は多くの場合あやしいという仮定の下で、係数をゼロに縮小することによって正則化します。alphaパラメータは、使用する収縮量を制御します。"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_variance_linear_regr.rst:118
msgid ""
":download:`Download Jupyter notebook: plot_variance_linear_regr.ipynb "
"<plot_variance_linear_regr.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plot_variance_linear_regr.ipynb "
"<plot_variance_linear_regr.ipynb>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_variance_linear_regr.rst:122
msgid ""
":download:`Download Python source code: plot_variance_linear_regr.py "
"<plot_variance_linear_regr.py>`"
msgstr ""
":download:`Download Python source code: plot_variance_linear_regr.py "
"<plot_variance_linear_regr.py>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/plot_variance_linear_regr.rst:126
msgid ""
":download:`Download zipped: plot_variance_linear_regr.zip "
"<plot_variance_linear_regr.zip>`"
msgstr ""
":download:`Download zipped: plot_variance_linear_regr.zip "
"<plot_variance_linear_regr.zip>`"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:9
msgid ""
"**00:00.000** total execution time for 17 files **from packages/scikit-"
"learn/auto_examples**:"
msgstr ""
"**00:00.000** total execution time for 17 files **from packages/scikit-"
"learn/auto_examples**:"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:35
msgid ""
":ref:`sphx_glr_packages_scikit-learn_auto_examples_plot_ML_flow_chart.py` "
"(``plot_ML_flow_chart.py``)"
msgstr ""
":ref:`sphx_glr_packages_scikit-learn_auto_examples_plot_ML_flow_chart.py` "
"(``plot_ML_flow_chart.py``)"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:38
msgid ""
":ref:`sphx_glr_packages_scikit-learn_auto_examples_plot_bias_variance.py` "
"(``plot_bias_variance.py``)"
msgstr ""
":ref:`sphx_glr_packages_scikit-learn_auto_examples_plot_bias_variance.py` "
"(``plot_bias_variance.py``)"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:41
msgid ""
":ref:`sphx_glr_packages_scikit-"
"learn_auto_examples_plot_california_prediction.py` "
"(``plot_california_prediction.py``)"
msgstr ""
":ref:`sphx_glr_packages_scikit-"
"learn_auto_examples_plot_california_prediction.py` "
"(``plot_california_prediction.py``)"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:44
msgid ""
":ref:`sphx_glr_packages_scikit-"
"learn_auto_examples_plot_compare_classifiers.py` "
"(``plot_compare_classifiers.py``)"
msgstr ""
":ref:`sphx_glr_packages_scikit-"
"learn_auto_examples_plot_compare_classifiers.py` "
"(``plot_compare_classifiers.py``)"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:47
msgid ""
":ref:`sphx_glr_packages_scikit-"
"learn_auto_examples_plot_digits_simple_classif.py` "
"(``plot_digits_simple_classif.py``)"
msgstr ""
":ref:`sphx_glr_packages_scikit-"
"learn_auto_examples_plot_digits_simple_classif.py` "
"(``plot_digits_simple_classif.py``)"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:50
msgid ""
":ref:`sphx_glr_packages_scikit-learn_auto_examples_plot_eigenfaces.py` "
"(``plot_eigenfaces.py``)"
msgstr ""
":ref:`sphx_glr_packages_scikit-learn_auto_examples_plot_eigenfaces.py` "
"(``plot_eigenfaces.py``)"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:53
msgid ""
":ref:`sphx_glr_packages_scikit-learn_auto_examples_plot_iris_knn.py` "
"(``plot_iris_knn.py``)"
msgstr ""
":ref:`sphx_glr_packages_scikit-learn_auto_examples_plot_iris_knn.py` "
"(``plot_iris_knn.py``)"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:56
msgid ""
":ref:`sphx_glr_packages_scikit-learn_auto_examples_plot_iris_scatter.py` "
"(``plot_iris_scatter.py``)"
msgstr ""
":ref:`sphx_glr_packages_scikit-learn_auto_examples_plot_iris_scatter.py` "
"(``plot_iris_scatter.py``)"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:59
msgid ""
":ref:`sphx_glr_packages_scikit-learn_auto_examples_plot_linear_model_cv.py` "
"(``plot_linear_model_cv.py``)"
msgstr ""
":ref:`sphx_glr_packages_scikit-learn_auto_examples_plot_linear_model_cv.py` "
"(``plot_linear_model_cv.py``)"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:62
msgid ""
":ref:`sphx_glr_packages_scikit-"
"learn_auto_examples_plot_linear_regression.py` "
"(``plot_linear_regression.py``)"
msgstr ""
":ref:`sphx_glr_packages_scikit-"
"learn_auto_examples_plot_linear_regression.py` "
"(``plot_linear_regression.py``)"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:65
msgid ""
":ref:`sphx_glr_packages_scikit-"
"learn_auto_examples_plot_measuring_performance.py` "
"(``plot_measuring_performance.py``)"
msgstr ""
":ref:`sphx_glr_packages_scikit-"
"learn_auto_examples_plot_measuring_performance.py` "
"(``plot_measuring_performance.py``)"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:68
msgid ""
":ref:`sphx_glr_packages_scikit-learn_auto_examples_plot_pca.py` "
"(``plot_pca.py``)"
msgstr ""
":ref:`sphx_glr_packages_scikit-learn_auto_examples_plot_pca.py` "
"(``plot_pca.py``)"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:71
msgid ""
":ref:`sphx_glr_packages_scikit-"
"learn_auto_examples_plot_polynomial_regression.py` "
"(``plot_polynomial_regression.py``)"
msgstr ""
":ref:`sphx_glr_packages_scikit-"
"learn_auto_examples_plot_polynomial_regression.py` "
"(``plot_polynomial_regression.py``)"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:74
msgid ""
":ref:`sphx_glr_packages_scikit-learn_auto_examples_plot_separator.py` "
"(``plot_separator.py``)"
msgstr ""
":ref:`sphx_glr_packages_scikit-learn_auto_examples_plot_separator.py` "
"(``plot_separator.py``)"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:77
msgid ""
":ref:`sphx_glr_packages_scikit-learn_auto_examples_plot_svm_non_linear.py` "
"(``plot_svm_non_linear.py``)"
msgstr ""
":ref:`sphx_glr_packages_scikit-learn_auto_examples_plot_svm_non_linear.py` "
"(``plot_svm_non_linear.py``)"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:80
msgid ""
":ref:`sphx_glr_packages_scikit-learn_auto_examples_plot_tsne.py` "
"(``plot_tsne.py``)"
msgstr ""
":ref:`sphx_glr_packages_scikit-learn_auto_examples_plot_tsne.py` "
"(``plot_tsne.py``)"

#: ../../scientific-python-lectures/packages/scikit-learn/auto_examples/sg_execution_times.rst:83
msgid ""
":ref:`sphx_glr_packages_scikit-"
"learn_auto_examples_plot_variance_linear_regr.py` "
"(``plot_variance_linear_regr.py``)"
msgstr ""
":ref:`sphx_glr_packages_scikit-"
"learn_auto_examples_plot_variance_linear_regr.py` "
"(``plot_variance_linear_regr.py``)"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:5
msgid "scikit-learn: machine learning in Python"
msgstr "scikit-learn: Pythonで機械学習"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:7
msgid "**Authors**: *Gael Varoquaux*"
msgstr "**著者**: *Gael Varoquaux*"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:5
msgid "Prerequisites"
msgstr "前提条件"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:17
msgid ":ref:`numpy <numpy>`"
msgstr ":ref:`numpy <numpy>`"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:18
msgid ":ref:`scipy <scipy>`"
msgstr ":ref:`scipy <scipy>`"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:19
msgid ":ref:`matplotlib (optional) <matplotlib>`"
msgstr ":ref:`matplotlib (オプション) <matplotlib>`"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:20
msgid ":ref:`ipython (the enhancements come handy) <interactive_work>`"
msgstr ":ref:`ipython (機能拡張は便利) <interactive_work>`"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst-1
msgid "**Acknowledgements**"
msgstr "**謝辞**"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:24
msgid ""
"This chapter is adapted from `a tutorial "
"<https://www.youtube.com/watch?v=r4bRUvvlaBw>`__ given by Gaël Varoquaux, "
"Jake Vanderplas, Olivier Grisel."
msgstr ""
"この章は、Gaël Varoquaux、Jake Vanderplas、Olivier Griselによる `チュートリアル "
"<https://www.youtube.com/watch?v=r4bRUvvlaBw>`__ から抜粋したものである。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:28
msgid "**Data science in Python**"
msgstr "**Pythonでデータサイエンス**"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:30
msgid ""
"The :ref:`statistics` chapter may also be of interest for readers looking "
"into machine learning."
msgstr ":ref:`statistics` の章は、機械学習を研究している読者にとっても興味深いものでしょう。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:33
msgid ""
"The `documentation of scikit-learn <https://scikit-learn.org>`_ is very "
"complete and didactic."
msgstr ""
"`documentation of scikit-learn <https://scikit-learn.org>`_ "
"は非常に完成度が高く、教訓的です。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:48
msgid "Introduction: problem settings"
msgstr "はじめに: 問題設定"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:51
msgid "What is machine learning?"
msgstr "機械学習とは何か？"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:55
msgid ""
"Machine Learning is about building programs with **tunable parameters** that"
" are adjusted automatically so as to improve their behavior by **adapting to"
" previously seen data.**"
msgstr ""
"機械学習とは、 **調整可能なパラメータ** を持つプログラムを構築することであり、そのプログラムは、 **過去に見たデータに適応することによって** "
"、動作を改善するように自動的に調整されます。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:59
msgid ""
"Machine Learning can be considered a subfield of **Artificial Intelligence**"
" since those algorithms can be seen as building blocks to make computers "
"learn to behave more intelligently by somehow **generalizing** rather that "
"just storing and retrieving data items like a database system would do."
msgstr ""
"機械学習は、 **人工知能** "
"のサブフィールドと考えることができます。なぜなら、これらのアルゴリズムは、データベースシステムが行うようなデータ項目の保存と検索を行うだけでなく、何らかの方法で"
" **一般化** することによって、より知的な振る舞いをコンピュータに学習させるためのビルディングブロックと考えることができるからです。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:70
msgid "A classification problem"
msgstr "分類問題"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:72
msgid ""
"We'll take a look at two very simple machine learning tasks here. The first "
"is a **classification** task: the figure shows a collection of two-"
"dimensional data, colored according to two different class labels. A "
"classification algorithm may be used to draw a dividing boundary between the"
" two clusters of points:"
msgstr ""
"ここでは2つの非常に単純な機械学習タスクを見てみましょう。 1つ目は、 **分類** タスクです: "
"図は、2つの異なるクラスラベルに従って色分けされた2次元データの集合を示しています。 "
"分類アルゴリズムは、2つの点のクラスター間の境界線を引くために使うことができます:"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:78
msgid ""
"By drawing this separating line, we have learned a model which can "
"**generalize** to new data: if you were to drop another point onto the plane"
" which is unlabeled, this algorithm could now **predict** whether it's a "
"blue or a red point."
msgstr ""
"この分離線を引くことで、新しいデータに **汎化** できるモデルを学習したことになります: "
"もしラベルのない平面に別の点を落とすとしたら、このアルゴリズムはその点が青か赤かを **予測** することができます。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:92
msgid "A regression problem"
msgstr "回帰問題"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:96
msgid ""
"The next simple task we'll look at is a **regression** task: a simple best-"
"fit line to a set of data."
msgstr "次の簡単なタスクは、 **回帰** タスクです: データ集合の単純なベストフィットの直線。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:99
msgid ""
"Again, this is an example of fitting a model to data, but our focus here is "
"that the model can make generalizations about new data. The model has been "
"**learned** from the training data, and can be used to predict the result of"
" test data: here, we might be given an x-value, and the model would allow us"
" to predict the y value."
msgstr ""
"繰り返しますが、これはモデルをデータに当てはめる例ですが、ここでの焦点は、モデルが新しいデータについて一般化を行うことができるということです。 "
"モデルは学習データから **学習** され、テストデータの結果を予測するために使われます: "
"ここでは、x値が与えられ、モデルによってy値を予測することができます。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:106
msgid "Data in scikit-learn"
msgstr "scikit-learnのデータ"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:109
msgid "The data matrix"
msgstr "データマトリックス"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:111
msgid ""
"Machine learning algorithms implemented in scikit-learn expect data to be "
"stored in a **two-dimensional array or matrix**. The arrays can be either "
"``numpy`` arrays, or in some cases ``scipy.sparse`` matrices. The size of "
"the array is expected to be ``[n_samples, n_features]``"
msgstr ""
"scikit-learnで実装されている機械学習アルゴリズムは、データが **2次元の配列または行列** に格納されていることを期待します。 配列は "
"``numpy`` 配列か、場合によっては ``scipy.sparse`` 行列です。配列のサイズは ``[n_samples, "
"n_features]`` となります。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:116
msgid ""
"**n\\_samples:** The number of samples: each sample is an item to process "
"(e.g. classify). A sample can be a document, a picture, a sound, a video, an"
" astronomical object, a row in database or CSV file, or whatever you can "
"describe with a fixed set of quantitative traits."
msgstr ""
"**n\\_samples:** サンプルの数: 各サンプルは、 (分類などの) 処理をする項目です。 "
"サンプルは、文書、画像、サウンド、ビデオ、天体、データベースやCSVファイルの行、または定量的な特徴の固定セットで記述できるものであれば何でもかまいません。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:121
msgid ""
"**n\\_features:** The number of features or distinct traits that can be used"
" to describe each item in a quantitative manner. Features are generally "
"real-valued, but may be boolean or discrete-valued in some cases."
msgstr ""
"**n\\_features:** 各項目を定量的に記述するために使用できる特徴または明確な形質の数。 "
"特徴は一般に実数値ですが、場合によってはブーリアン値や離散値であることもあります。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:128
msgid ""
"The number of features must be fixed in advance. However it can be very high"
" dimensional (e.g. millions of features) with most of them being zeros for a"
" given sample. This is a case where ``scipy.sparse`` matrices can be useful,"
" in that they are much more memory-efficient than NumPy arrays."
msgstr ""
"特徴の数はあらかじめ決まっていなければなりません。 しかし、それは非常に高次元 (例えば数百万の特徴量) "
"である可能性があり、与えられたサンプルに対してそのほとんどがゼロである可能性があります。 このような場合に ``scipy.sparse`` "
"行列が役に立ちます。これは、NumPyの配列よりもはるかにメモリ効率がよいからです。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:135
msgid "A Simple Example: the Iris Dataset"
msgstr "簡単な例: アヤメの花データセット"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:138
msgid "The application problem"
msgstr "アプリケーションの問題"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:140
msgid ""
"As an example of a simple dataset, let us a look at the iris data stored by "
"scikit-learn. Suppose we want to recognize species of irises. The data "
"consists of measurements of three different species of irises:"
msgstr ""
"単純なデータセットの例として、 scikit-learn "
"が保存しているアヤメのデータを見てみましょう。アヤメの種類を認識したいとします。データは3つの異なる種類のアヤメの測定値からなります:"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:152
msgid "|setosa_picture|"
msgstr "|setosa_picture|"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:145
msgid "setosa_picture"
msgstr "setosa_picture"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:152
msgid "|versicolor_picture|"
msgstr "|versicolor_picture|"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:147
msgid "versicolor_picture"
msgstr "versicolor_picture"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:152
msgid "|virginica_picture|"
msgstr "|virginica_picture|"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:149
msgid "virginica_picture"
msgstr "virginica_picture"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:154
msgid "Setosa Iris"
msgstr "ヒオウギアヤメ"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:154
msgid "Versicolor Iris"
msgstr "ブルーフラッグ"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:154
msgid "Virginica Iris"
msgstr "バージニアアイリス"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst-1
msgid "**Quick Question:**"
msgstr "**簡単な質問:**"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:161
msgid ""
"**If we want to design an algorithm to recognize iris species, what might "
"the data be?**"
msgstr "**アヤメの花の種類を認識するアルゴリズムを設計する場合、どのようなデータが考えられるでしょう？**"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:164
msgid "Remember: we need a 2D array of size ``[n_samples x n_features]``."
msgstr "覚えておいてほしいのは:  ``[n_samples x n_features]`` サイズの2次元配列が必要だということです。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:166
msgid "What would the ``n_samples`` refer to?"
msgstr "``n_samples`` は何を指すのでしょうか？"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:168
msgid "What might the ``n_features`` refer to?"
msgstr "``n_features`` は何を指すのでしょうか？"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:170
msgid ""
"Remember that there must be a **fixed** number of features for each sample, "
"and feature number ``i`` must be a similar kind of quantity for each sample."
msgstr ""
"各サンプルには **固定** 個の特徴がなければならず、特徴番号 ``i`` は各サンプルで同種の量でなければならないことを覚えておいてください。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:175
msgid "Loading the Iris Data with Scikit-learn"
msgstr "scikit-learnでアヤメの花データを読み込む"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:177
msgid ""
"Scikit-learn has a very straightforward set of data on these iris species. "
"The data consist of the following:"
msgstr "Scikit-learnには、これらのアヤメの種に関する非常にわかりやすいデータセットがあります。データの構成は以下の通りです:"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:180
msgid "Features in the Iris dataset:"
msgstr "アヤメの花データセットの特徴:"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:184
msgid "sepal length (cm)"
msgstr "がく片長さ (cm)"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:185
msgid "sepal width (cm)"
msgstr "がく片幅 (cm)"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:186
msgid "petal length (cm)"
msgstr "花弁の長さ (cm)"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:187
msgid "petal width (cm)"
msgstr "花弁の幅 (cm)"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:189
msgid "Target classes to predict:"
msgstr "予測する対象クラス:"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:193
msgid "Setosa"
msgstr "ヒオウギ"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:194
msgid "Versicolour"
msgstr "ブルーフラッグ"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:195
msgid "Virginica"
msgstr "バージニア"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:197
msgid ""
":mod:`scikit-learn` embeds a copy of the iris CSV file along with a function"
" to load it into NumPy arrays::"
msgstr ":mod:`scikit-learn` は、アヤメのCSVファイルのコピーと、それをNumPyの配列にロードする関数を埋め込んでいます::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:205
msgid ""
"**Import sklearn** Note that scikit-learn is imported as :mod:`sklearn`"
msgstr ""
"**sklearn をインポートします** scikit-learnは :mod:`sklearn` としてインポートされることに注意してください。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:207
msgid ""
"The features of each sample flower are stored in the ``data`` attribute of "
"the dataset::"
msgstr "各サンプルの花の特徴は、データセットの ``data`` 属性に格納されます::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:220
msgid ""
"The information about the class of each sample is stored in the ``target`` "
"attribute of the dataset::"
msgstr "各サンプルのクラスに関する情報は、データセットの ``target`` 属性に格納される::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:232
msgid ""
"The names of the classes are stored in the last attribute, namely "
"``target_names``::"
msgstr "クラス名は最後の属性である ``target_names`` に格納されます::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:238
msgid ""
"This data is four-dimensional, but we can visualize two of the dimensions at"
" a time using a scatter plot:"
msgstr "このデータは4次元ですが、散布図を使って一度に2つの次元を視覚化できます:"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst-1
msgid "**Exercise**:"
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:248
msgid ""
"Can you choose 2 features to find a plot where it is easier to separate the "
"different classes of irises?"
msgstr "アヤメの異なるクラスを分けるのがより簡単なプロットを見つけるために、2つの特徴を選ぶことができますか？"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:251
msgid ""
"**Hint**: click on the figure above to see the code that generates it, and "
"modify this code."
msgstr "**ヒント**: 上の図をクリックすると、それを生成するコードが表示されるので、このコードを修正してください。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:256
msgid "Basic principles of machine learning with scikit-learn"
msgstr "scikit-learnによる機械学習の基本原理"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:259
msgid "Introducing the scikit-learn estimator object"
msgstr "scikit-learnのestimatorオブジェクトの紹介"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:261
msgid ""
"Every algorithm is exposed in scikit-learn via an ''Estimator'' object. For "
"instance a linear regression is: "
":class:`sklearn.linear_model.LinearRegression` ::"
msgstr ""
"scikit-learn ではすべてのアルゴリズムが ''Estimator'' オブジェクトを通して公開されます。 "
"例えば線形回帰は次のようになります: :class:`sklearn.linear_model.LinearRegression` ::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:266
msgid ""
"**Estimator parameters**: All the parameters of an estimator can be set when"
" it is instantiated::"
msgstr "**推定パラメータ**: 推定量のすべてのパラメータはインスタンス化時に設定できます::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:274
msgid "Fitting on data"
msgstr "データへのフィッティング"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:276
msgid "Let's create some simple data with :ref:`numpy <numpy>`::"
msgstr ":ref:`numpy <numpy>` で簡単なデータを作ってみましょう::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:291
msgid ""
"**Estimated parameters**: When data is fitted with an estimator, parameters "
"are estimated from the data at hand. All the estimated parameters are "
"attributes of the estimator object ending by an underscore::"
msgstr ""
"**推定パラメータ**: "
"データに推定量を当てはめる場合、手元のデータからパラメータが推定されます。推定されたパラメータはすべてestimatorオブジェクトの属性であり、アンダースコアで終わります::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:300
msgid "Supervised Learning: Classification and regression"
msgstr "教師あり学習: 分類と回帰"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:302
msgid ""
"In **Supervised Learning**, we have a dataset consisting of both features "
"and labels. The task is to construct an estimator which is able to predict "
"the label of an object given the set of features. A relatively simple "
"example is predicting the species of iris given a set of measurements of its"
" flower. This is a relatively simple task. Some more complicated examples "
"are:"
msgstr ""
"**教師あり学習** "
"では、特徴量とラベルの両方からなるデータセットがあります。課題は、特徴量の集合が与えられたときに、オブジェクトのラベルを予測できる推定器を構築することです。"
" 比較的単純な例として、アヤメの花の測定値の集合からアヤメの種類を予測することができます。 これは比較的単純な作業です。もっと複雑な例としては:"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:309
msgid ""
"given a multicolor image of an object through a telescope, determine whether"
" that object is a star, a quasar, or a galaxy."
msgstr "望遠鏡を通した天体の多色画像が与えられたら、その天体が恒星、クエーサー、銀河のどれであるかを判断する。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:311
msgid "given a photograph of a person, identify the person in the photo."
msgstr "人物の写真が与えられたら、写真に写っている人物を特定する。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:312
msgid ""
"given a list of movies a person has watched and their personal rating of the"
" movie, recommend a list of movies they would like (So-called *recommender "
"systems*: a famous example is the `Netflix Prize "
"<https://en.wikipedia.org/wiki/Netflix_prize>`__)."
msgstr ""
"ある人が観た映画のリストと、その人の個人的な評価が与えられたら、その人が好きそうな映画のリストを推薦する (いわゆる *レコメンダーシステム*: "
"有名な例は `Netflix Prize <https://en.wikipedia.org/wiki/Netflix_prize>`__) 。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:319
msgid ""
"What these tasks have in common is that there is one or more unknown "
"quantities associated with the object which needs to be determined from "
"other observed quantities."
msgstr "これらのタスクに共通しているのは、対象物に関連する1つ以上の未知の量があり、それを他の観測された量から決定する必要があるということです。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:323
msgid ""
"Supervised learning is further broken down into two categories, "
"**classification** and **regression**. In classification, the label is "
"discrete, while in regression, the label is continuous. For example, in "
"astronomy, the task of determining whether an object is a star, a galaxy, or"
" a quasar is a classification problem: the label is from three distinct "
"categories. On the other hand, we might wish to estimate the age of an "
"object based on such observations: this would be a regression problem, "
"because the label (age) is a continuous quantity."
msgstr ""
"教師あり学習はさらに、 **分類** と **回帰** の2つのカテゴリーに分けられます。分類ではラベルは離散的であり、回帰ではラベルは連続的です。 "
"例えば天文学では、ある物体が星なのか、銀河なのか、クエーサーなのかを判断する作業は、分類の問題です: "
"ラベルは3つのカテゴリーに分かれています。一方、このような観測に基づいて天体の年齢を推定したいと思うかもしれません: これは回帰の問題でしょう, "
"なぜなら、ラベル (年齢) は連続量だからです。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:332
msgid ""
"**Classification**: K nearest neighbors (kNN) is one of the simplest "
"learning strategies: given a new, unknown observation, look up in your "
"reference database which ones have the closest features and assign the "
"predominant class. Let's try it out on our iris classification problem::"
msgstr ""
"**分類**: K最近傍(kNN)は最も単純な学習戦略の一つです: "
"新しい未知の観測が与えられたら、どの観測が最も近い特徴を持っているかを参照データベースで調べ、優勢なクラスを割り当てます。アヤメ分類の問題で試してみましょう::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:350
msgid "A plot of the sepal space and the prediction of the KNN"
msgstr "がく片の空間とKNNの予測値のプロット"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:352
msgid ""
"**Regression**: The simplest possible regression setting is the linear "
"regression one:"
msgstr "**回帰**: 最も簡単な回帰設定は線形回帰です:"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:363
msgid "A plot of a simple linear regression."
msgstr "単純な線形回帰のプロット。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:366
msgid "A recap on Scikit-learn's estimator interface"
msgstr "Scikit-learnのestimatorインターフェイスのまとめ"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:368
msgid ""
"Scikit-learn strives to have a uniform interface across all methods, and "
"we’ll see examples of these below. Given a scikit-learn *estimator* object "
"named ``model``, the following methods are available:"
msgstr ""
"Scikit-learn は全てのメソッドで統一されたインターフェイスを持つように努めており、以下にその例を示します。 ``model`` という名前の"
" scikit-learn *estimator* オブジェクトが与えられた場合、以下のメソッドが利用できます:"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:0
msgid "In **all Estimators**"
msgstr "**すべての Estimator** の場合"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:374
msgid ""
"``model.fit()`` : fit training data. For supervised learning applications, "
"this accepts two arguments: the data ``X`` and the labels ``y`` (e.g. "
"``model.fit(X, y)``). For unsupervised learning applications, this accepts "
"only a single argument, the data ``X`` (e.g. ``model.fit(X)``)."
msgstr ""
"``model.fit()`` : トレーニングデータに適合します。教師あり学習アプリケーションでは、データ ``X`` とラベル ``y`` "
"の2つの引数を受け付けます(例 ``model.fit(X, y)`` )。 教師なし学習アプリケーションの場合、引数はデータ ``X`` だけです(例"
" ``model.fit(X)`` )。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:0
msgid "In **supervised estimators**"
msgstr "**教師あり推定量** の場合"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:382
msgid ""
"``model.predict()`` : given a trained model, predict the label of a new set "
"of data. This method accepts one argument, the new data ``X_new`` (e.g. "
"``model.predict(X_new)``), and returns the learned label for each object in "
"the array."
msgstr ""
"``model.predict()`` : "
"訓練済みのモデルが与えられた場合、新しいデータセットのラベルを予測します。このメソッドは1つの引数、新しいデータ ``X_new`` (例えば "
"``model.predict(X_new)``) を受け取り、配列内の各オブジェクトの学習済みラベルを返します。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:386
msgid ""
"``model.predict_proba()`` : For classification problems, some estimators "
"also provide this method, which returns the probability that a new "
"observation has each categorical label. In this case, the label with the "
"highest probability is returned by ``model.predict()``."
msgstr ""
"``model.predict_proba()`` : "
"分類問題については、いくつかの推定器もこの方法を提供しており、新しい観測値が各カテゴリラベルを持つ確率を返します。この場合、最も確率の高いラベルが "
"``model.predict()`` によって返されます。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:391
msgid ""
"``model.score()`` : for classification or regression problems, most (all?) "
"estimators implement a score method. Scores are between 0 and 1, with a "
"larger score indicating a better fit."
msgstr ""
"``model.score()`` : 分類や回帰の問題では、ほとんど (すべて？) "
"の推定器がスコア法を実装しています。スコアは0から1の間で、大きいほどフィットしていることを示す。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:0
msgid "In **unsupervised estimators**"
msgstr "**教師なし推定量** の場合"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:397
msgid ""
"``model.transform()`` : given an unsupervised model, transform new data into"
" the new basis. This also accepts one argument ``X_new``, and returns the "
"new representation of the data based on the unsupervised model."
msgstr ""
"``model.transform()`` : 教師なしモデルが与えられた場合、新しいデータを新しい基底に変換します。これも ``X_new`` "
"を引数にとり、教師なしモデルに基づいたデータの新しい表現を返します。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:401
msgid ""
"``model.fit_transform()`` : some estimators implement this method, which "
"more efficiently performs a fit and a transform on the same input data."
msgstr "``model.fit_transform()`` : この方法は、同じ入力データに対してフィットと変換をより効率的に実行します。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:406
msgid "Regularization: what it is and why it is necessary"
msgstr "正則化: 正則化とは何か、なぜ必要なのか"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:409
msgid "Preferring simpler models"
msgstr "シンプルなモデルを好む"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:411
msgid ""
"**Train errors** Suppose you are using a 1-nearest neighbor estimator. How "
"many errors do you expect on your train set?"
msgstr "**訓練誤差** 1-最近傍推定量を使用しているとします。 訓練セットにはいくつの誤差が予想されますか？"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:414
msgid ""
"Train set error is not a good measurement of prediction performance. You "
"need to leave out a test set."
msgstr "訓練セットの誤差は予測性能の測定には適していません。 テストセットを除外する必要があります。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:416
msgid "In general, we should accept errors on the train set."
msgstr "一般的には、訓練セットの誤差は受け入れるべきです。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:418
msgid ""
"**An example of regularization** The core idea behind regularization is that"
" we are going to prefer models that are simpler, for a certain definition of"
" ''simpler'', even if they lead to more errors on the train set."
msgstr ""
"**正則化の例** 正則化の背後にある核となる考え方は、ある ''単純化'' "
"の定義では、たとえ訓練セットでより多くの誤差をもたらすとしても、より単純なモデルを選好するということです。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:423
msgid "As an example, let's generate with a 9th order polynomial, with noise:"
msgstr "例として、9次の多項式にノイズを入れて生成してみましょう:"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:430
msgid "And now, let's fit a 4th order and a 9th order polynomial to the data."
msgstr "次に、4次と9次の多項式をデータに当てはめてみましょう。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:437
msgid ""
"With your naked eyes, which model do you prefer, the 4th order one, or the "
"9th order one?"
msgstr "あなたの肉眼では、4次と9次、どちらのモデルが好きですか？"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:440
msgid "Let's look at the ground truth:"
msgstr "真実を見てみましょう:"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:449
msgid ""
"Regularization is ubiquitous in machine learning. Most scikit-learn "
"estimators have a parameter to tune the amount of regularization. For "
"instance, with k-NN, it is 'k', the number of nearest neighbors used to make"
" the decision. k=1 amounts to no regularization: 0 error on the training "
"set, whereas large k will push toward smoother decision boundaries in the "
"feature space."
msgstr ""
"正則化は機械学習ではどこにでもあります。ほとんどのscikit-learnの推定量には、正則化の量を調整するパラメータがあります。例えば k-NN の "
"場合、 'k' 、つまり判定に使われる最近傍の数です。 k=1 は正則化なし: "
"学習セットでのエラーは0、一方、kが大きいと、特徴空間内の判定境界が滑らかになります。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:457
msgid "Simple versus complex models for classification"
msgstr "分類のための単純なモデルと複雑なモデル"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:468
msgid "|linear|"
msgstr "|linear|"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:459
msgid "linear"
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:468
msgid "|nonlinear|"
msgstr "|nonlinear|"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:463
msgid "nonlinear"
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:470
msgid "A linear separation"
msgstr "線形分離"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:470
msgid "A non-linear separation"
msgstr "非線形分離"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:475
msgid ""
"For classification models, the decision boundary, that separates the class "
"expresses the complexity of the model. For instance, a linear model, that "
"makes a decision based on a linear combination of features, is more complex "
"than a non-linear one."
msgstr ""
"分類モデルの場合、 クラスを分ける決定境界はモデルの複雑さを表します。 "
"例えば、特徴の線形結合に基づいて決定を下す、線形モデルは非線形モデルよりも複雑です。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:482
msgid "Supervised Learning: Classification of Handwritten Digits"
msgstr "教師あり学習: 手書き文字の分類"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:485
msgid "The nature of the data"
msgstr "データの性質"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst-1
msgid "Code and notebook"
msgstr "コードとノートブック"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:489
msgid ""
"Python code and Jupyter notebook for this section are found :ref:`here "
"<sphx_glr_packages_scikit-"
"learn_auto_examples_plot_digits_simple_classif.py>`"
msgstr ""
"このセクションのPythonコードとJupyterノートブックは :ref:`ここ<sphx_glr_packages_scikit-"
"learn_auto_examples_plot_digits_simple_classif.py>` にあります。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:493
msgid ""
"In this section we'll apply scikit-learn to the classification of "
"handwritten digits. This will go a bit beyond the iris classification we saw"
" before: we'll discuss some of the metrics which can be used in evaluating "
"the effectiveness of a classification model. ::"
msgstr ""
"このセクションでは、手書き数字の分類にscikit-learnを適用します。 これは、以前見た虹彩の分類を少し超えるでしょう: "
"ここでは、分類モデルの有効性を評価するために使用できるメトリクスについて説明します ::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:505
msgid ""
"Let us visualize the data and remind us what we're looking at (click on the "
"figure for the full code)::"
msgstr "データを視覚化し、私たちが何を見ているのかを思い出させてくれます (図をクリックするとフルコードが表示されます)::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:514
msgid "Visualizing the Data on its principal components"
msgstr "主成分でデータを可視化する"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:516
msgid ""
"A good first-step for many problems is to visualize the data using a "
"*Dimensionality Reduction* technique. We'll start with the most "
"straightforward one, `Principal Component Analysis (PCA) "
"<https://en.wikipedia.org/wiki/Principal_component_analysis>`_."
msgstr ""
"多くの問題に対する良い最初のステップは、 *次元削減* 技術を使ってデータを可視化することである。 まずは一番簡単な `Principal "
"Component Analysis (PCA) "
"<https://en.wikipedia.org/wiki/Principal_component_analysis>`_ からです。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:521
msgid ""
"PCA seeks orthogonal linear combinations of the features which show the "
"greatest variance, and as such, can help give you a good idea of the "
"structure of the data set. ::"
msgstr "PCAは、最大の分散を示す特徴の直交線形結合を求めます、 というように、データセットの構造を知るのに役立ちます ::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst-1
msgid "**Question**"
msgstr "**質問**"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:540
msgid ""
"Given these projections of the data, which numbers do you think a classifier"
" might have trouble distinguishing?"
msgstr "このようなデータ予測があった場合、分類器が識別に苦労しそうな数字はどれだと思いますか？"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:544
msgid "Gaussian Naive Bayes Classification"
msgstr "Gaussian単純ベイズ分類器"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:546
msgid ""
"For most classification problems, it's nice to have a simple, fast method to"
" provide a quick baseline classification. If the simple and fast method is "
"sufficient, then we don't have to waste CPU cycles on more complex models. "
"If not, we can use the results of the simple method to give us clues about "
"our data."
msgstr ""
"ほとんどの分類問題では、ベースライン分類を素早く提供するシンプルで高速な方法があるといいです。シンプルで高速な方法で十分なら、より複雑なモデルでCPUサイクルを浪費する必要はありません。そうでない場合は、単純な方法の結果から、データについての手がかりを得ることができます。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:552
msgid ""
"One good method to keep in mind is Gaussian Naive Bayes "
"(:class:`sklearn.naive_bayes.GaussianNB`)."
msgstr ""
"覚えておくといい方法のひとつが Gaussian Naive Bayes "
"(:class:`sklearn.naive_bayes.GaussianNB`) です。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst-1
msgid "Old scikit-learn versions"
msgstr "古い scikit-image バージョン"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:557
msgid ""
":func:`~sklearn.model_selection.train_test_split` is imported from "
"``sklearn.cross_validation``"
msgstr ""
":func:`~sklearn.model_selection.train_test_split` は "
"``sklearn.cross_validation`` からインポートされています。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:562
msgid ""
"Gaussian Naive Bayes fits a Gaussian distribution to each training label "
"independently on each feature, and uses this to quickly give a rough "
"classification. It is generally not sufficiently accurate for real-world "
"data, but can perform surprisingly well, for instance on text data."
msgstr ""
"Gaussian Naive Bayes "
"は、各特徴について、各学習ラベルにガウス分布を個別に当てはめ、これを用いて素早く大まかな分類を行います。一般的に、実世界のデータに対しては十分な精度が得られませんが、テキストデータなどでは驚くほど高い精度を発揮することがあります。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:589
msgid ""
"As above, we plot the digits with the predicted labels to get an idea of how"
" well the classification is working."
msgstr "上記のように、予測されたラベルと数字をプロットして、分類がどの程度うまくいっているかを確認します。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:600
msgid "Why did we split the data into training and validation sets?"
msgstr "なぜデータをトレーニングセットと検証セットに分けたのでしょうか？"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:603
msgid "Quantitative Measurement of Performance"
msgstr "パフォーマンスの定量的測定"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:605
msgid ""
"We'd like to measure the performance of our estimator without having to "
"resort to plotting examples. A simple method might be to simply compare the "
"number of matches::"
msgstr "例をプロットすることなく、我々の推定器の性能を測定したいです。 単純な方法は、単純にマッチした数を比較することかもしれません::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:617
msgid ""
"We see that more than 80% of the 450 predictions match the input. But there "
"are other more sophisticated metrics that can be used to judge the "
"performance of a classifier: several are available in the "
":mod:`sklearn.metrics` submodule."
msgstr ""
"450の予測の80％以上が入力と一致することがわかります。 しかし、分類器の性能を判断するために使用できる、より洗練された測定基準もあります: "
":mod:`sklearn.metrics` サブモジュールにいくつか用意されています。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:622
msgid ""
"One of the most useful metrics is the ``classification_report``, which "
"combines several measures and prints a table with the results::"
msgstr ""
"最も有用な測定基準のひとつは ``classification_report`` "
"で、これはいくつかの測定基準を組み合わせ、その結果を表にしたものです::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:646
msgid ""
"Another enlightening metric for this sort of multi-label classification is a"
" *confusion matrix*: it helps us visualize which labels are being "
"interchanged in the classification errors::"
msgstr ""
"この種のマルチラベル分類のためのもう1つの啓発的な指標は、 *混同行列* です: "
"これは、分類エラーでどのラベルが入れ替わっているかを視覚化するのに役立ちます::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:662
msgid ""
"We see here that in particular, the numbers 1, 2, 3, and 9 are often being "
"labeled 8."
msgstr "特に、1、2、3、9の数字がしばしば8と表示されていることがわかります。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:667
msgid "Supervised Learning: Regression of Housing Data"
msgstr "教師あり学習: 住宅データの回帰"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:669
msgid ""
"Here we'll do a short example of a regression problem: learning a continuous"
" value from a set of features."
msgstr "ここでは、回帰問題の簡単な例を示します: 特徴の集合から連続値を学習します。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:673
msgid "A quick look at the data"
msgstr "データを見てみよう"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:677
msgid ""
"Python code and Jupyter notebook for this section are found :ref:`here "
"<sphx_glr_packages_scikit-"
"learn_auto_examples_plot_california_prediction.py>`"
msgstr ""
"このセクションのPythonコードとJupyterノートブックは :ref:`ここ<sphx_glr_packages_scikit-"
"learn_auto_examples_plot_california_prediction.py>` にあります。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:682
msgid ""
"We'll use the California house prices set, available in scikit-learn. This "
"records measurements of 8 attributes of housing markets in California, as "
"well as the median price. The question is: can you predict the price of a "
"new market given its attributes?::"
msgstr ""
"scikit-"
"learnで利用可能なカリフォルニアの住宅価格セットを使用します。これは、カリフォルニア州の住宅市場の8つの属性と中央値の測定を記録したものです。 "
"問題は: 新市場の価格をその属性から予測できるか？::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:694
msgid "We can see that there are just over 20000 data points."
msgstr "データポイントが20000以上あることがわかります。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:696
msgid "The ``DESCR`` variable has a long description of the dataset::"
msgstr "``DESCR`` 変数には、データセットに関する長い説明があります::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:747
msgid ""
"It often helps to quickly visualize pieces of the data using histograms, "
"scatter plots, or other plot types. With matplotlib, let us show a histogram"
" of the target values: the median price in each neighborhood::"
msgstr ""
"ヒストグラム、散布図、その他のプロットタイプを使ってデータの断片を素早く視覚化することは、しばしば役に立ちます。 "
"matplotlibを使って、目標値のヒストグラムを表示してみましょう: 各地域の中央値::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:761
msgid ""
"Let's have a quick look to see if some features are more relevant than "
"others for our problem::"
msgstr "私たちの問題に関連する機能があるかどうか、簡単に見てみましょう::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:795
msgid "This is a manual version of a technique called **feature selection**."
msgstr "これは、 **特徴選択** と呼ばれるテクニックの手動バージョンです。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:799
msgid ""
"Sometimes, in Machine Learning it is useful to use feature selection to "
"decide which features are the most useful for a particular problem. "
"Automated methods exist which quantify this sort of exercise of choosing the"
" most informative features."
msgstr ""
"機械学習では、特定の問題に対してどの特徴が最も有用かを決定するために、特徴選択を使用することが有用な場合があります。 "
"最も有益な特徴を選択するこの種の作業を定量化する自動化された方法が存在します。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:805
msgid "Predicting Home Prices: a Simple Linear Regression"
msgstr "住宅価格の予測: 単回帰"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:807
msgid ""
"Now we'll use ``scikit-learn`` to perform a simple linear regression on the "
"housing data. There are many possibilities of regressors to use. A "
"particularly simple one is ``LinearRegression``: this is basically a wrapper"
" around an ordinary least squares calculation. ::"
msgstr ""
"では、 ``scikit-learn`` を使って住宅データに簡単な線形回帰を行ってみましょう。使用する回帰因子の可能性はたくさんあります。 "
"特に簡単なのは ``LinearRegression`` です: これは基本的に、通常の最小二乗計算のラッパーです::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:827
msgid "We can plot the error: expected as a function of predicted::"
msgstr "誤差をプロットします: 予測値の関数として期待されます::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:834
msgid ""
"The prediction at least correlates with the true price, though there are "
"clearly some biases. We could imagine evaluating the performance of the "
"regressor by, say, computing the RMS residuals between the true and "
"predicted price. There are some subtleties in this, however, which we'll "
"cover in a later section."
msgstr ""
"いくつかのバイアスがあるのは明らかですが、予測は少なくとも実際の価格と相関しています。 "
"例えば、真の価格と予測価格の間のRMS残差を計算することで、リグレッサーの性能を評価することが考えられます。しかし、これにはいくつかの微妙な点があり、後のセクションで説明します。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst-1
msgid "**Exercise: Gradient Boosting Tree Regression**"
msgstr "**例題: 勾配ブースティング回帰木**"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:843
msgid ""
"There are many other types of regressors available in scikit-learn: we'll "
"try a more powerful one here."
msgstr "scikit-learn では、他にも多くの種類のリグレッサーを利用できます: ここではもっと強力なものを試してみましょう。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:846
msgid "**Use the GradientBoostingRegressor class to fit the housing data**."
msgstr "**GradientBoostingRegressor クラスを使って、住宅データに適合させます**。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:848
msgid ""
"**hint** You can copy and paste some of the above code, replacing "
":class:`~sklearn.linear_model.LinearRegression` with "
":class:`~sklearn.ensemble.GradientBoostingRegressor`::"
msgstr ""
"**ヒント** 上記のコードの一部をコピー＆ペーストして、 "
":class:`~sklearn.linear_model.LinearRegression` を "
":class:`~sklearn.ensemble.GradientBoostingRegressor` に置き換えてください::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:855
msgid ""
"**Solution** The solution is found in :ref:`the code of this chapter "
"<sphx_glr_packages_scikit-"
"learn_auto_examples_plot_california_prediction.py>`"
msgstr ""
"**解答** 解答は :ref:`この章のコード<sphx_glr_packages_scikit-"
"learn_auto_examples_plot_california_prediction.py>` にあります。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:860
msgid "Measuring prediction performance"
msgstr "予測性能の測定"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:863
msgid "A quick test on the K-neighbors classifier"
msgstr "K-neighbors分類器の簡単なテスト"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:865
msgid ""
"Here we'll continue to look at the digits data, but we'll switch to the "
"K-Neighbors classifier.  The K-neighbors classifier is an instance-based "
"classifier.  The K-neighbors classifier predicts the label of an unknown "
"point based on the labels of the *K* nearest points in the parameter space. "
"::"
msgstr ""
"ここでは引き続き数字データを見ていきますが、 K-Neighbors 分類器に切り替えてみましょう。 K-neighbors "
"分類器は、インスタンスベースの分類器です。 K-neighbors 分類器は、パラメータ空間内の *K* "
"個の最も近い点のラベルに基づいて、未知の点のラベルを予測します ::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:899
msgid ""
"Apparently, we've found a perfect classifier!  But this is misleading for "
"the reasons we saw before: the classifier essentially \"memorizes\" all the "
"samples it has already seen.  To really test how well this algorithm does, "
"we need to try some samples it *hasn't* yet seen."
msgstr ""
"どうやら完璧な分類器を見つけたようです！ しかし、これは誤解を招きます: 分類器は基本的に、すでに見たすべてのサンプルを \"記憶\" "
"します。このアルゴリズムがどれだけ優れているかを本当にテストするには、まだ見た *ことのない* サンプルを試す必要があります。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:904
msgid ""
"This problem also occurs with regression models. In the following we fit an "
"other instance-based model named \"decision tree\" to the California Housing"
" price dataset we introduced previously::"
msgstr ""
"この問題は回帰モデルでも起こります。以下では、 \"決定木\" "
"という別のインスタンスベースのモデルを、先に紹介したカリフォルニア州の住宅価格データセットに当てはめます::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:926
msgid ""
"Here again the predictions are seemingly perfect as the model was able to "
"perfectly memorize the training set."
msgstr "ここでも、モデルはトレーニングセットを完全に記憶することができたため、予測は一見完璧に見えます。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:929
msgid "**Performance on test set**"
msgstr "**テストセットでのパフォーマンス**"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:931
msgid "Performance on test set does not measure overfit (as described above)"
msgstr "テストセットでの性能はオーバーフィットを測定しません (上述の通り)"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:934
msgid "A correct approach: Using a validation set"
msgstr "正しいアプローチ: 検証セットの使用"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:936
msgid ""
"Learning the parameters of a prediction function and testing it on the same "
"data is a methodological mistake: a model that would just repeat the labels "
"of the samples that it has just seen would have a perfect score but would "
"fail to predict anything useful on yet-unseen data."
msgstr ""
"予測関数のパラメータを学習し、それを同じデータでテストするのは方法論的に誤りです: "
"今見たサンプルのラベルを繰り返すだけのモデルは満点ですが、まだ見たことのないデータに対して有用な予測はできないでしょう。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:941
msgid "To avoid over-fitting, we have to define two different sets:"
msgstr "過学習を避けるために、2つの異なるセットを定義する必要があります:"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:943
msgid ""
"a training set X_train, y_train which is used for learning the parameters of"
" a predictive model"
msgstr "予測モデルのパラメータを学習するための学習セット X_train, y_train"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:946
msgid ""
"a testing set X_test, y_test which is used for evaluating the fitted "
"predictive model"
msgstr "予測モデルのフィッティングの評価をするための検証セット X_train, y_train"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:949
msgid ""
"In scikit-learn such a random split can be quickly computed with the "
":func:`~sklearn.model_selection.train_test_split` function::"
msgstr ""
"scikit-learn では、このようなランダム分割は "
":func:`~sklearn.model_selection.train_test_split` 関数で素早く計算できます::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:962
msgid "Now we train on the training data, and test on the testing data::"
msgstr "トレーニングデータで訓練し、テストデータでテストします::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:997
msgid ""
"The averaged f1-score is often used as a convenient measure of the overall "
"performance of an algorithm.  It appears in the bottom row of the "
"classification report; it can also be accessed directly::"
msgstr ""
"平均化されたf1スコアは、アルゴリズムの全体的なパフォーマンスを測る便利な尺度としてよく使われます。分類レポートの最下段に表示されます; "
"直接アクセスすることもできます::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1004
msgid ""
"The over-fitting we saw previously can be quantified by computing the "
"f1-score on the training data itself::"
msgstr "先に見た過学習は、教師データ自体のf1スコアを計算することで定量化できます::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1012
msgid ""
"**Regression metrics** In the case of regression models, we need to use "
"different metrics, such as explained variance."
msgstr "**回帰測定基準** 回帰モデルの場合、説明分散のような異なる指標を使う必要があります。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1016
msgid "Model Selection via Validation"
msgstr "検証によるモデルの選択"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1020
msgid ""
"We have applied Gaussian Naives, support vectors machines, and K-nearest "
"neighbors classifiers to the digits dataset. Now that we have these "
"validation tools in place, we can ask quantitatively which of the three "
"estimators works best for this dataset."
msgstr ""
"ガウスナイーブ、サポートベクターマシン、K近傍法を数字データセットに適用しました。これらの検証ツールが揃ったので、3つの推定量のうちどれがこのデータセットに最適かを定量的に問うことができます。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1025
msgid ""
"With the default hyper-parameters for each estimator, which gives the best "
"f1 score on the **validation set**?  Recall that hyperparameters are the "
"parameters set when you instantiate the classifier: for example, the "
"``n_neighbors`` in ``clf = KNeighborsClassifier(n_neighbors=1)`` ::"
msgstr ""
"各推定量にデフォルトのハイパーパラメータを設定した場合、 **検証セット** で最高のf1スコアを与えるのはどれでしょう？  "
"ハイパーパラメータは，分類器をインスタンス化するときに設定されるパラメータです: 例えば、 ``clf = "
"KNeighborsClassifier(n_neighbors=1)`` の ``n_neighbors`` ::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1049
msgid ""
"For each classifier, which value for the hyperparameters gives the best "
"results for the digits data?  For :class:`~sklearn.svm.LinearSVC`, use "
"``loss='l2'`` and ``loss='l1'``.  For "
":class:`~sklearn.neighbors.KNeighborsClassifier` we use ``n_neighbors`` "
"between 1 and 10. Note that :class:`~sklearn.naive_bayes.GaussianNB` does "
"not have any adjustable hyperparameters. ::"
msgstr ""
"それぞれの分類器について、どのハイパーパラメータの値が、ディジットのデータに対して最良の結果を与えるでしょうか？  "
":class:`~sklearn.svm.LinearSVC` には ``loss='l2'`` と ``loss='l1'`` を使います。  "
":class:`~sklearn.neighbors.KNeighborsClassifier` には、1から10までの ``n_neighbors``"
" を使います。 :class:`~sklearn.naive_bayes.GaussianNB` "
"は調整可能なハイパーパラメータを持っていないことに注意してください。 ::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1071
msgid ""
"**Solution:** :ref:`code source <sphx_glr_packages_scikit-"
"learn_auto_examples_plot_compare_classifiers.py>`"
msgstr ""
"**解答:** :ref:`code source <sphx_glr_packages_scikit-"
"learn_auto_examples_plot_compare_classifiers.py>`"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1075
msgid "Cross-validation"
msgstr "交差検証"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1077
msgid ""
"Cross-validation consists in repeatedly splitting the data in pairs of train"
" and test sets, called 'folds'. Scikit-learn comes with a function to "
"automatically compute score on all these folds. Here we do "
":class:`~sklearn.model_selection.KFold` with k=5. ::"
msgstr ""
"交差検証は、 'folds' と呼ばれる訓練セットとテストセットのペアでデータを繰り返し分割することからなります。 Scikit-"
"learnには、これらすべてのフォールドのスコアを自動的に計算する関数が用意されています。 ここではk=5で "
":class:`~sklearn.model_selection.KFold` とします。 ::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1087
msgid "We can use different splitting strategies, such as random splitting::"
msgstr "ランダム分割など、さまざまな分割戦略を用いることができます::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1096
msgid ""
"There exists `many different cross-validation strategies <https://scikit-"
"learn.org/stable/modules/cross_validation.html#cross-validation-iterators>`_"
" in scikit-learn. They are often useful to take in account non iid datasets."
msgstr ""
"scikit-learnには `様々な交差検証戦略 <https://scikit-"
"learn.org/stable/modules/cross_validation.html#cross-validation-iterators>`_"
" が存在します。 これらはしばしば、非同一データセットを考慮するのに有用です。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1102
msgid "Hyperparameter optimization with cross-validation"
msgstr "クロスバリデーションによるハイパーパラメータの最適化"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1104
msgid ""
"Consider regularized linear models, such as *Ridge Regression*, which uses "
"l2 regularization, and *Lasso Regression*, which uses l1 regularization. "
"Choosing their regularization parameter is important."
msgstr ""
"*リッジ回帰* のような正則化線形モデルを考えてみましょう、これはl2正則化を使用しています、また、l1正則化を使用する *ラッソ回帰* があります。 "
"正則化パラメータの選択は重要です。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1108
msgid ""
"Let us set these parameters on the Diabetes dataset, a simple regression "
"problem. The diabetes data consists of 10 physiological variables (age, sex,"
" weight, blood pressure) measure on 442 patients, and an indication of "
"disease progression after one year::"
msgstr ""
"単純な回帰問題である糖尿病データセットにこれらのパラメータを設定してみましょう。 "
"糖尿病データは、442人の患者を対象に測定された10の生理学的変数（年齢、性別、体重、血圧）と、1年後の疾患進行の指標から構成されます::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1119
msgid ""
"With the default hyper-parameters: we compute the cross-validation score::"
msgstr "デフォルトのハイパーパラメータで、交差検証のスコアを計算します::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1130
msgid "Basic Hyperparameter Optimization"
msgstr "基本的なハイパーパラメータ最適化"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1132
msgid ""
"We compute the cross-validation score as a function of alpha, the strength "
"of the regularization for :class:`~sklearn.linear_model.Lasso` and "
":class:`~sklearn.linear_model.Ridge`. We choose 20 values of alpha between "
"0.0001 and 1::"
msgstr ""
"alphaの関数としてクロスバリデーションのスコアを計算します、 :class:`~sklearn.linear_model.Lasso` と "
":class:`~sklearn.linear_model.Ridge` の正則化の強さ。0.0001から1の間で20のalpha値を選びます::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst-1
msgid "Question"
msgstr "質問"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1154
msgid "Can we trust our results to be actually useful?"
msgstr "結果が本当に役に立つと信じていいのでしょうか？"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1157
msgid "Automatically Performing Grid Search"
msgstr "自動的にグリッド検索を行う"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1159
msgid ""
":class:`sklearn.grid_search.GridSearchCV` is constructed with an estimator, "
"as well as a dictionary of parameter values to be searched. We can find the "
"optimal parameters this way::"
msgstr ""
":class:`sklearn.grid_search.GridSearchCV` は、推定器と検索するパラメータ値の辞書で構成されます。 "
"最適なパラメータは次のようにして求めることができます::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1171
msgid "Built-in Hyperparameter Search"
msgstr "内蔵ハイパーパラメータ探索"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1173
msgid ""
"For some models within scikit-learn, cross-validation can be performed more "
"efficiently on large datasets.  In this case, a cross-validated version of "
"the particular model is included.  The cross-validated versions of "
":class:`~sklearn.linear_model.Ridge` and "
":class:`~sklearn.linear_model.Lasso` are "
":class:`~sklearn.linear_model.RidgeCV` and "
":class:`~sklearn.linear_model.LassoCV`, respectively.  Parameter search on "
"these estimators can be performed as follows::"
msgstr ""
"scikit-learnのいくつかのモデルでは、交差検証は大規模なデータセットでより効率的に実行できます。 "
"この場合、特定のモデルの交差検証バージョンが含まれます。 :class:`~sklearn.linear_model.Ridge` と "
":class:`~sklearn.linear_model.Lasso` の交差検証バージョンはそれぞれ "
":class:`~sklearn.linear_model.RidgeCV` と "
":class:`~sklearn.linear_model.LassoCV` "
"です。これらの推定量に対するパラメータ探索は以下のように行うことができます::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1189
msgid "We see that the results match those returned by GridSearchCV"
msgstr "GridSearchCV が返す結果と一致することがわかります。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1192
msgid "Nested cross-validation"
msgstr "ネストされた交差検証"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1194
msgid ""
"How do we measure the performance of these estimators? We have used data to "
"set the hyperparameters, so we need to test on actually new data. We can do "
"this by running :func:`~sklearn.model_selection.cross_val_score` on our CV "
"objects. Here there are 2 cross-validation loops going on, this is called "
"*'nested cross validation'*::"
msgstr ""
"これらの推定量の性能はどのように測定するのでしょうか？ "
"ハイパーパラメータを設定するためにデータを使用したので、実際に新しいデータでテストする必要があります。これは、CVオブジェクトに "
":func:`~sklearn.model_selection.cross_val_score` "
"を実行することで可能になります。ここでは2つの交差検証ループが行われています、 これは *'入れ子交差検証'* と呼ばれます::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1207
msgid ""
"Note that these results do not match the best results of our curves above, "
"and :class:`~sklearn.linear_model.LassoCV` seems to under-perform "
":class:`~sklearn.linear_model.RidgeCV`. The reason is that setting the "
"hyper-parameter is harder for Lasso, thus the estimation error on this "
"hyper-parameter is larger."
msgstr ""
"これらの結果は、上記のカーブの最良の結果とは一致しないことに注意してください、 また、 "
":class:`~sklearn.linear_model.LassoCV` は "
":class:`~sklearn.linear_model.RidgeCV` "
"を下回っているようです。その理由は、ハイパーパラメータの設定がLassoの方が難しいため、このハイパーパラメータの推定誤差が大きくなるからです。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1214
msgid "Unsupervised Learning: Dimensionality Reduction and Visualization"
msgstr "教師なし学習: 次元削減と可視化"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1216
msgid ""
"Unsupervised learning is applied on X without y: data without labels. A "
"typical use case is to find hidden structure in the data."
msgstr "教師なし学習は、yのないX: つまりラベルのないデータに適用されます。 典型的な使用例は、データの隠れた構造を見つけることです。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1220
msgid "Dimensionality Reduction: PCA"
msgstr "次元削減: PCA"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1222
msgid ""
"Dimensionality reduction derives a set of new artificial features smaller "
"than the original feature set. Here we'll use `Principal Component Analysis "
"(PCA) <https://en.wikipedia.org/wiki/Principal_component_analysis>`__, a "
"dimensionality reduction that strives to retain most of the variance of the "
"original data. We'll use :class:`sklearn.decomposition.PCA` on the iris "
"dataset::"
msgstr ""
"次元削減は、元の特徴セットよりも小さい新しい人工的な特徴セットを導き出します。ここでは `Principal Component Analysis "
"(PCA) <https://en.wikipedia.org/wiki/Principal_component_analysis>`__ とします、 "
"元のデータの分散の大部分を保持しようとする次元削減です。アヤメの花データセットに :class:`sklearn.decomposition.PCA` "
"を使います::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1235
msgid ""
":class:`~sklearn.decomposition.PCA` computes linear combinations of the "
"original features using a truncated Singular Value Decomposition of the "
"matrix X, to project the data onto a base of the top singular vectors."
msgstr ""
":class:`~sklearn.decomposition.PCA` は、行列Xの切断特異値分解を用いて、元の特徴の線形結合を計算します、 "
"それを使用して、データを上位特異ベクトルの底辺に投影します。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1247
msgid ""
"Once fitted, :class:`~sklearn.decomposition.PCA` exposes the singular "
"vectors in the ``components_`` attribute::"
msgstr ""
":class:`~sklearn.decomposition.PCA` がフィッティングされると、 ``components_`` "
"属性の特異ベクトルが表示されます::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1254
msgid "Other attributes are available as well::"
msgstr "その他の属性も利用可能です::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1259
msgid "Let us project the iris dataset along those first two dimensions:::"
msgstr "アヤメの花データセットを最初の2次元に沿って投影してみましょう:::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1265
msgid ""
":class:`~sklearn.decomposition.PCA` ``normalizes`` and ``whitens`` the data,"
" which means that the data is now centered on both components with unit "
"variance::"
msgstr ""
":class:`~sklearn.decomposition.PCA` ``normalizes`` と ``whitens`` "
"は、データが単位分散で両成分を中心とすることを意味します::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1273
msgid ""
"Furthermore, the samples components do no longer carry any linear "
"correlation::"
msgstr "さらに、サンプル成分はもはや線形相関を持ちません::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1280
msgid ""
"With a number of retained components 2 or 3, PCA is useful to visualize the "
"dataset::"
msgstr "保持される成分の数が2または3である場合、PCAはデータセットを視覚化するのに有効です::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1296
msgid ""
"Note that this projection was determined *without* any information about the"
" labels (represented by the colors): this is the sense in which the learning"
" is **unsupervised**. Nevertheless, we see that the projection gives us "
"insight into the distribution of the different flowers in parameter space: "
"notably, *iris setosa* is much more distinct than the other two species."
msgstr ""
"なお、この投影は、(色で表される)ラベルに関するいかなる情報も *持たず* に決定されました: これは、学習が **教師なし** であるという意味です。"
" とはいえ、投影によって、パラメータ空間におけるさまざまな花の分布を知ることができます: 特に、 *iris setosa* "
"は他の2種よりもはるかにはっきりしています。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1305
msgid "Visualization with a non-linear embedding: tSNE"
msgstr "非線形埋め込みによる可視化: tSNE"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1307
msgid ""
"For visualization, more complex embeddings can be useful (for statistical "
"analysis, they are harder to control). :class:`sklearn.manifold.TSNE` is "
"such a powerful manifold learning method. We apply it to the *digits* "
"dataset, as the digits are vectors of dimension 8*8 = 64. Embedding them in "
"2D enables visualization::"
msgstr ""
"視覚化には、より複雑な埋め込みが有効です (統計分析では、コントロールが難しくなります)。 :class:`sklearn.manifold.TSNE`"
" はそのような強力な多様体学習法です。 数字は 8*8=64 次元のベクトルなので、これを *数字* データセットに適用します。 "
"2Dに埋め込むことで視覚化が可能になります::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst-1
msgid "fit_transform"
msgstr "fit_transform"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1335
msgid ""
"As :class:`~sklearn.manifold.TSNE` cannot be applied to new data, we need to"
" use its `fit_transform` method."
msgstr ""
":class:`~sklearn.manifold.TSNE` は新しいデータには適用できないので、 `fit_transform` "
"メソッドを使う必要があります。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1340
msgid ""
":class:`sklearn.manifold.TSNE` separates quite well the different classes of"
" digits even though it had no access to the class information."
msgstr ""
":class:`sklearn.manifold.TSNE` "
"は、クラス情報にアクセスできなかったにもかかわらず、数字の異なるクラスを非常にうまく分離しました。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst-1
msgid "Exercise: Other dimension reduction of digits"
msgstr "練習: 数字の異次元化"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1351
msgid ""
":mod:`sklearn.manifold` has many other non-linear embeddings. Try them out "
"on the digits dataset. Could you judge their quality without knowing the "
"labels ``y``? ::"
msgstr ""
":mod:`sklearn.manifold` には他にも多くの非線形埋め込みがあります。 digitsデータセットで試してみてください。 ``y`` "
"というラベルを知らなくても、その品質を判断できるでしょうか？ ::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1360
msgid "Parameter selection, Validation, and Testing"
msgstr "パラメータの選択、検証、テスト"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1363
msgid "Hyperparameters, Over-fitting, and Under-fitting"
msgstr "ハイパーパラメータ、オーバーフィット、アンダーフィット"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1367
msgid ""
"This section is adapted from `Andrew Ng's excellent Coursera course "
"<https://www.coursera.org/course/ml>`__"
msgstr ""
"このセクションは `Andrew Ng's excellent Coursera course "
"<https://www.coursera.org/course/ml>`__ からの抜粋です"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1370
msgid ""
"The issues associated with validation and cross-validation are some of the "
"most important aspects of the practice of machine learning. Selecting the "
"optimal model for your data is vital, and is a piece of the problem that is "
"not often appreciated by machine learning practitioners."
msgstr ""
"バリデーションとクロスバリデーションに関連する問題は機械学習の実践における最も重要な側面のいくつかです。データに最適なモデルを選択することが重要です、 "
"これは、機械学習の専門家にはあまり理解されていない問題の一部です。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1376
msgid ""
"The central question is: **If our estimator is underperforming, how should "
"we move forward?**"
msgstr "中心的な問題は: **エスティメーターのパフォーマンスが低い場合、どのように前進すべきでしょうか？**"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1379
msgid "Use simpler or more complicated model?"
msgstr "よりシンプルなモデルを使うか、より複雑なモデルを使うか？"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1380
msgid "Add more features to each observed data point?"
msgstr "観測された各データポイントにさらに特徴を加えるのか？"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1381
msgid "Add more training samples?"
msgstr "トレーニングサンプルを増やす？"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1383
msgid ""
"The answer is often counter-intuitive. In particular, **Sometimes using a "
"more complicated model will give worse results.** Also, **Sometimes adding "
"training data will not improve your results.** The ability to determine what"
" steps will improve your model is what separates the successful machine "
"learning practitioners from the unsuccessful."
msgstr ""
"その答えはしばしば直感に反します。 特に、 **より複雑なモデルを使うと、結果が悪くなることがあります。** また、 "
"**トレーニングデータを追加しても結果が改善しないこともあります。** "
"どのようなステップを踏めばモデルが改善されるかを判断する能力が、機械学習の成功者と失敗者を分けるのです。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1390
msgid "Bias-variance trade-off: illustration on a simple regression problem"
msgstr "バイアスと分散のトレードオフ: 単純回帰問題のイラスト"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1394
msgid ""
"Python code and Jupyter notebook for this section are found :ref:`here "
"<sphx_glr_packages_scikit-learn_auto_examples_plot_variance_linear_regr.py>`"
msgstr ""
"このセクションのPythonコードとJupyterノートブックは :ref:`ここ<sphx_glr_packages_scikit-"
"learn_auto_examples_plot_variance_linear_regr.py>` にあります。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1399
msgid ""
"Let us start with a simple 1D regression problem. This will help us to "
"easily visualize the data and the model, and the results generalize easily "
"to higher-dimensional datasets. We'll explore a simple **linear regression**"
" problem, with :mod:`sklearn.linear_model`."
msgstr ""
"簡単な1次元回帰問題から始めましょう。これにより、データとモデルを簡単に視覚化することができ、結果は高次元のデータセットにも簡単に一般化できます。 "
"単純な **線形回帰** 問題を :mod:`sklearn.linear_model` で探ってみます。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1410
msgid ""
"As we can see, the estimator displays much less variance. However it "
"systematically under-estimates the coefficient. It displays a biased "
"behavior."
msgstr "見てわかるように、この推定量では分散がかなり小さくなっています。 しかし、系統的に係数を過小評価します。 これは偏った振る舞いを示します。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1414
msgid ""
"This is a typical example of **bias/variance tradeof**: non-regularized "
"estimator are not biased, but they can display a lot of variance. Highly-"
"regularized models have little variance, but high bias. This bias is not "
"necessarily a bad thing: what matters is choosing the tradeoff between bias "
"and variance that leads to the best prediction performance. For a specific "
"dataset there is a sweet spot corresponding to the highest complexity that "
"the data can support, depending on the amount of noise and of observations "
"available."
msgstr ""
"これは、 **バイアスとばらつきのトレードオフ** の典型的な例です: 非正規化推定量は偏っていませんが、多くの分散を示すことがあります。 "
"高正則化モデルは分散は少ないですがバイアスは大きいです。 このバイアスは必ずしも悪いことではありません: "
"重要なのは、最良の予測性能をもたらすバイアスと分散のトレードオフを選択することです。 "
"特定のデータセットには、そのデータがサポートできる最高の複雑さに対応するスイートスポットがあります、そしてそれは利用可能なノイズと観測の量に依存します。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1424
msgid "Visualizing the Bias/Variance Tradeoff"
msgstr "バイアスとバリアンスのトレードオフの可視化"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1428
msgid ""
"Given a particular dataset and a model (e.g. a polynomial), we'd like to "
"understand whether bias (underfit) or variance limits prediction, and how to"
" tune the *hyperparameter* (here ``d``, the degree of the polynomial) to "
"give the best fit."
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1433
msgid ""
"On a given data, let us fit a simple polynomial regression model with "
"varying degrees:"
msgstr "与えられたデータについて、次数の異なる単純な多項回帰モデルを当てはめてみましょう:"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1442
msgid ""
"In the above figure, we see fits for three different values of ``d``. For "
"``d = 1``, the data is under-fit. This means that the model is too "
"simplistic: no straight line will ever be a good fit to this data. In this "
"case, we say that the model suffers from high bias. The model itself is "
"biased, and this will be reflected in the fact that the data is poorly fit. "
"At the other extreme, for ``d = 6`` the data is over-fit. This means that "
"the model has too many free parameters (6 in this case) which can be "
"adjusted to perfectly fit the training data. If we add a new point to this "
"plot, though, chances are it will be very far from the curve representing "
"the degree-6 fit. In this case, we say that the model suffers from high "
"variance. The reason for the term \"high variance\" is that if any of the "
"input points are varied slightly, it could result in a very different model."
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1456
msgid ""
"In the middle, for ``d = 2``, we have found a good mid-point. It fits the "
"data fairly well, and does not suffer from the bias and variance problems "
"seen in the figures on either side. What we would like is a way to "
"quantitatively identify bias and variance, and optimize the metaparameters "
"(in this case, the polynomial degree d) in order to determine the best "
"algorithm."
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst-1
msgid "Polynomial regression with scikit-learn"
msgstr "scikit-learnによる多項式回帰"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1465
msgid ""
"A polynomial regression is built by pipelining "
":class:`~sklearn.preprocessing.PolynomialFeatures` and a "
":class:`~sklearn.linear_model.LinearRegression`::"
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1476
msgid "Validation Curves"
msgstr "検証曲線"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1478
msgid "Let us create a dataset like in the example above::"
msgstr "上の例のようなデータセットを作ってみましょう::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1493
msgid ""
"Central to quantify bias and variance of a model is to apply it on *test "
"data*, sampled from the same distribution as the train, but that will "
"capture independent noise::"
msgstr ""
"モデルのバイアスと分散を定量化する中心的な方法は、 *test data* "
"に適用することです、列車と同じ分布からサンプリングされますが、独立したノイズを捕捉します::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1504
msgid ""
"**Validation curve** A validation curve consists in varying a model "
"parameter that controls its complexity (here the degree of the polynomial) "
"and measures both error of the model on training data, and on test data "
"(*eg* with cross-validation). The model parameter is then adjusted so that "
"the test error is minimized:"
msgstr ""
"**検証曲線** 検証曲線は、複雑さを制御するモデルのパラメータを変化させることで構成されます (ここでは多項式の次数) "
"そして、訓練データ、およびテストデータ (*例* クロスバリデーション) に対するモデルの誤差を測定します. "
"次に、テスト誤差が最小になるようにモデルパラメータを調整します:"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1510
msgid ""
"We use :func:`sklearn.model_selection.validation_curve` to compute train and"
" test error, and plot it::"
msgstr ""
":func:`sklearn.model_selection.validation_curve` "
"を使って訓練誤差とテスト誤差を計算し、それをプロットします::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1539
msgid ""
"This figure shows why validation is important. On the left side of the plot,"
" we have very low-degree polynomial, which under-fit the data. This leads to"
" a low explained variance for both the training set and the validation set. "
"On the far right side of the plot, we have a very high degree polynomial, "
"which over-fits the data. This can be seen in the fact that the training "
"explained variance is very high, while on the validation set, it is low. "
"Choosing ``d`` around 4 or 5 gets us the best tradeoff."
msgstr ""
"この図は、なぜ検証が重要なのかを示しています。プロットの左側には、非常に次数の低い多項式があり、データにフィットしていません。このため、訓練セットと検証セットの両方で、説明される分散が低くなります。"
" "
"プロットの右端には、非常に次数の高い多項式があり、データにオーバーフィットしています。これは、トレーニングの説明済み分散が非常に高いのに対して、検証セットでは低いことからもわかります。"
" ``d`` の4、5番あたりを選べば、最高のトレードオフが得られます。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1550
msgid ""
"The astute reader will realize that something is amiss here: in the above "
"plot, ``d = 4`` gives the best results. But in the previous plot, we found "
"that ``d = 6`` vastly over-fits the data. What’s going on here? The "
"difference is the **number of training points** used. In the previous "
"example, there were only eight training points. In this example, we have "
"100. As a general rule of thumb, the more training points used, the more "
"complicated model can be used. But how can you determine for a given model "
"whether more training points will be helpful? A useful diagnostic for this "
"are learning curves."
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1561
msgid "Learning Curves"
msgstr "学習曲線"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1563
msgid ""
"A learning curve shows the training and validation score as a function of "
"the number of training points. Note that when we train on a subset of the "
"training data, the training score is computed using this subset, not the "
"full training set. This curve gives a quantitative view into how beneficial "
"it will be to add training samples."
msgstr ""
"学習曲線は、訓練点と検証点の数の関数として訓練点と検証点のスコアを示します。訓練データのサブセットで訓練する場合、訓練スコアは完全な訓練セットではなく、このサブセットを使用して計算されることに注意してください。この曲線は、学習サンプルを追加することがどれだけ有益かを定量的に示しています。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1561
msgid "**Questions:**"
msgstr "**質問:**"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1573
msgid ""
"As the number of training samples are increased, what do you expect to see "
"for the training score? For the validation score?"
msgstr "学習サンプルの数を増やすと、学習スコアはどうなりますか？ 検証スコアは？"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1575
msgid ""
"Would you expect the training score to be higher or lower than the "
"validation score? Would you ever expect this to change?"
msgstr "学習のスコアが検証のスコアより高くなると予想しますか、低くなると予想しますか？これが変わると思いますか？"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1579
msgid ""
":mod:`scikit-learn` provides "
":func:`sklearn.model_selection.learning_curve`::"
msgstr ""
":mod:`scikit-learn` は :func:`sklearn.model_selection.learning_curve` "
"を提供します::"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1598
msgid "For a ``degree=1`` model"
msgstr "``degree=1`` モデルの場合"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1600
msgid ""
"Note that the validation score *generally increases* with a growing training"
" set, while the training score *generally decreases* with a growing training"
" set. As the training size increases, they will converge to a single value."
msgstr ""
"検証スコアは訓練セットが大きくなるにつれて *一般的に増加* し、訓練スコアは訓練セットが大きくなるにつれて *一般的に減少* "
"することに注意してください。訓練サイズが大きくなるにつれて、それらは単一の値に収束します。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1605
msgid ""
"From the above discussion, we know that ``d = 1`` is a high-bias estimator "
"which under-fits the data. This is indicated by the fact that both the "
"training and validation scores are low. When confronted with this type of "
"learning curve, we can expect that adding more training data will not help: "
"both lines converge to a relatively low score."
msgstr ""
"以上の議論から、 ``d = 1`` "
"はデータにフィットしない高バイアス推定量であることがわかります。これは、トレーニングスコアと検証スコアの両方が低いという事実が示しています。 "
"このような学習曲線に直面したとき、トレーニングデータを増やしても、何の役にも立たないことが予想されます: どちらの線も比較的低いスコアに収束します。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1614
msgid ""
"**When the learning curves have converged to a low score, we have a high "
"bias model.**"
msgstr "**学習曲線が低いスコアに収束したとき、バイアスの高いモデルとなります。**"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1617
msgid "A high-bias model can be improved by:"
msgstr "高バイアスモデルは、次のようにして改善できます:"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1619
msgid "Using a more sophisticated model (i.e. in this case, increase ``d``)"
msgstr "より洗練されたモデルの使用 (つまり、この場合は ``d`` を増やします)"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1620
msgid "Gather more features for each sample."
msgstr "各サンプルについて、より多くの特徴を集めます。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1621
msgid "Decrease regularization in a regularized model."
msgstr "正則化モデルの正則化を減らします。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1623
msgid ""
"Increasing the number of samples, however, does not improve a high-bias "
"model."
msgstr "しかし、サンプル数を増やしても、高バイアスモデルは改善されません。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1626
msgid "Now let's look at a high-variance (i.e. over-fit) model:"
msgstr "次に、高バリアンス (つまりオーバーフィット) モデルを見てみましょう:"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1633
msgid "For a ``degree=15`` model"
msgstr "``degree=15`` モデルの場合"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1636
msgid ""
"Here we show the learning curve for ``d = 15``. From the above discussion, "
"we know that ``d = 15`` is a **high-variance** estimator which **over-fits**"
" the data. This is indicated by the fact that the training score is much "
"higher than the validation score. As we add more samples to this training "
"set, the training score will continue to decrease, while the cross-"
"validation error will continue to increase, until they meet in the middle."
msgstr ""
"ここでは、 ``d = 15`` の学習曲線を示します。 上記の議論から、``d = 15`` はデータに **オーバーフィット** する "
"**高分散** 推定器であることがわかります。 これは、トレーニングスコアが検証スコアよりもはるかに高いという事実が示しています。 "
"このトレーニングセットにさらにサンプルを追加すると、トレーニングスコアは減少し続け、クロスバリデーション誤差は増加し続け、両者が中間で出会うまで続きます。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1646
msgid ""
"**Learning curves that have not yet converged with the full training set "
"indicate a high-variance, over-fit model.**"
msgstr "**全トレーニングセットでまだ収束していない学習曲線は、高バリアンスでオーバーフィットのモデルを示しています。**"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1649
msgid "A high-variance model can be improved by:"
msgstr "高バリアンスモデルは、次のようにして改善できます:"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1651
msgid "Gathering more training samples."
msgstr "より多くのトレーニングサンプルを集めます。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1652
msgid ""
"Using a less-sophisticated model (i.e. in this case, make ``d`` smaller)"
msgstr "あまり洗練されていないモデルの使用 (つまり、この場合は ``d`` を小さくします)"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1654
msgid "Increasing regularization."
msgstr "正則化を進めます。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1656
msgid ""
"In particular, gathering more features for each sample will not help the "
"results."
msgstr "特に、各サンプルについてより多くの特徴を集めても、結果の役には立ちません。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1660
msgid "Summary on model selection"
msgstr "モデル選択に関するまとめ"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1662
msgid ""
"We’ve seen above that an under-performing algorithm can be due to two "
"possible situations: high bias (under-fitting) and high variance (over-"
"fitting). In order to evaluate our algorithm, we set aside a portion of our "
"training data for cross-validation. Using the technique of learning curves, "
"we can train on progressively larger subsets of the data, evaluating the "
"training error and cross-validation error to determine whether our algorithm"
" has high variance or high bias. But what do we do with this information?"
msgstr ""
"アルゴリズムが十分に機能していない原因として、次の2つが考えられることは前述したとおりです: 高いバイアス(アンダーフィット) と高い分散 "
"(オーバーフィット)です。 我々のアルゴリズムを評価するために、トレーニングデータの一部をクロスバリデーション用に確保しました。 "
"学習曲線のテクニックを使えば、データの部分集合を徐々に大きくして訓練し、訓練誤差と交差検証誤差を評価して、アルゴリズムが高分散か高バイアスかを判断することができます。"
" しかし、この情報をどうするのでしょうか？"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1672
msgid "High Bias"
msgstr "高いバイアス"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1674
msgid "If a model shows high **bias**, the following actions might help:"
msgstr "モデルが高い **バイアス** を示した場合、以下の対処が役立つかもしれません:"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1676
msgid ""
"**Add more features**. In our example of predicting home prices, it may be "
"helpful to make use of information such as the neighborhood the house is in,"
" the year the house was built, the size of the lot, etc. Adding these "
"features to the training and test sets can improve a high-bias estimator"
msgstr ""
"**より多くの機能を追加します** 。住宅価格を予測する例で言えば、その家がある地域、 "
"家が建てられた年、土地の広さなどなどの情報を活用することが役に立つかもしれません。これらの特徴をトレーニングセットとテストセットに加えることで、高バイアス推定量を改善することができます。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1681
msgid ""
"**Use a more sophisticated model**. Adding complexity to the model can help "
"improve on bias. For a polynomial fit, this can be accomplished by "
"increasing the degree d. Each learning technique has its own methods of "
"adding complexity."
msgstr ""
"**より洗練されたモデルを使います** 。 モデルに複雑さを加えることで、バイアスを改善することができます。 "
"多項式フィットの場合、次数dを大きくすることで達成できます。 それぞれの学習技術には、複雑さを加える独自の方法があります。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1685
msgid ""
"**Use fewer samples**. Though this will not improve the classification, a "
"high-bias algorithm can attain nearly the same error with a smaller training"
" sample. For algorithms which are computationally expensive, reducing the "
"training sample size can lead to very large improvements in speed."
msgstr ""
"**サンプル数を減らします** 。 "
"これは分類を改善するものではありませんが、ハイバイアスアルゴリズムは、より少ない訓練サンプルでほぼ同じ誤差を達成することができます。 "
"計算コストの高いアルゴリズムでは、学習サンプルサイズを小さくすることで、スピードが非常に大きく向上することがあります。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1690
msgid ""
"**Decrease regularization**. Regularization is a technique used to impose "
"simplicity in some machine learning models, by adding a penalty term that "
"depends on the characteristics of the parameters. If a model has high bias, "
"decreasing the effect of regularization can lead to better results."
msgstr ""
"**正則化を減らします** "
"。正則化は、パラメータの特性に依存するペナルティ項を追加することによって、いくつかの機械学習モデルに単純さを課すために使用されるテクニックです。 "
"モデルのバイアスが大きい場合は、正則化の効果を小さくすることで、より良い結果を得ることができます。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1697
msgid "High Variance"
msgstr "高分散"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1699
msgid "If a model shows **high variance**, the following actions might help:"
msgstr "モデルが高い **分散** を示した場合、以下の対処が役立つかもしれません:"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1702
msgid ""
"**Use fewer features**. Using a feature selection technique may be useful, "
"and decrease the over-fitting of the estimator."
msgstr "**少ない機能を使います**。 特徴選択テクニックを使うことは有効で、推定値のオーバーフィッティングを減らすことができます。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1704
msgid ""
"**Use a simpler model**. Model complexity and over-fitting go hand-in-hand."
msgstr "**よりシンプルなモデルを使います**　。モデルの複雑さとオーバーフィッティングは密接に関係しています。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1706
msgid ""
"**Use more training samples**. Adding training samples can reduce the effect"
" of over-fitting, and lead to improvements in a high variance estimator."
msgstr ""
"**より多くのトレーニングサンプルを使用します** 。 "
"学習サンプルを追加することで、オーバーフィッティングの影響を軽減し、高分散推定量の改善につながります。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1709
msgid ""
"**Increase Regularization**. Regularization is designed to prevent over-"
"fitting. In a high-variance model, increasing regularization can lead to "
"better results."
msgstr ""
"**レギュラー化します** 。正則化はオーバーフィッティングを防ぐために設計されています。 高分散モデルでは、正則化を進めるとより良い結果が得られます。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1713
msgid ""
"These choices become very important in real-world situations. For example, "
"due to limited telescope time, astronomers must seek a balance between "
"observing a large number of objects, and observing a large number of "
"features for each object. Determining which is more important for a "
"particular learning task can inform the observing strategy that the "
"astronomer employs."
msgstr ""
"このような選択は、実社会では非常に重要になります。 "
"例えば、望遠鏡の使用時間が限られているため、天文学者は多数の天体を観測することと、各天体について多数の特徴を観測することのバランスを追求しなければなりません。特定の学習課題にとってどちらが重要かを判断することで、天文学者が採用する観測戦略に反映させることができます。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1721
msgid "A last word of caution: separate validation and test set"
msgstr "最後に一言: 検証セットとテストセットの分離"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1723
msgid ""
"Using validation schemes to determine hyper-parameters means that we are "
"fitting the hyper-parameters to the particular validation set. In the same "
"way that parameters can be over-fit to the training set, hyperparameters can"
" be over-fit to the validation set. Because of this, the validation error "
"tends to under-predict the classification error of new data."
msgstr ""
"ハイパーパラメータを決定するために検証スキームを使用することは、特定の検証セットにハイパーパラメータをフィットさせることを意味します。パラメータが訓練セットにオーバーフィットすることがあるのと同じように、ハイパーパラメータも検証セットにオーバーフィットすることがあります。このため、検証誤差は新しいデータの分類誤差を過小予測する傾向があります。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1730
msgid "For this reason, it is recommended to split the data into three sets:"
msgstr "このため、データを3つのセットに分けることが推奨されます:"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1732
msgid ""
"The **training set**, used to train the model (usually ~60% of the data)"
msgstr "モデルの学習に使用される **学習セット** (通常 ~60％のデータ)"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1734
msgid ""
"The **validation set**, used to validate the model (usually ~20% of the "
"data)"
msgstr "モデルの検証に使用される **検証セット** (通常 ~20％のデータ)"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1736
msgid ""
"The **test set**, used to evaluate the expected error of the validated model"
" (usually ~20% of the data)"
msgstr "検証済みモデルの期待誤差を評価するための **テストセット** (通常 ~20％のデータ)"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1739
msgid ""
"Many machine learning practitioners do not separate test set and validation "
"set. But if your goal is to gauge the error of a model on unknown data, "
"using an independent test set is vital."
msgstr ""
"多くの機械学習の専門家は、テストセットと検証セットを分けていません。 "
"しかし、未知のデータに対するモデルの誤差を測定することが目的であれば、独立したテストセットの使用は不可欠です。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1748
msgid "**Going further**"
msgstr ""

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1750
msgid ""
"The `documentation of scikit-learn <https://scikit-learn.org>`__ is very "
"complete and didactic."
msgstr ""
"`documentation of scikit-learn <https://scikit-learn.org>`__ "
"は非常に完成度が高く、教訓的です。"

#: ../../scientific-python-lectures/packages/scikit-learn/index.rst:1753
msgid ""
"`Introduction to Machine Learning with Python "
"<https://shop.oreilly.com/product/0636920030515.do>`_, by Sarah Guido, "
"Andreas Müller (`notebooks available here "
"<https://github.com/amueller/introduction_to_ml_with_python>`_)."
msgstr ""

#: ../../scientific-python-lectures/packages/statistics/auto_examples/index.rst:3
#: ../../scientific-python-lectures/packages/statistics/auto_examples/index.rst:4
msgid "Full code for the figures"
msgstr "画像の全コード"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/index.rst:5
#: ../../scientific-python-lectures/packages/statistics/auto_examples/index.rst:6
msgid "Code examples for the statistics chapter."
msgstr "統計の章のコード例。"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/index.rst:24
#: ../../scientific-python-lectures/packages/statistics/auto_examples/index.rst:25
msgid ""
":ref:`sphx_glr_packages_statistics_auto_examples_plot_paired_boxplots.py`"
msgstr ""
":ref:`sphx_glr_packages_statistics_auto_examples_plot_paired_boxplots.py`"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/index.rst:41
#: ../../scientific-python-lectures/packages/statistics/auto_examples/index.rst:42
msgid ":ref:`sphx_glr_packages_statistics_auto_examples_plot_pandas.py`"
msgstr ":ref:`sphx_glr_packages_statistics_auto_examples_plot_pandas.py`"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/index.rst:58
#: ../../scientific-python-lectures/packages/statistics/auto_examples/index.rst:59
msgid ""
":ref:`sphx_glr_packages_statistics_auto_examples_plot_iris_analysis.py`"
msgstr ""
":ref:`sphx_glr_packages_statistics_auto_examples_plot_iris_analysis.py`"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/index.rst:75
#: ../../scientific-python-lectures/packages/statistics/auto_examples/index.rst:76
msgid ":ref:`sphx_glr_packages_statistics_auto_examples_plot_regression.py`"
msgstr ":ref:`sphx_glr_packages_statistics_auto_examples_plot_regression.py`"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/index.rst:92
#: ../../scientific-python-lectures/packages/statistics/auto_examples/index.rst:93
msgid ""
":ref:`sphx_glr_packages_statistics_auto_examples_plot_regression_3d.py`"
msgstr ""
":ref:`sphx_glr_packages_statistics_auto_examples_plot_regression_3d.py`"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/index.rst:109
#: ../../scientific-python-lectures/packages/statistics/auto_examples/index.rst:110
msgid ""
":ref:`sphx_glr_packages_statistics_auto_examples_plot_wage_education_gender.py`"
msgstr ""
":ref:`sphx_glr_packages_statistics_auto_examples_plot_wage_education_gender.py`"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/index.rst:126
#: ../../scientific-python-lectures/packages/statistics/auto_examples/index.rst:127
msgid ":ref:`sphx_glr_packages_statistics_auto_examples_plot_wage_data.py`"
msgstr ":ref:`sphx_glr_packages_statistics_auto_examples_plot_wage_data.py`"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/index.rst:143
#: ../../scientific-python-lectures/packages/statistics/auto_examples/index.rst:144
msgid ":ref:`sphx_glr_packages_statistics_auto_examples_plot_airfare.py`"
msgstr ":ref:`sphx_glr_packages_statistics_auto_examples_plot_airfare.py`"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/index.rst:171
#: ../../scientific-python-lectures/packages/statistics/auto_examples/index.rst:172
#: ../../scientific-python-lectures/packages/statistics/auto_examples/solutions/index.rst:6
msgid "Solutions to this chapter's exercises"
msgstr "この章の練習問題の解答"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/index.rst:190
#: ../../scientific-python-lectures/packages/statistics/auto_examples/index.rst:191
#: ../../scientific-python-lectures/packages/statistics/auto_examples/solutions/index.rst:25
msgid ""
":ref:`sphx_glr_packages_statistics_auto_examples_solutions_plot_brain_size.py`"
msgstr ""
":ref:`sphx_glr_packages_statistics_auto_examples_solutions_plot_brain_size.py`"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/index.rst:219
#: ../../scientific-python-lectures/packages/statistics/auto_examples/index.rst:220
msgid ""
":download:`Download all examples in Python source code: "
"auto_examples_python.zip "
"</packages/statistics/auto_examples/auto_examples_python.zip>`"
msgstr ""
":download:`Download all examples in Python source code: "
"auto_examples_python.zip "
"</packages/statistics/auto_examples/auto_examples_python.zip>`"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/index.rst:223
#: ../../scientific-python-lectures/packages/statistics/auto_examples/index.rst:224
msgid ""
":download:`Download all examples in Jupyter notebooks: "
"auto_examples_jupyter.zip "
"</packages/statistics/auto_examples/auto_examples_jupyter.zip>`"
msgstr ""
":download:`Download all examples in Jupyter notebooks: "
"auto_examples_jupyter.zip "
"</packages/statistics/auto_examples/auto_examples_jupyter.zip>`"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_airfare.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_packages_statistics_auto_examples_plot_airfare.py>` to "
"download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_packages_statistics_auto_examples_plot_airfare.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_airfare.rst:22
msgid "Air fares before and after 9/11"
msgstr ""

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_airfare.rst:24
msgid "This is a business-intelligence (BI) like application."
msgstr ""

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_airfare.rst:26
msgid ""
"What is interesting here is that we may want to study fares as a function of"
" the year, paired accordingly to the trips, or forgetting the year, only as "
"a function of the trip endpoints."
msgstr ""

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_airfare.rst:30
msgid ""
"Using statsmodels' linear models, we find that both with an OLS (ordinary "
"least square) and a robust fit, the intercept and the slope are "
"significantly non-zero: the air fares have decreased between 2000 and 2001, "
"and their dependence on distance travelled has also decreased"
msgstr ""

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_airfare.rst:46
#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_wage_data.rst:48
msgid "Load the data"
msgstr ""

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_airfare.rst:93
msgid ""
"Make a dataframe with the year as an attribute, instead of separate columns"
msgstr ""

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_airfare.rst:132
#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_wage_data.rst:94
msgid "Plot scatter matrices highlighting different aspects"
msgstr ""

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_airfare.rst:158
msgid "Plot the difference in fare"
msgstr ""

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_airfare.rst:181
msgid ""
"Statistical testing: dependence of fare on distance and number of passengers"
msgstr ""

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_airfare.rst:201
msgid ""
"Statistical testing: regression of fare on distance: 2001/2000 difference"
msgstr ""

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_airfare.rst:226
msgid ""
":download:`Download Jupyter notebook: plot_airfare.ipynb "
"<plot_airfare.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plot_airfare.ipynb "
"<plot_airfare.ipynb>`"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_airfare.rst:230
msgid ""
":download:`Download Python source code: plot_airfare.py <plot_airfare.py>`"
msgstr ""
":download:`Download Python source code: plot_airfare.py <plot_airfare.py>`"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_airfare.rst:234
msgid ":download:`Download zipped: plot_airfare.zip <plot_airfare.zip>`"
msgstr ":download:`Download zipped: plot_airfare.zip <plot_airfare.zip>`"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_iris_analysis.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_packages_statistics_auto_examples_plot_iris_analysis.py>`"
" to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_packages_statistics_auto_examples_plot_iris_analysis.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_iris_analysis.rst:22
msgid "Analysis of Iris petal and sepal sizes"
msgstr "アイリスの花弁とがく片の大きさの分析"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_iris_analysis.rst:24
msgid "Illustrate an analysis on a real dataset:"
msgstr "実際のデータセットで分析を説明します:"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_iris_analysis.rst:26
msgid "Visualizing the data to formulate intuitions"
msgstr "直観を形成するためにデータを視覚化する"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_iris_analysis.rst:27
msgid "Fitting of a linear model"
msgstr "線形モデルのフィッティング"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_iris_analysis.rst:28
msgid ""
"Hypothesis test of the effect of a categorical variable in the presence of a"
" continuous confound"
msgstr "連続的交絡因子が存在する場合のカテゴリー変数の効果の仮説検定"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_iris_analysis.rst:49
msgid "Plot a scatter matrix"
msgstr "散布行列をプロットします"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_iris_analysis.rst:68
msgid "Statistical analysis"
msgstr "統計分析"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_iris_analysis.rst:97
msgid ""
":download:`Download Jupyter notebook: plot_iris_analysis.ipynb "
"<plot_iris_analysis.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plot_iris_analysis.ipynb "
"<plot_iris_analysis.ipynb>`"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_iris_analysis.rst:101
msgid ""
":download:`Download Python source code: plot_iris_analysis.py "
"<plot_iris_analysis.py>`"
msgstr ""
":download:`Download Python source code: plot_iris_analysis.py "
"<plot_iris_analysis.py>`"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_iris_analysis.rst:105
msgid ""
":download:`Download zipped: plot_iris_analysis.zip <plot_iris_analysis.zip>`"
msgstr ""
":download:`Download zipped: plot_iris_analysis.zip <plot_iris_analysis.zip>`"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_paired_boxplots.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_packages_statistics_auto_examples_plot_paired_boxplots.py>`"
" to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_packages_statistics_auto_examples_plot_paired_boxplots.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_paired_boxplots.rst:22
msgid "Boxplots and paired differences"
msgstr "箱ひげ図と一組の差"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_paired_boxplots.rst:24
msgid ""
"Plot boxplots for FSIQ, PIQ, and the paired difference between the two: "
"while the spread (error bars) for FSIQ and PIQ are very large, there is a "
"systematic (common) effect due to the subjects. This effect is cancelled out"
" in the difference and the spread of the difference (\"paired\" by subject) "
"is much smaller than the spread of the individual measures."
msgstr ""
"FSIQ、PIQ、両者の対の差の箱ひげ図をプロットします: FSIQとPIQのスプレッド (エラーバー) は非常に大きいですが、被験者による系統的 "
"(共通) 効果があります。 この効果は差で相殺され、差の広がり (被験者ごとの \"ペア\") は、個々の測定値の広がりよりもはるかに小さいです。"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_paired_boxplots.rst:61
msgid ""
":download:`Download Jupyter notebook: plot_paired_boxplots.ipynb "
"<plot_paired_boxplots.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plot_paired_boxplots.ipynb "
"<plot_paired_boxplots.ipynb>`"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_paired_boxplots.rst:65
msgid ""
":download:`Download Python source code: plot_paired_boxplots.py "
"<plot_paired_boxplots.py>`"
msgstr ""
":download:`Download Python source code: plot_paired_boxplots.py "
"<plot_paired_boxplots.py>`"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_paired_boxplots.rst:69
msgid ""
":download:`Download zipped: plot_paired_boxplots.zip "
"<plot_paired_boxplots.zip>`"
msgstr ""
":download:`Download zipped: plot_paired_boxplots.zip "
"<plot_paired_boxplots.zip>`"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_pandas.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_packages_statistics_auto_examples_plot_pandas.py>` to "
"download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_packages_statistics_auto_examples_plot_pandas.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_pandas.rst:22
msgid "Plotting simple quantities of a pandas dataframe"
msgstr "pandasデータフレームの単純な量をプロットする"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_pandas.rst:24
msgid ""
"This example loads from a CSV file data with mixed numerical and categorical"
" entries, and plots a few quantities, separately for females and males, "
"thanks to the pandas integrated plotting tool (that uses matplotlib behind "
"the scene)."
msgstr ""
"この例では、数値とカテゴリーが混在したデータをCSVファイルから読み込み、(裏でmatplotlibを使っている) "
"pandasの統合プロットツールを使って、女性と男性に分けていくつかの量をプロットしています。"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_pandas.rst:29
msgid "See http://pandas.pydata.org/pandas-docs/stable/visualization.html"
msgstr "http://pandas.pydata.org/pandas-docs/stable/visualization.html を参照"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_pandas.rst:63
msgid ""
":download:`Download Jupyter notebook: plot_pandas.ipynb <plot_pandas.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plot_pandas.ipynb <plot_pandas.ipynb>`"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_pandas.rst:67
msgid ""
":download:`Download Python source code: plot_pandas.py <plot_pandas.py>`"
msgstr ""
":download:`Download Python source code: plot_pandas.py <plot_pandas.py>`"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_pandas.rst:71
msgid ":download:`Download zipped: plot_pandas.zip <plot_pandas.zip>`"
msgstr ":download:`Download zipped: plot_pandas.zip <plot_pandas.zip>`"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_regression.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_packages_statistics_auto_examples_plot_regression.py>` to"
" download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_packages_statistics_auto_examples_plot_regression.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_regression.rst:22
msgid "Simple Regression"
msgstr "単純回帰"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_regression.rst:24
msgid ""
"Fit a simple linear regression using 'statsmodels', compute corresponding "
"p-values."
msgstr "'statsmodels' を使って単純な線形回帰をフィットし、対応するp値を計算します。"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_regression.rst:47
#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_regression_3d.rst:52
msgid "Generate and show the data"
msgstr "データの作成と表示をします"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_regression.rst:67
#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_regression_3d.rst:79
msgid ""
"Multilinear regression model, calculating fit, P-values, confidence "
"intervals etc."
msgstr "重回帰モデル、適合度、P値、信頼区間などの計算をします。"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_regression.rst:94
msgid "Plot the fitted model"
msgstr "適合モデルをプロットします"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_regression.rst:118
msgid ""
":download:`Download Jupyter notebook: plot_regression.ipynb "
"<plot_regression.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plot_regression.ipynb "
"<plot_regression.ipynb>`"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_regression.rst:122
msgid ""
":download:`Download Python source code: plot_regression.py "
"<plot_regression.py>`"
msgstr ""
":download:`Download Python source code: plot_regression.py "
"<plot_regression.py>`"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_regression.rst:126
msgid ":download:`Download zipped: plot_regression.zip <plot_regression.zip>`"
msgstr ""
":download:`Download zipped: plot_regression.zip <plot_regression.zip>`"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_regression_3d.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_packages_statistics_auto_examples_plot_regression_3d.py>`"
" to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_packages_statistics_auto_examples_plot_regression_3d.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_regression_3d.rst:22
msgid "Multiple Regression"
msgstr "重回帰"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_regression_3d.rst:24
msgid ""
"Calculate using 'statsmodels' just the best fit, or all the corresponding "
"statistical parameters."
msgstr "'statsmodels' を使用して、最良フィットのみ、または対応するすべての統計パラメータを計算します。"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_regression_3d.rst:27
msgid "Also shows how to make 3d plots."
msgstr "3Dプロットの作り方も紹介します。"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_regression_3d.rst:124
msgid ""
":download:`Download Jupyter notebook: plot_regression_3d.ipynb "
"<plot_regression_3d.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plot_regression_3d.ipynb "
"<plot_regression_3d.ipynb>`"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_regression_3d.rst:128
msgid ""
":download:`Download Python source code: plot_regression_3d.py "
"<plot_regression_3d.py>`"
msgstr ""
":download:`Download Python source code: plot_regression_3d.py "
"<plot_regression_3d.py>`"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_regression_3d.rst:132
msgid ""
":download:`Download zipped: plot_regression_3d.zip <plot_regression_3d.zip>`"
msgstr ""
":download:`Download zipped: plot_regression_3d.zip <plot_regression_3d.zip>`"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_wage_data.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_packages_statistics_auto_examples_plot_wage_data.py>` to "
"download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_packages_statistics_auto_examples_plot_wage_data.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_wage_data.rst:22
msgid "Visualizing factors influencing wages"
msgstr ""

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_wage_data.rst:24
msgid ""
"This example uses seaborn to quickly plot various factors relating wages, "
"experience, and education."
msgstr ""

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_wage_data.rst:27
msgid ""
"Seaborn (https://seaborn.pydata.org) is a library that combines "
"visualization and statistical fits to show trends in data."
msgstr ""

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_wage_data.rst:30
msgid ""
"Note that importing seaborn changes the matplotlib style to have an \"excel-"
"like\" feeling. This changes affect other matplotlib figures. To restore "
"defaults once this example is run, we would need to call plt.rcdefaults()."
msgstr ""

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_wage_data.rst:118
msgid "Plot a simple regression"
msgstr ""

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_wage_data.rst:138
msgid ""
":download:`Download Jupyter notebook: plot_wage_data.ipynb "
"<plot_wage_data.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plot_wage_data.ipynb "
"<plot_wage_data.ipynb>`"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_wage_data.rst:142
msgid ""
":download:`Download Python source code: plot_wage_data.py "
"<plot_wage_data.py>`"
msgstr ""
":download:`Download Python source code: plot_wage_data.py "
"<plot_wage_data.py>`"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_wage_data.rst:146
msgid ":download:`Download zipped: plot_wage_data.zip <plot_wage_data.zip>`"
msgstr ":download:`Download zipped: plot_wage_data.zip <plot_wage_data.zip>`"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_wage_education_gender.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_packages_statistics_auto_examples_plot_wage_education_gender.py>`"
" to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_packages_statistics_auto_examples_plot_wage_education_gender.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_wage_education_gender.rst:22
msgid "Test for an education/gender interaction in wages"
msgstr ""

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_wage_education_gender.rst:24
msgid ""
"Wages depend mostly on education. Here we investigate how this dependence is"
" related to gender: not only does gender create an offset in wages, it also "
"seems that wages increase more with education for males than females."
msgstr ""

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_wage_education_gender.rst:29
msgid ""
"Does our data support this last hypothesis? We will test this using "
"statsmodels' formulas "
"(http://statsmodels.sourceforge.net/stable/example_formulas.html)."
msgstr ""

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_wage_education_gender.rst:35
msgid "Load and massage the data"
msgstr ""

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_wage_education_gender.rst:79
msgid "simple plotting"
msgstr ""

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_wage_education_gender.rst:94
msgid "statistical analysis"
msgstr "統計分析"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_wage_education_gender.rst:112
msgid ""
"The plots above highlight that there is not only a different offset in wage "
"but also a different slope"
msgstr ""

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_wage_education_gender.rst:115
msgid "We need to model this using an interaction"
msgstr ""

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_wage_education_gender.rst:130
msgid ""
"Looking at the p-value of the interaction of gender and education, the data "
"does not support the hypothesis that education benefits males more than "
"female (p-value > 0.05)."
msgstr ""

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_wage_education_gender.rst:153
msgid ""
":download:`Download Jupyter notebook: plot_wage_education_gender.ipynb "
"<plot_wage_education_gender.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plot_wage_education_gender.ipynb "
"<plot_wage_education_gender.ipynb>`"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_wage_education_gender.rst:157
msgid ""
":download:`Download Python source code: plot_wage_education_gender.py "
"<plot_wage_education_gender.py>`"
msgstr ""
":download:`Download Python source code: plot_wage_education_gender.py "
"<plot_wage_education_gender.py>`"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/plot_wage_education_gender.rst:161
msgid ""
":download:`Download zipped: plot_wage_education_gender.zip "
"<plot_wage_education_gender.zip>`"
msgstr ""
":download:`Download zipped: plot_wage_education_gender.zip "
"<plot_wage_education_gender.zip>`"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/sg_execution_times.rst:9
msgid ""
"**00:00.000** total execution time for 8 files **from "
"packages/statistics/auto_examples**:"
msgstr ""
"**00:00.000** total execution time for 8 files **from "
"packages/statistics/auto_examples**:"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/sg_execution_times.rst:35
msgid ""
":ref:`sphx_glr_packages_statistics_auto_examples_plot_airfare.py` "
"(``plot_airfare.py``)"
msgstr ""
":ref:`sphx_glr_packages_statistics_auto_examples_plot_airfare.py` "
"(``plot_airfare.py``)"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/sg_execution_times.rst:38
msgid ""
":ref:`sphx_glr_packages_statistics_auto_examples_plot_iris_analysis.py` "
"(``plot_iris_analysis.py``)"
msgstr ""
":ref:`sphx_glr_packages_statistics_auto_examples_plot_iris_analysis.py` "
"(``plot_iris_analysis.py``)"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/sg_execution_times.rst:41
msgid ""
":ref:`sphx_glr_packages_statistics_auto_examples_plot_paired_boxplots.py` "
"(``plot_paired_boxplots.py``)"
msgstr ""
":ref:`sphx_glr_packages_statistics_auto_examples_plot_paired_boxplots.py` "
"(``plot_paired_boxplots.py``)"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/sg_execution_times.rst:44
msgid ""
":ref:`sphx_glr_packages_statistics_auto_examples_plot_pandas.py` "
"(``plot_pandas.py``)"
msgstr ""
":ref:`sphx_glr_packages_statistics_auto_examples_plot_pandas.py` "
"(``plot_pandas.py``)"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/sg_execution_times.rst:47
msgid ""
":ref:`sphx_glr_packages_statistics_auto_examples_plot_regression.py` "
"(``plot_regression.py``)"
msgstr ""
":ref:`sphx_glr_packages_statistics_auto_examples_plot_regression.py` "
"(``plot_regression.py``)"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/sg_execution_times.rst:50
msgid ""
":ref:`sphx_glr_packages_statistics_auto_examples_plot_regression_3d.py` "
"(``plot_regression_3d.py``)"
msgstr ""
":ref:`sphx_glr_packages_statistics_auto_examples_plot_regression_3d.py` "
"(``plot_regression_3d.py``)"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/sg_execution_times.rst:53
msgid ""
":ref:`sphx_glr_packages_statistics_auto_examples_plot_wage_data.py` "
"(``plot_wage_data.py``)"
msgstr ""
":ref:`sphx_glr_packages_statistics_auto_examples_plot_wage_data.py` "
"(``plot_wage_data.py``)"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/sg_execution_times.rst:56
msgid ""
":ref:`sphx_glr_packages_statistics_auto_examples_plot_wage_education_gender.py`"
" (``plot_wage_education_gender.py``)"
msgstr ""
":ref:`sphx_glr_packages_statistics_auto_examples_plot_wage_education_gender.py`"
" (``plot_wage_education_gender.py``)"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/solutions/plot_brain_size.rst:13
msgid ""
":ref:`Go to the end "
"<sphx_glr_download_packages_statistics_auto_examples_solutions_plot_brain_size.py>`"
" to download the full example code."
msgstr ""
":ref:`最後まで<sphx_glr_download_packages_statistics_auto_examples_solutions_plot_brain_size.py>`"
" をクリックすると完全なサンプルコードをダウンロードできます。"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/solutions/plot_brain_size.rst:22
msgid "Relating Gender and IQ"
msgstr ""

#: ../../scientific-python-lectures/packages/statistics/auto_examples/solutions/plot_brain_size.rst:24
#: ../../scientific-python-lectures/packages/statistics/index.rst:744
msgid ""
"Going back to the brain size + IQ data, test if the VIQ of male and female "
"are different after removing the effect of brain size, height and weight."
msgstr "脳の大きさ + IQ のデータに戻り、脳の大きさ、身長、体重の影響を取り除いた後、男女のVIQが異なるかどうかを検証します。"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/solutions/plot_brain_size.rst:28
msgid ""
"Notice that here 'Gender' is a categorical value. As it is a non-float data "
"type, statsmodels is able to automatically infer this."
msgstr ""

#: ../../scientific-python-lectures/packages/statistics/auto_examples/solutions/plot_brain_size.rst:53
msgid ""
"Here we plot a scatter matrix to get intuitions on our results. This goes "
"beyond what was asked in the exercise"
msgstr ""

#: ../../scientific-python-lectures/packages/statistics/auto_examples/solutions/plot_brain_size.rst:96
msgid ""
":download:`Download Jupyter notebook: plot_brain_size.ipynb "
"<plot_brain_size.ipynb>`"
msgstr ""
":download:`Download Jupyter notebook: plot_brain_size.ipynb "
"<plot_brain_size.ipynb>`"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/solutions/plot_brain_size.rst:100
msgid ""
":download:`Download Python source code: plot_brain_size.py "
"<plot_brain_size.py>`"
msgstr ""
":download:`Download Python source code: plot_brain_size.py "
"<plot_brain_size.py>`"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/solutions/plot_brain_size.rst:104
msgid ":download:`Download zipped: plot_brain_size.zip <plot_brain_size.zip>`"
msgstr ""
":download:`Download zipped: plot_brain_size.zip <plot_brain_size.zip>`"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/solutions/sg_execution_times.rst:9
msgid ""
"**00:00.000** total execution time for 1 file **from "
"packages/statistics/auto_examples/solutions**:"
msgstr ""
"**00:00.000** total execution time for 1 file **from "
"packages/statistics/auto_examples/solutions**:"

#: ../../scientific-python-lectures/packages/statistics/auto_examples/solutions/sg_execution_times.rst:35
msgid ""
":ref:`sphx_glr_packages_statistics_auto_examples_solutions_plot_brain_size.py`"
" (``plot_brain_size.py``)"
msgstr ""
":ref:`sphx_glr_packages_statistics_auto_examples_solutions_plot_brain_size.py`"
" (``plot_brain_size.py``)"

#: ../../scientific-python-lectures/packages/statistics/index.rst:17
msgid "Statistics in Python"
msgstr "Pythonで統計"

#: ../../scientific-python-lectures/packages/statistics/index.rst:19
msgid "**Author**: *Gaël Varoquaux*"
msgstr "**著者**: *Gaël Varoquaux*"

#: ../../scientific-python-lectures/packages/statistics/index.rst-1
msgid "**Requirements**"
msgstr "**必要条件**"

#: ../../scientific-python-lectures/packages/statistics/index.rst:23
msgid "Standard scientific Python environment (NumPy, SciPy, matplotlib)"
msgstr "標準的な科学的Python環境 (NumPy, SciPy, matplotlib)"

#: ../../scientific-python-lectures/packages/statistics/index.rst:25
msgid "`Pandas <https://pandas.pydata.org/>`__"
msgstr "`Pandas <https://pandas.pydata.org/>`__"

#: ../../scientific-python-lectures/packages/statistics/index.rst:27
msgid "`Statsmodels <https://www.statsmodels.org/>`__"
msgstr "`Statsmodels <https://www.statsmodels.org/>`__"

#: ../../scientific-python-lectures/packages/statistics/index.rst:29
msgid "`Seaborn <https://seaborn.pydata.org>`__"
msgstr "`Seaborn <https://seaborn.pydata.org>`__"

#: ../../scientific-python-lectures/packages/statistics/index.rst:31
msgid ""
"To install Python and these dependencies, we recommend that you download "
"`Anaconda Python <https://www.anaconda.com/distribution/>`_ or, preferably, "
"use the package manager if you are under Ubuntu or other linux."
msgstr ""
"Pythonとこれらの依存関係をインストールするには、 `Anaconda Python "
"<https://www.anaconda.com/distribution/>`_ "
"をダウンロードするか、Ubuntuやその他のlinuxを使用している場合は、パッケージマネージャを使用することをお勧めします。"

#: ../../scientific-python-lectures/packages/statistics/index.rst:37
msgid ""
"**Bayesian statistics in Python**: This chapter does not cover tools for "
"Bayesian statistics. Of particular interest for Bayesian modelling is `PyMC "
"<https://docs.pymc.io/>`_, which implements a probabilistic programming "
"language in Python."
msgstr ""
"**Pythonによるベイズ統計** : この章では、ベイズ統計のツールは扱いません。 "
"ベイズモデリングで特に興味深いのは、Pythonで確率的プログラミング言語を実装した `PyMC <https://docs.pymc.io/>`_ "
"です。"

#: ../../scientific-python-lectures/packages/statistics/index.rst:43
msgid ""
"**Read a statistics book**: The `Think stats "
"<https://greenteapress.com/wp/think-stats-2e>`_ book is available as free "
"PDF or in print and is a great introduction to statistics."
msgstr ""
"**統計の本を読む**: `Think stats <https://greenteapress.com/wp/think-stats-2e>`_ "
"ブックは無料のPDFまたは印刷物で入手でき、統計学の入門書として最適です。"

#: ../../scientific-python-lectures/packages/statistics/index.rst:53
msgid "**Why Python for statistics?**"
msgstr "**なぜ統計にPythonなのか？**"

#: ../../scientific-python-lectures/packages/statistics/index.rst:55
msgid ""
"R is a language dedicated to statistics. Python is a general-purpose "
"language with statistics modules. R has more statistical analysis features "
"than Python, and specialized syntaxes. However, when it comes to building "
"complex analysis pipelines that mix statistics with e.g. image analysis, "
"text mining, or control of a physical experiment, the richness of Python is "
"an invaluable asset."
msgstr ""
"Rは統計に特化した言語です。 Pythonは統計モジュールを備えた汎用言語です。 RはPythonよりも統計解析機能が豊富で、特殊な構文もあります。 "
"しかし、統計と画像解析、テキストマイニング、物理実験の制御などを組み合わせた複雑な解析パイプラインを構築する場合、Pythonの豊富さは貴重な資産となります。"

#: ../../scientific-python-lectures/packages/statistics/index.rst:65
msgid "Contents"
msgstr "各章"

#: ../../scientific-python-lectures/packages/statistics/index.rst:69
msgid "In this document, the Python inputs are represented with the sign \">>>\"."
msgstr ""

#: ../../scientific-python-lectures/packages/statistics/index.rst:74
msgid "**Disclaimer: Gender questions**"
msgstr ""

#: ../../scientific-python-lectures/packages/statistics/index.rst:76
msgid ""
"Some of the examples of this tutorial are chosen around gender questions. "
"The reason is that on such questions controlling the truth of a claim "
"actually matters to many people."
msgstr ""

#: ../../scientific-python-lectures/packages/statistics/index.rst:82
msgid "Data representation and interaction"
msgstr "データ表現とインタラクション"

#: ../../scientific-python-lectures/packages/statistics/index.rst:85
msgid "Data as a table"
msgstr "テーブルとしてのデータ"

#: ../../scientific-python-lectures/packages/statistics/index.rst:87
msgid ""
"The setting that we consider for statistical analysis is that of multiple "
"*observations* or *samples* described by a set of different *attributes* or "
"*features*. The data can than be seen as a 2D table, or matrix, with columns"
" giving the different attributes of the data, and rows the observations. For"
" instance, the data contained in :download:`examples/brain_size.csv`:"
msgstr ""
"統計分析で考慮する設定は、異なる *attributes* または *features* のセットによって記述された複数の *observations*"
" または *samples* "
"です。データは2次元の表として見ることができる、または行列で、列はデータのさまざまな属性を示します、そして観測結果を並べます。 例えば、 "
":download:`examples/brain_size.csv` に含まれるデータは:"

#: ../../scientific-python-lectures/packages/statistics/index.rst:100
msgid "The pandas data-frame"
msgstr "pandasのデータフレーム"

#: ../../scientific-python-lectures/packages/statistics/index.rst:104
msgid ""
"We will store and manipulate this data in a :class:`pandas.DataFrame`, from "
"the `pandas <https://pandas.pydata.org>`__ module. It is the Python "
"equivalent of the spreadsheet table. It is different from a 2D ``numpy`` "
"array as it has named columns, can contain a mixture of different data types"
" by column, and has elaborate selection and pivotal mechanisms."
msgstr ""
"このデータを `pandas <https://pandas.pydata.org>`__ モジュールから "
":class:`pandas.DataFrame` に保存し、操作します。 これはPythonのスプレッドシートテーブルに相当します。2次元の "
"``numpy`` 配列とは異なり、名前付きカラムを持ち、カラムごとに異なるデータ型を混在させることができ、精巧な選択機構とピボット機構を持っています。"

#: ../../scientific-python-lectures/packages/statistics/index.rst:112
msgid "Creating dataframes: reading data files or converting arrays"
msgstr "データフレームの作成: データファイルの読み込み、配列の変換"

#: ../../scientific-python-lectures/packages/statistics/index.rst-1
msgid "**Separator**"
msgstr "**セパレータ**"

#: ../../scientific-python-lectures/packages/statistics/index.rst:116
msgid "It is a CSV file, but the separator is \";\""
msgstr "CSVファイルですが、セパレータは \";\" です。"

#: ../../scientific-python-lectures/packages/statistics/index.rst:118
msgid ""
"**Reading from a CSV file:** Using the above CSV file that gives "
"observations of brain size and weight and IQ (Willerman et al. 1991), the "
"data are a mixture of numerical and categorical values::"
msgstr ""
"**CSVファイルからの読み込み:** 脳の大きさ、重さ、IQを示す上記のCSVファイルを使用します (Willerman et al. 1991), "
"データは数値とカテゴリー値の混合です::"

#: ../../scientific-python-lectures/packages/statistics/index.rst:133
msgid "**Missing values**"
msgstr "**欠損値**"

#: ../../scientific-python-lectures/packages/statistics/index.rst:135
msgid ""
"The weight of the second individual is missing in the CSV file. If we don't "
"specify the missing value (NA = not available) marker, we will not be able "
"to do statistical analysis."
msgstr ""
"2人目の体重がCSVファイルにありません。欠損値 (NA = not available) マーカーを指定しなければ、統計分析はできません。"

#: ../../scientific-python-lectures/packages/statistics/index.rst:141
msgid ""
"**Creating from arrays**: A :class:`pandas.DataFrame` can also be seen as a "
"dictionary of 1D 'series', eg arrays or lists. If we have 3 ``numpy`` "
"arrays::"
msgstr ""
"**配列からの作成**: :class:`pandas.DataFrame` は、配列やリストなどの1次元の 'series' "
"の辞書と見なすこともできます。 3つの ``numpy`` 配列があるとします::"

#: ../../scientific-python-lectures/packages/statistics/index.rst:150
msgid "We can expose them as a :class:`pandas.DataFrame`::"
msgstr ":class:`pandas.DataFrame` として触れることができます::"

#: ../../scientific-python-lectures/packages/statistics/index.rst:167
msgid ""
"**Other inputs**: `pandas <https://pandas.pydata.org>`__ can input data from"
" SQL, excel files, or other formats. See the `pandas documentation "
"<https://pandas.pydata.org>`__."
msgstr ""
"**その他のインプット**: `pandas <https://pandas.pydata.org>`__ "
"はSQL、エクセルファイル、その他のフォーマットからデータを入力することができます。 `pandas documentation "
"<https://pandas.pydata.org>`__ を参照してください。"

#: ../../scientific-python-lectures/packages/statistics/index.rst:174
msgid "Manipulating data"
msgstr "データの操作"

#: ../../scientific-python-lectures/packages/statistics/index.rst:176
msgid "`data` is a :class:`pandas.DataFrame`, that resembles R's dataframe::"
msgstr "`data` は :class:`pandas.DataFrame` で、Rのデータフレームに似ています::"

#: ../../scientific-python-lectures/packages/statistics/index.rst:198
msgid ""
"For a quick view on a large dataframe, use its `describe` method: "
":meth:`pandas.DataFrame.describe`."
msgstr ""
"大きなデータフレームを素早く表示するには、 `describe` メソッドを使用します: "
":meth:`pandas.DataFrame.describe`."

#: ../../scientific-python-lectures/packages/statistics/index.rst:203
msgid ""
"**groupby**: splitting a dataframe on values of categorical variables::"
msgstr "**groupby**: カテゴリ変数の値に関するデータフレームの分割::"

#: ../../scientific-python-lectures/packages/statistics/index.rst:212
msgid ""
"`groupby_gender` is a powerful object that exposes many operations on the "
"resulting group of dataframes::"
msgstr "`groupby_gender` は、結果のデータフレーム群に対する多くの操作を公開する強力なオブジェクトです::"

#: ../../scientific-python-lectures/packages/statistics/index.rst:224
msgid ""
"Use tab-completion on `groupby_gender` to find more.  Other common grouping "
"functions are median, count (useful for checking to see the amount of "
"missing values in different subsets) or sum.  Groupby evaluation is lazy, no"
" work is done until an aggregation function is applied."
msgstr ""
"`groupby_gender` でタブコンプリートを使えば、さらに検索できます。その他の一般的なグループ化関数には、median、count "
"(異なるサブセットにおける欠損値の量を確認するのに便利です)、sumがあります。Groupbyの評価は遅延的であり、集約関数が適用されるまでは何も行われません。"

#: ../../scientific-python-lectures/packages/statistics/index.rst-1
#: ../../scientific-python-lectures/packages/statistics/index.rst:174
msgid "**Exercise**"
msgstr "**例題**"

#: ../../scientific-python-lectures/packages/statistics/index.rst:242
msgid "What is the mean value for VIQ for the full population?"
msgstr "全母集団のVIQの平均値は？"

#: ../../scientific-python-lectures/packages/statistics/index.rst:243
msgid "How many males/females were included in this study?"
msgstr "この研究には何人の男女が参加しましたか？"

#: ../../scientific-python-lectures/packages/statistics/index.rst:245
msgid ""
"**Hint** use 'tab completion' to find out the methods that can be called, "
"instead of 'mean' in the above example."
msgstr "**ヒント** 上記の例では、 'mean' の代わりに 'tab completion' を使って、呼び出せるメソッドを調べます。"

#: ../../scientific-python-lectures/packages/statistics/index.rst:248
msgid ""
"What is the average value of MRI counts expressed in log units, for males "
"and females?"
msgstr "男性と女性のMRI回数の平均値を対数単位で表すと？"

#: ../../scientific-python-lectures/packages/statistics/index.rst:253
msgid ""
"`groupby_gender.boxplot` is used for the plots above (see `this example "
"<auto_examples/plot_pandas.html>`_)."
msgstr ""
"上記のプロットには `groupby_gender.boxplot` が使用されています ( `この例 "
"<auto_examples/plot_pandas.html>`_ を参照)。"

#: ../../scientific-python-lectures/packages/statistics/index.rst:259
msgid "Plotting data"
msgstr "データのプロット"

#: ../../scientific-python-lectures/packages/statistics/index.rst:263
msgid ""
"Pandas comes with some plotting tools (:mod:`pandas.plotting`, using "
"matplotlib behind the scene) to display statistics of the data in "
"dataframes:"
msgstr ""
"Pandasには、データフレーム内のデータの統計情報を表示するためのプロットツール (:mod:`pandas.plotting`, "
"裏でmatplotlibを使います) が用意されています:"

#: ../../scientific-python-lectures/packages/statistics/index.rst:267
msgid "**Scatter matrices**::"
msgstr "**散布図行列**::"

#: ../../scientific-python-lectures/packages/statistics/index.rst-1
msgid "**Two populations**"
msgstr "**2つの人口**"

#: ../../scientific-python-lectures/packages/statistics/index.rst:301
msgid "The IQ metrics are bimodal, as if there are 2 sub-populations."
msgstr "IQの指標は二峰性で、まるで2つの下位集団があるかのようです。"

#: ../../scientific-python-lectures/packages/statistics/index.rst:311
msgid ""
"Plot the scatter matrix for males only, and for females only. Do you think "
"that the 2 sub-populations correspond to gender?"
msgstr "男性のみ、女性のみの散布行列をプロットします。2つのサブ集団は性別に対応していると思いますか？"

#: ../../scientific-python-lectures/packages/statistics/index.rst:316
msgid "Hypothesis testing: comparing two groups"
msgstr "仮説検証: 2つのグループの比較"

#: ../../scientific-python-lectures/packages/statistics/index.rst:318
msgid ""
"For simple `statistical tests "
"<https://en.wikipedia.org/wiki/Statistical_hypothesis_testing>`_, we will "
"use the :mod:`scipy.stats` sub-module of `SciPy "
"<https://docs.scipy.org/doc/>`_::"
msgstr ""
"`単純な統計検定 <https://en.wikipedia.org/wiki/Statistical_hypothesis_testing>`_ "
"には、`SciPy <https://docs.scipy.org/doc/>`_ の :mod:`scipy.stats` "
"サブモジュールを使用します::"

#: ../../scientific-python-lectures/packages/statistics/index.rst:327
msgid ""
"SciPy is a vast library. For a quick summary to the whole library, see the "
":ref:`scipy <scipy>` chapter."
msgstr "SciPyは膨大なライブラリです。ライブラリ全体への簡単な要約は、 :ref:`scipy <scipy>` 章を参照してください。"

#: ../../scientific-python-lectures/packages/statistics/index.rst:332
msgid "Student's t-test: the simplest statistical test"
msgstr "Studentのt検定: 最も単純な統計検定"

#: ../../scientific-python-lectures/packages/statistics/index.rst:335
msgid "One-sample tests: testing the value of a population mean"
msgstr "標本検定: 母平均の検定"

#: ../../scientific-python-lectures/packages/statistics/index.rst:341
msgid ""
":func:`scipy.stats.ttest_1samp` tests the null hypothesis that the mean of "
"the population underlying the data is equal to a given value. It returns the"
" `T statistic <https://en.wikipedia.org/wiki/Student%27s_t-test>`_, and the "
"`p-value <https://en.wikipedia.org/wiki/P-value>`_ (see the function's "
"help)::"
msgstr ""
":func:`scipy.stats.ttest_1samp` は、データの基礎となる母集団の平均が与えられた値に等しいという帰無仮説を検定します。 "
"これは `T statistic <https://en.wikipedia.org/wiki/Student%27s_t-test>`_ と "
"`p-value <https://en.wikipedia.org/wiki/P-value>`_ を返します (関数のヘルプを参照) ::"

#: ../../scientific-python-lectures/packages/statistics/index.rst:350
msgid ""
"The p-value of :math:`10^-28` indicates that such an extreme value of the "
"statistic is unlikely to be observed under the null hypothesis. This may be "
"taken as evidence that the null hypothesis is false and that the population "
"mean IQ (VIQ measure) is not 0."
msgstr ""
":math:`10^-28` というp値は、帰無仮説のもとではこのような極端な統計量が観測される可能性は低いことを示しています。 "
"これは帰無仮説が偽であり、母集団の平均IQ（VIQ測定値）が0ではないことの証拠とみなすことができます。"

#: ../../scientific-python-lectures/packages/statistics/index.rst:355
msgid ""
"Technically, the p-value of the t-test is derived under the assumption that "
"the means of samples drawn from the population are normally distributed. "
"This condition is exactly satisfied when the population itself is normally "
"distributed; however, due to the central limit theorem, the condition is "
"nearly true for reasonably large samples drawn from populations that follow "
"a variety of non-normal distributions."
msgstr ""
"技術的には、t検定のp値は、母集団から抽出された標本の平均が正規分布しているという仮定の下で導かれます。この条件は、母集団自体が正規分布している場合に正確に満たされます;"
" しかし、中心極限定理により、この条件は、様々な非正規分布に従う母集団から引かれた適度に大きなサンプルに対してほぼ当てはまります。"

#: ../../scientific-python-lectures/packages/statistics/index.rst:362
msgid ""
"Nonetheless, if we are concerned that violation of the normality assumptions"
" will affect the conclusions of the test, we can use a `Wilcoxon signed-rank"
" test <https://en.wikipedia.org/wiki/Wilcoxon_signed-rank_test>`_, which "
"relaxes this assumption at the expense of test power::"
msgstr ""
"それにもかかわらず、正規性の仮定に違反することが検定の結論に影響することを懸念する場合、 `Wilcoxon signed-rank test "
"<https://en.wikipedia.org/wiki/Wilcoxon_signed-rank_test>`_ "
"を使えば、検定力を犠牲にしてこの仮定を緩和することができます::"

#: ../../scientific-python-lectures/packages/statistics/index.rst:371
msgid "Two-sample t-test: testing for difference across populations"
msgstr "二標本のt検定: 集団間の差の検定"

#: ../../scientific-python-lectures/packages/statistics/index.rst:373
msgid ""
"We have seen above that the mean VIQ in the male and female samples were "
"different. To test whether this difference is significant (and suggests that"
" there is a difference in population means), we perform a two-sample t-test "
"using :func:`scipy.stats.ttest_ind`::"
msgstr ""
"以上、男女の平均VIQが異なることを見てきました。この差が有意かどうかを検証するため (そして、母集団の平均値に差があることを示唆するため)、 "
":func:`scipy.stats.ttest_ind` を用いて2標本のt検定を行います::"

#: ../../scientific-python-lectures/packages/statistics/index.rst:383
msgid ""
"The corresponding non-parametric test is the `Mann–Whitney U test "
"<https://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U>`_, "
":func:`scipy.stats.mannwhitneyu`."
msgstr ""
"対応するノンパラメトリック検定は `Mann–Whitney U test "
"<https://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U>`_ 、 "
":func:`scipy.stats.mannwhitneyu` です。"

#: ../../scientific-python-lectures/packages/statistics/index.rst:391
msgid "Paired tests: repeated measurements on the same individuals"
msgstr "ペアテスト: 同一個体に対する反復測定"

#: ../../scientific-python-lectures/packages/statistics/index.rst:398
msgid ""
"PIQ, VIQ, and FSIQ give three measures of IQ. Let us test whether FISQ and "
"PIQ are significantly different. We can use an \"independent sample\" test::"
msgstr ""
"PIQ、VIQ、FSIQはIQの3つの尺度を与えます。 FISQとPIQが有意に異なるかどうかを検証してみましょう。 \"独立サンプル\" "
"テストを使用することができます::"

#: ../../scientific-python-lectures/packages/statistics/index.rst:404
msgid ""
"The problem with this approach is that it ignores an important relationship "
"between observations: FSIQ and PIQ are measured on the same individuals. "
"Thus, the variance due to inter-subject variability is confounding, reducing"
" the power of the test. This variability can be removed using a \"paired "
"test\" or `\"repeated measures test\" "
"<https://en.wikipedia.org/wiki/Repeated_measures_design>`_::"
msgstr ""
"このアプローチの問題点は、観測データ間の重要な関係を無視していることです: FSIQとPIQは同じ人を対象に測定されます。 "
"したがって、被験者間のばらつきによる分散は交絡となり、検定の検出力を低下させます。 このばらつきは、 \"対応のある検定\" または "
"`\"反復測定検定\"<https://en.wikipedia.org/wiki/Repeated_measures_design>`_ "
"を用いて取り除くことができます::"

#: ../../scientific-python-lectures/packages/statistics/index.rst:419
msgid ""
"This is equivalent to a one-sample test on the differences between paired "
"observations::"
msgstr "これは、一対のオブザベーション間の差に関する1標本検定に相当します::"

#: ../../scientific-python-lectures/packages/statistics/index.rst:425
msgid ""
"Accordingly, we can perform a nonparametric version of the test with "
"``wilcoxon``."
msgstr "したがって、 ``wilcoxon`` でノンパラメトリック版の検定を行うことができます。"

#: ../../scientific-python-lectures/packages/statistics/index.rst:434
msgid "Test the difference between weights in males and females."
msgstr "男性と女性の体重の差を調べます。"

#: ../../scientific-python-lectures/packages/statistics/index.rst:436
msgid ""
"Use non parametric statistics to test the difference between VIQ in males "
"and females."
msgstr "ノンパラメトリック統計を使って、男女のVIQの違いを検定します。"

#: ../../scientific-python-lectures/packages/statistics/index.rst:439
msgid ""
"**Conclusion**: we find that the data does not support the hypothesis that "
"males and females have different VIQ."
msgstr ""

#: ../../scientific-python-lectures/packages/statistics/index.rst:445
msgid "Linear models, multiple factors, and analysis of variance"
msgstr "線形モデル、多因子、分散分析"

#: ../../scientific-python-lectures/packages/statistics/index.rst:448
msgid "\"formulas\" to specify statistical models in Python"
msgstr "Pythonで統計モデルを指定する \"式\""

#: ../../scientific-python-lectures/packages/statistics/index.rst:458
msgid ""
"Given two set of observations, `x` and `y`, we want to test the hypothesis "
"that `y` is a linear function of `x`. In other terms:"
msgstr ""
"2組の観測値、 `x` と `y` が与えられたとき、我々は `y` が `x` の線形関数であるという仮説を検定したいです。 言い換えると:"

#: ../../scientific-python-lectures/packages/statistics/index.rst:461
msgid ":math:`y = x * \\textit{coef} + \\textit{intercept} + e`"
msgstr ":math:`y = x * \\textit{coef} + \\textit{intercept} + e`"

#: ../../scientific-python-lectures/packages/statistics/index.rst:463
msgid ""
"where `e` is observation noise. We will use the `statsmodels "
"<https://www.statsmodels.org/>`_ module to:"
msgstr ""
"ここで `e` は観測ノイズです。 `statsmodels <https://www.statsmodels.org/>`_ "
"モジュールを使って次のことを行います:"

#: ../../scientific-python-lectures/packages/statistics/index.rst:466
msgid ""
"Fit a linear model. We will use the simplest strategy, `ordinary least "
"squares <https://en.wikipedia.org/wiki/Ordinary_least_squares>`_ (OLS)."
msgstr ""
"線形モデルを当てはめます。 最も単純な戦略である `ordinary least squares "
"<https://en.wikipedia.org/wiki/Ordinary_least_squares>`_ (OLS) を使います。"

#: ../../scientific-python-lectures/packages/statistics/index.rst:469
msgid "Test that `coef` is non zero."
msgstr "`coef` がゼロでないことをテストします。"

#: ../../scientific-python-lectures/packages/statistics/index.rst:473
msgid "First, we generate simulated data according to the model::"
msgstr "まず、モデルに従ってシミュレーションデータを作成します::"

#: ../../scientific-python-lectures/packages/statistics/index.rst-1
msgid "**\"formulas\" for statistics in Python**"
msgstr "**Pythonによる統計の \"公式\"**"

#: ../../scientific-python-lectures/packages/statistics/index.rst:486
msgid ""
"`See the statsmodels documentation "
"<https://www.statsmodels.org/stable/example_formulas.html>`_"
msgstr ""
"`statsmodelsのドキュメントを参照 "
"<https://www.statsmodels.org/stable/example_formulas.html>`_"

#: ../../scientific-python-lectures/packages/statistics/index.rst:491
msgid "Then we specify an OLS model and fit it::"
msgstr "次に、OLSモデルを指定し、それを当てはめます::"

#: ../../scientific-python-lectures/packages/statistics/index.rst:496
msgid "We can inspect the various statistics derived from the fit::"
msgstr "fitから得られる様々な統計量を調べることができます::"

#: ../../scientific-python-lectures/packages/statistics/index.rst-1
msgid "Terminology:"
msgstr "用語解説:"

#: ../../scientific-python-lectures/packages/statistics/index.rst:527
msgid ""
"Statsmodels uses a statistical terminology: the `y` variable in statsmodels "
"is called 'endogenous' while the `x` variable is called exogenous.  This is "
"discussed in more detail `here "
"<https://www.statsmodels.org/devel/endog_exog.html>`_."
msgstr ""
"statsmodelsは統計用語を使用します: 統計モデルにおける `y` 変数は '内生的' と呼ばれ、 `x` 変数は '外生的' と呼ばれます。"
"  これについては、 `こちら<https://www.statsmodels.org/devel/endog_exog.html>`_ "
"で詳しく説明しています。"

#: ../../scientific-python-lectures/packages/statistics/index.rst:532
msgid ""
"To simplify, `y` (endogenous) is the value you are trying to predict, while "
"`x` (exogenous) represents the features you are using to make the "
"prediction."
msgstr ""
"単純化すると、 `y` (endogenous) は予測しようとする値で、 `x` (exogenous) は予測を行うために使用する特徴を表します。"

#: ../../scientific-python-lectures/packages/statistics/index.rst:540
msgid ""
"Retrieve the estimated parameters from the model above. **Hint**: use tab-"
"completion to find the relevant attribute."
msgstr "上記のモデルから推定されたパラメータを取得します。 **ヒント**: タブ補完を使って関連する属性を見つけます。"

#: ../../scientific-python-lectures/packages/statistics/index.rst:546
msgid "Categorical variables: comparing groups or multiple categories"
msgstr "カテゴリー変数: グループまたは複数のカテゴリーを比較する"

#: ../../scientific-python-lectures/packages/statistics/index.rst:548
msgid "Let us go back the data on brain size::"
msgstr "脳の大きさに関するデータに戻りましょう::"

#: ../../scientific-python-lectures/packages/statistics/index.rst:552
msgid ""
"We can write a comparison between IQ of male and female using a linear "
"model::"
msgstr "男性と女性のIQの比較は、線形モデルを使って書くことができます::"

#: ../../scientific-python-lectures/packages/statistics/index.rst:546
msgid "**Tips on specifying model**"
msgstr "**モデルを指定する際のヒント**"

#: ../../scientific-python-lectures/packages/statistics/index.rst:585
msgid ""
"**Forcing categorical**: the 'Gender' is automatically detected as a "
"categorical variable, and thus each of its different values are treated as "
"different entities."
msgstr ""
"**カテゴリーを強制する**: 'Gender' "
"は自動的にカテゴリー変数として検出されるため、その異なる値はそれぞれ異なるエンティティとして扱われます。"

#: ../../scientific-python-lectures/packages/statistics/index.rst:589
msgid "An integer column can be forced to be treated as categorical using::"
msgstr "整数カラムをカテゴリーとして扱うには::"

#: ../../scientific-python-lectures/packages/statistics/index.rst:593
msgid ""
"**Intercept**: We can remove the intercept using `- 1` in the formula, or "
"force the use of an intercept using `+ 1`."
msgstr ""
"**インターセプト**: 式の中で `- 1` を使って切片を取り除くこともできるし、 `+ 1` を使って切片を強制的に使うこともできます。"

#: ../../scientific-python-lectures/packages/statistics/index.rst:598
msgid ""
"By default, statsmodels treats a categorical variable with K possible values"
" as K-1 'dummy' boolean variables (the last level being absorbed into the "
"intercept term).  This is almost always a good default choice - however, it "
"is possible to specify different encodings for categorical variables "
"(https://www.statsmodels.org/devel/contrasts.html)."
msgstr ""
"デフォルトでは、statsmodelsは、K個の可能な値を持つカテゴリー変数をK-1個の 'ダミー' ブーリアン変数として扱います "
"(最後のレベルは切片項に吸収されます) 。 これは、ほとんどの場合、デフォルトの良い選択です - "
"しかし、カテゴリー変数に対して異なるエンコーディングを指定することは可能です "
"(https://www.statsmodels.org/devel/contrasts.html) 。"

#: ../../scientific-python-lectures/packages/statistics/index.rst-1
msgid "**Link to t-tests between different FSIQ and PIQ**"
msgstr "**異なるFSIQとPIQ間のt検定へのリンク**"

#: ../../scientific-python-lectures/packages/statistics/index.rst:610
msgid ""
"To compare different types of IQ, we need to create a \"long-form\" table, "
"listing IQs, where the type of IQ is indicated by a categorical variable::"
msgstr ""
"異なるタイプのIQを比較します、 \"ロングフォーム\" "
"テーブルを作成する必要があります、IQのタイプはカテゴリー変数で示されるため、IQを記載します::"

#: ../../scientific-python-lectures/packages/statistics/index.rst:644
msgid ""
"We can see that we retrieve the same values for t-test and corresponding "
"p-values for the effect of the type of iq than the previous t-test::"
msgstr "t検定でも同じ値が得られることがわかります、そして、 iqのタイプの効果について、前のt検定よりも対応するp値です::"

#: ../../scientific-python-lectures/packages/statistics/index.rst:653
msgid "Multiple Regression: including multiple factors"
msgstr "重回帰: 複数の要因を含む"

#: ../../scientific-python-lectures/packages/statistics/index.rst:662
msgid ""
"Consider a linear model explaining a variable `z` (the dependent variable) "
"with 2 variables `x` and `y`:"
msgstr "変数 `z`  (従属変数) を2つの変数 `x` と `y` で説明する線形モデルを考えます:"

#: ../../scientific-python-lectures/packages/statistics/index.rst:665
msgid ":math:`z = x \\, c_1 + y \\, c_2 + i + e`"
msgstr ":math:`z = x \\, c_1 + y \\, c_2 + i + e`"

#: ../../scientific-python-lectures/packages/statistics/index.rst:667
msgid ""
"Such a model can be seen in 3D as fitting a plane to a cloud of (`x`, `y`, "
"`z`) points."
msgstr "このようなモデルは、 (`x`, `y`, `z`) 点の雲に平面を当てはめるように3Dで見ることができます。"

#: ../../scientific-python-lectures/packages/statistics/index.rst:673
msgid "**Example: the iris data** (:download:`examples/iris.csv`)"
msgstr "**例: アヤメの花データ** (:download:`examples/iris.csv`)"

#: ../../scientific-python-lectures/packages/statistics/index.rst:677
msgid ""
"Sepal and petal size tend to be related: bigger flowers are bigger! But is "
"there in addition a systematic effect of species?"
msgstr "がく片と花弁の大きさは関連する傾向があります: 大きな花はより大きいです！ しかし、それに加えて種による系統的な影響もあるのでしょうか？"

#: ../../scientific-python-lectures/packages/statistics/index.rst:721
msgid "Post-hoc hypothesis testing: analysis of variance (ANOVA)"
msgstr "事後仮説検定: 分散分析 (ANOVA)"

#: ../../scientific-python-lectures/packages/statistics/index.rst:723
msgid ""
"In the above iris example, we wish to test if the petal length is different "
"between versicolor and virginica, after removing the effect of sepal width. "
"This can be formulated as testing the difference between the coefficient "
"associated to versicolor and virginica in the linear model estimated above "
"(it is an Analysis of Variance, `ANOVA "
"<https://en.wikipedia.org/wiki/Analysis_of_variance>`_). For this, we write "
"a **vector of 'contrast'** on the parameters estimated: we want to test "
"``\"name[T.versicolor] - name[T.virginica]\"``, with an `F-test "
"<https://en.wikipedia.org/wiki/F-test>`_::"
msgstr ""
"上記のアヤメの例では、萼片の幅の影響を取り除いた上で、花弁の長さがversicolorとvirginicaで異なるかどうかを検証したいです。これは、上記で推定された線形モデルにおいて、versicolorとvirginicaに関連する係数の差を検定することとして定式化することができます。"
" (これは分散分析です、 `ANOVA <https://en.wikipedia.org/wiki/Analysis_of_variance>`_)。"
" このために、推定されたパラメーターに ** 'コントラスト' のベクトル** を書きます: ``\"name[T.versicolor] - "
"name[T.virginica]\"`` を `F-test <https://en.wikipedia.org/wiki/F-test>`_ "
"でテストしたいです::"

#: ../../scientific-python-lectures/packages/statistics/index.rst:736
msgid "Is this difference significant?"
msgstr "この違いは重要なのでしょうか？"

#: ../../scientific-python-lectures/packages/statistics/index.rst:751
msgid "More visualization: seaborn for statistical exploration"
msgstr "さらなる視覚化: 統計探索のためのseaborn"

#: ../../scientific-python-lectures/packages/statistics/index.rst:753
msgid ""
"`Seaborn <https://seaborn.pydata.org>`_ combines simple statistical fits "
"with plotting on pandas dataframes."
msgstr ""
"`Seaborn <https://seaborn.pydata.org>`_ "
"は、単純な統計的あてはめとpandasデータフレームへのプロットを組み合わせたものです。"

#: ../../scientific-python-lectures/packages/statistics/index.rst:756
msgid ""
"Let us consider a data giving wages and many other personal information on "
"500 individuals (`Berndt, ER. The Practice of Econometrics. 1991. NY: "
"Addison-Wesley <https://lib.stat.cmu.edu/datasets/CPS_85_Wages>`_)."
msgstr ""
"500人分の賃金やその他多くの個人情報が記載されたデータを考えてみましょう (`Berndt, ER. The Practice of "
"Econometrics. 1991. NY: Addison-Wesley "
"<https://lib.stat.cmu.edu/datasets/CPS_85_Wages>`_)。"

#: ../../scientific-python-lectures/packages/statistics/index.rst:762
msgid ""
"The full code loading and plotting of the wages data is found in "
"`corresponding example <auto_examples/plot_wage_data.html>`_."
msgstr ""
"賃金データのロードとプロットの完全なコードは、 `対応する例にあります  <auto_examples/plot_wage_data.html>`_ 。"

#: ../../scientific-python-lectures/packages/statistics/index.rst:776
msgid "Pairplot: scatter matrices"
msgstr "Pairplot: 散布行列"

#: ../../scientific-python-lectures/packages/statistics/index.rst:778
msgid ""
"We can easily have an intuition on the interactions between continuous "
"variables using :func:`seaborn.pairplot` to display a scatter matrix::"
msgstr ""
"連続変数間の相互作用散布行列を表示するために :func:`seaborn.pairplot` "
"を使用することにより、私たちは簡単に直感を持つことができます::"

#: ../../scientific-python-lectures/packages/statistics/index.rst:791
msgid "Categorical variables can be plotted as the hue::"
msgstr "カテゴリー変数は、色相としてプロットすることができます::"

#: ../../scientific-python-lectures/packages/statistics/index.rst:776
msgid "**Look and feel and matplotlib settings**"
msgstr "**ルック&フィールとmatplotlibの設定**"

#: ../../scientific-python-lectures/packages/statistics/index.rst:804
msgid ""
"Seaborn changes the default of matplotlib figures to achieve a more "
"\"modern\", \"excel-like\" look. It does that upon import. You can reset the"
" default using::"
msgstr ""
"Seabornはmatplotlibの図形のデフォルトを変更し、より \"モダン\" で \"Excelライク\" な外観を実現します。 "
"インポート時にそうなります。 デフォルトをリセットするには::"

#: ../../scientific-python-lectures/packages/statistics/index.rst:813
msgid ""
"To switch back to seaborn settings, or understand better styling in seaborn,"
" see the `relevant section of the seaborn documentation "
"<https://seaborn.pydata.org/tutorial/aesthetics.html>`_."
msgstr ""
"seabornの設定に戻したり、seabornのスタイリングをよりよく理解したりするには、 "
"`seabornドキュメントの該当セクション<https://seaborn.pydata.org/tutorial/aesthetics.html>`_"
" を参照してください 。"

#: ../../scientific-python-lectures/packages/statistics/index.rst:819
msgid "lmplot: plotting a univariate regression"
msgstr "lmplot: 単変量回帰のプロット"

#: ../../scientific-python-lectures/packages/statistics/index.rst:826
msgid ""
"A regression capturing the relation between one variable and another, eg "
"wage, and education, can be plotted using :func:`seaborn.lmplot`::"
msgstr ""
"ある変数と別の変数、例えば賃金と学歴の関係を表す回帰は、 :func:`seaborn.lmplot` を使ってプロットすることができます::"

#: ../../scientific-python-lectures/packages/statistics/index.rst-1
msgid "**Robust regression**"
msgstr "**ロバスト回帰**"

#: ../../scientific-python-lectures/packages/statistics/index.rst:839
msgid ""
"Given that, in the above plot, there seems to be a couple of data points "
"that are outside of the main cloud to the right, they might be outliers, not"
" representative of the population, but driving the regression."
msgstr ""
"上のプロットでは、右側の雲から外れたデータポイントがいくつかあるように見えますが、これは外れ値であり、母集団を代表するものではないが、回帰を推進しているのかもしれません。"

#: ../../scientific-python-lectures/packages/statistics/index.rst:844
msgid ""
"To compute a regression that is less sensitive to outliers, one must use a "
"`robust model <https://en.wikipedia.org/wiki/Robust_statistics>`_. This is "
"done in seaborn using ``robust=True`` in the plotting functions, or in "
"statsmodels by replacing the use of the OLS by a \"Robust Linear Model\", "
":func:`statsmodels.formula.api.rlm`."
msgstr ""
"外れ値の影響を受けにくい回帰を計算するには、 `robust model "
"<https://en.wikipedia.org/wiki/Robust_statistics>`_ "
"を使用する必要があります。これは、seabornではプロット関数に ``robust=True`` を使用し、statsmodelsではOLSの使用を "
"\"Robust Linear Model\", :func:`statsmodels.formula.api.rlm` "
"に置き換えることによって行われます。"

#: ../../scientific-python-lectures/packages/statistics/index.rst:853
msgid "Testing for interactions"
msgstr "相互作用のテスト"

#: ../../scientific-python-lectures/packages/statistics/index.rst:860
msgid "Do wages increase more with education for males than females?"
msgstr "賃金は女性より男性の方が学歴とともに上昇するのでしょうか？"

#: ../../scientific-python-lectures/packages/statistics/index.rst:864
msgid ""
"The plot above is made of two different fits. We need to formulate a single "
"model that tests for a variance of slope across the two populations. This is"
" done via an `\"interaction\" "
"<https://www.statsmodels.org/devel/example_formulas.html#multiplicative-"
"interactions>`_."
msgstr ""

#: ../../scientific-python-lectures/packages/statistics/index.rst:885
msgid "Can we conclude that education benefits males more than females?"
msgstr ""

#: ../../scientific-python-lectures/packages/statistics/index.rst:853
msgid "**Take home messages**"
msgstr "**持ち帰りメッセージ**"

#: ../../scientific-python-lectures/packages/statistics/index.rst:891
msgid ""
"Hypothesis testing and p-values give you the **significance** of an effect /"
" difference."
msgstr "仮説検定とp値は、効果 / 差の **有意性** を示します。"

#: ../../scientific-python-lectures/packages/statistics/index.rst:894
msgid ""
"**Formulas** (with categorical variables) enable you to express rich links "
"in your data."
msgstr "(カテゴリ変数を使った) **数式** によって、データ内のリッチなリンクを表現することができます。"

#: ../../scientific-python-lectures/packages/statistics/index.rst:897
msgid ""
"**Visualizing** your data and fitting simple models give insight into the "
"data."
msgstr "データを **視覚化** し、簡単なモデルを当てはめることで、データに対する洞察が得られます。"

#: ../../scientific-python-lectures/packages/statistics/index.rst:900
msgid ""
"**Conditionning** (adding factors that can explain all or part of the "
"variation) is an important modeling aspect that changes the interpretation."
msgstr "**コンディショニング** (変動のすべてまたは一部を説明できる要因を加える) は解釈を変える重要なモデリングアスペクトです。"

#: ../../scientific-python-lectures/packages/sympy.rst:8
msgid "Sympy : Symbolic Mathematics in Python"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:10
msgid "**Author**: *Fabian Pedregosa*"
msgstr "**著者**: *Fabian Pedregosa*"

#: ../../scientific-python-lectures/packages/sympy.rst:8
msgid "Objectives"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:14
msgid "Evaluate expressions with arbitrary precision."
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:15
msgid "Perform algebraic manipulations on symbolic expressions."
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:16
msgid "Perform basic calculus tasks (limits, differentiation and"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:17
msgid "integration) with symbolic expressions."
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:18
msgid "Solve polynomial and transcendental equations."
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:19
msgid "Solve some differential equations."
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:23
msgid ""
"**What is SymPy?** SymPy is a Python library for symbolic mathematics. It "
"aims to be an alternative to systems such as Mathematica or Maple while "
"keeping the code as simple as possible and easily extensible.  SymPy is "
"written entirely in Python and does not require any external libraries."
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:29
msgid ""
"Sympy documentation and packages for installation can be found on "
"https://www.sympy.org/"
msgstr "Sympy のドキュメントとインストール用パッケージは https://www.sympy.org/ にあります。"

#: ../../scientific-python-lectures/packages/sympy.rst:38
msgid "First Steps with SymPy"
msgstr "SymPyの第一歩"

#: ../../scientific-python-lectures/packages/sympy.rst:42
msgid "Using SymPy as a calculator"
msgstr "SymPyを電卓として使う"

#: ../../scientific-python-lectures/packages/sympy.rst:44
msgid ""
"SymPy defines three numerical types: ``Real``, ``Rational`` and ``Integer``."
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:46
msgid ""
"The Rational class represents a rational number as a pair of two Integers: "
"the numerator and the denominator, so ``Rational(1, 2)`` represents 1/2, "
"``Rational(5, 2)`` 5/2 and so on::"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:59
msgid ""
"SymPy uses mpmath in the background, which makes it possible to perform "
"computations using arbitrary-precision arithmetic. That way, some special "
"constants, like :math:`e`, :math:`pi`, :math:`oo` (Infinity), are treated as"
" symbols and can be evaluated with arbitrary precision::"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:74
msgid ""
"as you see, ``evalf`` evaluates the expression to a floating-point number."
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:76
msgid ""
"There is also a class representing mathematical infinity, called ``oo``::"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:42
#: ../../scientific-python-lectures/packages/sympy.rst:155
#: ../../scientific-python-lectures/packages/sympy.rst:251
#: ../../scientific-python-lectures/packages/sympy.rst:325
#: ../../scientific-python-lectures/packages/sympy.rst:421
msgid "**Exercises**"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:88
msgid "Calculate :math:`\\sqrt{2}` with 100 decimals."
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:89
msgid "Calculate :math:`1/2 + 1/3` in rational arithmetic."
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:93
msgid "Symbols"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:95
msgid ""
"In contrast to other Computer Algebra Systems, in SymPy you have to declare "
"symbolic variables explicitly::"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:101
msgid "Then you can manipulate them::"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:109
msgid ""
"Symbols can now be manipulated using some of python operators: ``+``, ``-``,"
" ``*``, ``**`` (arithmetic), ``&``, ``|``, ``~``, ``>>``, ``<<`` (boolean)."
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:93
msgid "**Printing**"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:115
msgid ""
"Sympy allows for control of the display of the output. From here we use the "
"following setting for printing::"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:123
msgid "Algebraic manipulations"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:125
msgid ""
"SymPy is capable of performing powerful algebraic manipulations. We'll take "
"a look into some of the most frequently used: expand and simplify."
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:129
msgid "Expand"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:131
msgid ""
"Use this to expand an algebraic expression. It will try to denest powers and"
" multiplications::"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:142
msgid "Further options can be given in form on keywords::"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:155
msgid "Simplify"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:157
msgid ""
"Use simplify if you would like to transform an expression into a simpler "
"form::"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:164
msgid ""
"Simplification is a somewhat vague term, and more precises alternatives to "
"simplify exists: ``powsimp`` (simplification of exponents), ``trigsimp`` "
"(for trigonometric expressions) , ``logcombine``, ``radsimp``, together."
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:172
msgid "Calculate the expanded form of :math:`(x+y)^6`."
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:173
msgid "Simplify the trigonometric expression :math:`\\sin(x) / \\cos(x)`"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:177
msgid "Calculus"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:180
msgid "Limits"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:182
msgid ""
"Limits are easy to use in SymPy, they follow the syntax ``limit(function, "
"variable, point)``, so to compute the limit of :math:`f(x)` as :math:`x "
"\\rightarrow 0`, you would issue ``limit(f, x, 0)``::"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:189
msgid "you can also calculate the limit at infinity::"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:204
msgid "Differentiation"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:206
msgid ""
"You can differentiate any SymPy expression using ``diff(func, var)``. "
"Examples::"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:218
msgid "You can check that it is correct by::"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:226
msgid "Which is equivalent since"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:228
msgid ""
"\\sec(x) = \\frac{1}{\\cos(x)} and \\sec^2(x) = \\tan^2(x) + 1.\n"
"\n"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:230
msgid "You can check this as well::"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:238
msgid ""
"Higher derivatives can be calculated using the ``diff(func, var, n)`` "
"method::"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:251
msgid "Series expansion"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:253
msgid ""
"SymPy also knows how to compute the Taylor series of an expression at a "
"point. Use ``series(expr, var)``::"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:271
msgid "Calculate :math:`\\lim_{x\\rightarrow 0} \\sin(x)/x`"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:272
msgid "Calculate the derivative of :math:`log(x)` for :math:`x`."
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:277
msgid "Integration"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:279
msgid ""
"SymPy has support for indefinite and definite integration of transcendental "
"elementary and special functions via ``integrate()`` facility, which uses "
"the powerful extended Risch-Norman algorithm and some heuristics and pattern"
" matching. You can integrate elementary functions::"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:295
msgid "Also special functions are handled easily::"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:303
msgid "It is possible to compute definite integral::"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:312
msgid "Also improper integrals are supported as well::"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:325
msgid "Equation solving"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:327
msgid ""
"SymPy is able to solve algebraic equations, in one and several variables "
"using :func:`~sympy.solveset`::"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:333
msgid ""
"As you can see it takes as first argument an expression that is supposed to "
"be equaled to 0. It also has (limited) support for transcendental "
"equations::"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst-1
msgid "**Systems of linear equations**"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:342
msgid ""
"Sympy is able to solve a large part of polynomial equations, and is also "
"capable of solving multiple equations with respect to multiple variables "
"giving a tuple as second argument. To do this you use the "
":func:`~sympy.solve` command::"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:351
msgid ""
"Another alternative in the case of polynomial equations is `factor`. "
"`factor` returns the polynomial factorized into irreducible terms, and is "
"capable of computing the factorization over various domains::"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:365
msgid ""
"SymPy is also able to solve boolean equations, that is, to decide if a "
"certain boolean expression is satisfiable or not. For this, we use the "
"function satisfiable::"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:372
msgid ""
"This tells us that ``(x & y)`` is True whenever ``x`` and ``y`` are both "
"True. If an expression cannot be true, i.e. no values of its arguments can "
"make the expression True, it will return False::"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:384
msgid ""
"Solve the system of equations :math:`x + y = 2`, :math:`2\\cdot x + y = 0`"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:385
msgid ""
"Are there boolean values ``x``, ``y`` that make ``(~x | y) & (~y | x)`` "
"true?"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:389
msgid "Linear Algebra"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:394
msgid "Matrices"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:396
msgid "Matrices are created as instances from the Matrix class::"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:403
msgid "unlike a NumPy array, you can also put Symbols in it::"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:421
msgid "Differential Equations"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:423
msgid ""
"SymPy is capable of solving (some) Ordinary Differential. To solve "
"differential equations, use dsolve. First, create an undefined function by "
"passing cls=Function to the symbols function::"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:429
msgid ""
"f and g are now undefined functions. We can call f(x), and it will represent"
" an unknown function::"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:446
msgid ""
"Keyword arguments can be given to this function in order to help if find the"
" best possible resolution system. For example, if you know that it is a "
"separable equations, you can use keyword ``hint='separable'`` to force "
"dsolve to resolve it as a separable equation::"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:461
msgid "Solve the Bernoulli differential equation"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:463
msgid ""
"x \\frac{d f(x)}{x} + f(x) - f(x)^2=0\n"
"\n"
msgstr ""

#: ../../scientific-python-lectures/packages/sympy.rst:466
msgid ""
"Solve the same equation using ``hint='Bernoulli'``. What do you observe ?"
msgstr ""
